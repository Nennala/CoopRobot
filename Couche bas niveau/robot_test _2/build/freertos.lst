ARM GAS  /tmp/ccbromZW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"freertos.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.alumer_gauche,"ax",%progbits
  22              		.align	2
  23              		.global	alumer_gauche
  24              		.thumb
  25              		.thumb_func
  27              	alumer_gauche:
  28              	.LFB129:
  29              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  /tmp/ccbromZW.s 			page 2


  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** /* USER CODE END Includes */
  58:Src/freertos.c **** 
  59:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  60:Src/freertos.c **** 
  61:Src/freertos.c **** /* USER CODE BEGIN Variables */
  62:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  63:Src/freertos.c **** 
  64:Src/freertos.c **** int deplacement_fini = 0;
  65:Src/freertos.c **** /* USER CODE END Variables */
  66:Src/freertos.c **** 
  67:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  68:Src/freertos.c **** 
  69:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  70:Src/freertos.c **** 
  71:Src/freertos.c **** void alumer_gauche(int sens) {
  30              		.loc 1 71 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  72:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  42              		.loc 1 72 0
  43 0002 0546     		mov	r5, r0
ARM GAS  /tmp/ccbromZW.s 			page 3


  44 0004 064C     		ldr	r4, .L3
  45 0006 B0FA80F2 		clz	r2, r0
  46 000a 5209     		lsrs	r2, r2, #5
  47 000c 0221     		movs	r1, #2
  48 000e 2046     		mov	r0, r4
  49              	.LVL1:
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  51              	.LVL2:
  73:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  52              		.loc 1 73 0
  53 0014 EAB2     		uxtb	r2, r5
  54 0016 0121     		movs	r1, #1
  55 0018 2046     		mov	r0, r4
  56 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58 001e 38BD     		pop	{r3, r4, r5, pc}
  59              	.LVL4:
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00140048 		.word	1207964672
  64              		.cfi_endproc
  65              	.LFE129:
  67              		.section	.text.alumer_droite,"ax",%progbits
  68              		.align	2
  69              		.global	alumer_droite
  70              		.thumb
  71              		.thumb_func
  73              	alumer_droite:
  74              	.LFB130:
  74:Src/freertos.c **** }
  75:Src/freertos.c **** 
  76:Src/freertos.c **** void alumer_droite(int sens) {
  75              		.loc 1 76 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL5:
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
  77:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  85              		.loc 1 77 0
  86 0002 0446     		mov	r4, r0
  87 0004 B0FA80F2 		clz	r2, r0
  88 0008 5209     		lsrs	r2, r2, #5
  89 000a 4FF40061 		mov	r1, #2048
  90 000e 4FF09040 		mov	r0, #1207959552
  91              	.LVL6:
  92 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL7:
  78:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  94              		.loc 1 78 0
  95 0016 E2B2     		uxtb	r2, r4
  96 0018 2021     		movs	r1, #32
ARM GAS  /tmp/ccbromZW.s 			page 4


  97 001a 0248     		ldr	r0, .L7
  98 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 100 0020 10BD     		pop	{r4, pc}
 101              	.LVL9:
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 00040048 		.word	1207960576
 106              		.cfi_endproc
 107              	.LFE130:
 109              		.section	.text.eteindre_gauche,"ax",%progbits
 110              		.align	2
 111              		.global	eteindre_gauche
 112              		.thumb
 113              		.thumb_func
 115              	eteindre_gauche:
 116              	.LFB131:
  79:Src/freertos.c **** }
  80:Src/freertos.c **** 
  81:Src/freertos.c **** void eteindre_gauche() {
 117              		.loc 1 81 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
  82:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 126              		.loc 1 82 0
 127 0002 064C     		ldr	r4, .L11
 128 0004 0022     		movs	r2, #0
 129 0006 0221     		movs	r1, #2
 130 0008 2046     		mov	r0, r4
 131 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
  83:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 133              		.loc 1 83 0
 134 000e 0022     		movs	r2, #0
 135 0010 0121     		movs	r1, #1
 136 0012 2046     		mov	r0, r4
 137 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL11:
 139 0018 10BD     		pop	{r4, pc}
 140              	.L12:
 141 001a 00BF     		.align	2
 142              	.L11:
 143 001c 00140048 		.word	1207964672
 144              		.cfi_endproc
 145              	.LFE131:
 147              		.section	.text.eteindre_droite,"ax",%progbits
 148              		.align	2
 149              		.global	eteindre_droite
 150              		.thumb
 151              		.thumb_func
ARM GAS  /tmp/ccbromZW.s 			page 5


 153              	eteindre_droite:
 154              	.LFB132:
  84:Src/freertos.c **** }
  85:Src/freertos.c **** 
  86:Src/freertos.c **** void eteindre_droite() {
 155              		.loc 1 86 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
  87:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 164              		.loc 1 87 0
 165 0002 0022     		movs	r2, #0
 166 0004 4FF40061 		mov	r1, #2048
 167 0008 4FF09040 		mov	r0, #1207959552
 168 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL12:
  88:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 170              		.loc 1 88 0
 171 0010 0022     		movs	r2, #0
 172 0012 2021     		movs	r1, #32
 173 0014 0148     		ldr	r0, .L15
 174 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL13:
 176 001a 08BD     		pop	{r3, pc}
 177              	.L16:
 178              		.align	2
 179              	.L15:
 180 001c 00040048 		.word	1207960576
 181              		.cfi_endproc
 182              	.LFE132:
 184              		.section	.text.accelerer,"ax",%progbits
 185              		.align	2
 186              		.global	accelerer
 187              		.thumb
 188              		.thumb_func
 190              	accelerer:
 191              	.LFB133:
  89:Src/freertos.c **** }
  90:Src/freertos.c **** 
  91:Src/freertos.c **** void accelerer() {
 192              		.loc 1 91 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 10B5     		push	{r4, lr}
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201              	.LVL14:
  92:Src/freertos.c ****     int pwm = 0;
 202              		.loc 1 92 0
ARM GAS  /tmp/ccbromZW.s 			page 6


 203 0002 0024     		movs	r4, #0
  93:Src/freertos.c ****     while (pwm != 320) {
 204              		.loc 1 93 0
 205 0004 07E0     		b	.L18
 206              	.LVL15:
 207              	.L19:
  94:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 208              		.loc 1 94 0
 209 0006 064B     		ldr	r3, .L21
 210 0008 1B68     		ldr	r3, [r3]
 211 000a 5C63     		str	r4, [r3, #52]
  95:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 212              		.loc 1 95 0
 213 000c 1C64     		str	r4, [r3, #64]
  96:Src/freertos.c ****         pwm += 20;
 214              		.loc 1 96 0
 215 000e 1434     		adds	r4, r4, #20
 216              	.LVL16:
  97:Src/freertos.c ****         osDelay(50);
 217              		.loc 1 97 0
 218 0010 3220     		movs	r0, #50
 219 0012 FFF7FEFF 		bl	osDelay
 220              	.LVL17:
 221              	.L18:
  93:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 222              		.loc 1 93 0
 223 0016 B4F5A07F 		cmp	r4, #320
 224 001a F4D1     		bne	.L19
  98:Src/freertos.c ****     }
  99:Src/freertos.c **** }
 225              		.loc 1 99 0
 226 001c 10BD     		pop	{r4, pc}
 227              	.LVL18:
 228              	.L22:
 229 001e 00BF     		.align	2
 230              	.L21:
 231 0020 00000000 		.word	htim3
 232              		.cfi_endproc
 233              	.LFE133:
 235              		.section	.text.deccelerer,"ax",%progbits
 236              		.align	2
 237              		.global	deccelerer
 238              		.thumb
 239              		.thumb_func
 241              	deccelerer:
 242              	.LFB134:
 100:Src/freertos.c **** 
 101:Src/freertos.c **** void deccelerer() {
 243              		.loc 1 101 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 10B5     		push	{r4, lr}
 248              	.LCFI5:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
 251              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbromZW.s 			page 7


 252              	.LVL19:
 102:Src/freertos.c ****     int pwm = 320;
 253              		.loc 1 102 0
 254 0002 4FF4A074 		mov	r4, #320
 103:Src/freertos.c ****     while (pwm != 0) {
 255              		.loc 1 103 0
 256 0006 07E0     		b	.L24
 257              	.LVL20:
 258              	.L25:
 104:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 259              		.loc 1 104 0
 260 0008 054B     		ldr	r3, .L27
 261 000a 1B68     		ldr	r3, [r3]
 262 000c 5C63     		str	r4, [r3, #52]
 105:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 263              		.loc 1 105 0
 264 000e 1C64     		str	r4, [r3, #64]
 106:Src/freertos.c ****         pwm -= 20;
 265              		.loc 1 106 0
 266 0010 143C     		subs	r4, r4, #20
 267              	.LVL21:
 107:Src/freertos.c ****         osDelay(50);
 268              		.loc 1 107 0
 269 0012 3220     		movs	r0, #50
 270 0014 FFF7FEFF 		bl	osDelay
 271              	.LVL22:
 272              	.L24:
 103:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 273              		.loc 1 103 0
 274 0018 002C     		cmp	r4, #0
 275 001a F5D1     		bne	.L25
 108:Src/freertos.c ****     }
 109:Src/freertos.c **** }
 276              		.loc 1 109 0
 277 001c 10BD     		pop	{r4, pc}
 278              	.LVL23:
 279              	.L28:
 280 001e 00BF     		.align	2
 281              	.L27:
 282 0020 00000000 		.word	htim3
 283              		.cfi_endproc
 284              	.LFE134:
 286              		.section	.text.reculer_robot,"ax",%progbits
 287              		.align	2
 288              		.global	reculer_robot
 289              		.thumb
 290              		.thumb_func
 292              	reculer_robot:
 293              	.LFB135:
 110:Src/freertos.c **** 
 111:Src/freertos.c **** void reculer_robot() {
 294              		.loc 1 111 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI6:
ARM GAS  /tmp/ccbromZW.s 			page 8


 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
 112:Src/freertos.c ****     alumer_droite(1);
 303              		.loc 1 112 0
 304 0002 0120     		movs	r0, #1
 305 0004 FFF7FEFF 		bl	alumer_droite
 306              	.LVL24:
 113:Src/freertos.c ****     alumer_gauche(1);
 307              		.loc 1 113 0
 308 0008 0120     		movs	r0, #1
 309 000a FFF7FEFF 		bl	alumer_gauche
 310              	.LVL25:
 114:Src/freertos.c ****     accelerer();
 311              		.loc 1 114 0
 312 000e FFF7FEFF 		bl	accelerer
 313              	.LVL26:
 115:Src/freertos.c ****     osDelay(1000);
 314              		.loc 1 115 0
 315 0012 4FF47A70 		mov	r0, #1000
 316 0016 FFF7FEFF 		bl	osDelay
 317              	.LVL27:
 116:Src/freertos.c ****     deccelerer();
 318              		.loc 1 116 0
 319 001a FFF7FEFF 		bl	deccelerer
 320              	.LVL28:
 117:Src/freertos.c ****     eteindre_droite();
 321              		.loc 1 117 0
 322 001e FFF7FEFF 		bl	eteindre_droite
 323              	.LVL29:
 118:Src/freertos.c ****     eteindre_gauche();
 324              		.loc 1 118 0
 325 0022 FFF7FEFF 		bl	eteindre_gauche
 326              	.LVL30:
 119:Src/freertos.c ****     deplacement_fini = 1;
 327              		.loc 1 119 0
 328 0026 0122     		movs	r2, #1
 329 0028 014B     		ldr	r3, .L31
 330 002a 1A60     		str	r2, [r3]
 331 002c 08BD     		pop	{r3, pc}
 332              	.L32:
 333 002e 00BF     		.align	2
 334              	.L31:
 335 0030 00000000 		.word	.LANCHOR0
 336              		.cfi_endproc
 337              	.LFE135:
 339              		.section	.text.avancer_robot,"ax",%progbits
 340              		.align	2
 341              		.global	avancer_robot
 342              		.thumb
 343              		.thumb_func
 345              	avancer_robot:
 346              	.LFB136:
 120:Src/freertos.c **** }
 121:Src/freertos.c **** 
 122:Src/freertos.c **** void avancer_robot() {
 347              		.loc 1 122 0
ARM GAS  /tmp/ccbromZW.s 			page 9


 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 08B5     		push	{r3, lr}
 352              	.LCFI7:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 123:Src/freertos.c ****     alumer_droite(0);
 356              		.loc 1 123 0
 357 0002 0020     		movs	r0, #0
 358 0004 FFF7FEFF 		bl	alumer_droite
 359              	.LVL31:
 124:Src/freertos.c ****     alumer_gauche(0);
 360              		.loc 1 124 0
 361 0008 0020     		movs	r0, #0
 362 000a FFF7FEFF 		bl	alumer_gauche
 363              	.LVL32:
 125:Src/freertos.c ****     accelerer();
 364              		.loc 1 125 0
 365 000e FFF7FEFF 		bl	accelerer
 366              	.LVL33:
 126:Src/freertos.c ****     osDelay(1000);
 367              		.loc 1 126 0
 368 0012 4FF47A70 		mov	r0, #1000
 369 0016 FFF7FEFF 		bl	osDelay
 370              	.LVL34:
 127:Src/freertos.c ****     deccelerer();
 371              		.loc 1 127 0
 372 001a FFF7FEFF 		bl	deccelerer
 373              	.LVL35:
 128:Src/freertos.c ****     eteindre_droite();
 374              		.loc 1 128 0
 375 001e FFF7FEFF 		bl	eteindre_droite
 376              	.LVL36:
 129:Src/freertos.c ****     eteindre_gauche();
 377              		.loc 1 129 0
 378 0022 FFF7FEFF 		bl	eteindre_gauche
 379              	.LVL37:
 130:Src/freertos.c ****     deplacement_fini = 1;
 380              		.loc 1 130 0
 381 0026 0122     		movs	r2, #1
 382 0028 014B     		ldr	r3, .L35
 383 002a 1A60     		str	r2, [r3]
 384 002c 08BD     		pop	{r3, pc}
 385              	.L36:
 386 002e 00BF     		.align	2
 387              	.L35:
 388 0030 00000000 		.word	.LANCHOR0
 389              		.cfi_endproc
 390              	.LFE136:
 392              		.section	.text.tourner_droite,"ax",%progbits
 393              		.align	2
 394              		.global	tourner_droite
 395              		.thumb
 396              		.thumb_func
 398              	tourner_droite:
ARM GAS  /tmp/ccbromZW.s 			page 10


 399              	.LFB137:
 131:Src/freertos.c **** 
 132:Src/freertos.c **** }
 133:Src/freertos.c **** 
 134:Src/freertos.c **** void tourner_droite() {
 400              		.loc 1 134 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI8:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 135:Src/freertos.c ****     alumer_gauche(1);
 409              		.loc 1 135 0
 410 0002 0120     		movs	r0, #1
 411 0004 FFF7FEFF 		bl	alumer_gauche
 412              	.LVL38:
 136:Src/freertos.c ****     alumer_droite(0);
 413              		.loc 1 136 0
 414 0008 0020     		movs	r0, #0
 415 000a FFF7FEFF 		bl	alumer_droite
 416              	.LVL39:
 137:Src/freertos.c ****     accelerer();
 417              		.loc 1 137 0
 418 000e FFF7FEFF 		bl	accelerer
 419              	.LVL40:
 138:Src/freertos.c ****     osDelay(500);
 420              		.loc 1 138 0
 421 0012 4FF4FA70 		mov	r0, #500
 422 0016 FFF7FEFF 		bl	osDelay
 423              	.LVL41:
 139:Src/freertos.c ****     deccelerer();
 424              		.loc 1 139 0
 425 001a FFF7FEFF 		bl	deccelerer
 426              	.LVL42:
 140:Src/freertos.c ****     eteindre_droite();
 427              		.loc 1 140 0
 428 001e FFF7FEFF 		bl	eteindre_droite
 429              	.LVL43:
 141:Src/freertos.c ****     eteindre_gauche();
 430              		.loc 1 141 0
 431 0022 FFF7FEFF 		bl	eteindre_gauche
 432              	.LVL44:
 142:Src/freertos.c ****     deplacement_fini = 1;
 433              		.loc 1 142 0
 434 0026 0122     		movs	r2, #1
 435 0028 014B     		ldr	r3, .L39
 436 002a 1A60     		str	r2, [r3]
 437 002c 08BD     		pop	{r3, pc}
 438              	.L40:
 439 002e 00BF     		.align	2
 440              	.L39:
 441 0030 00000000 		.word	.LANCHOR0
 442              		.cfi_endproc
 443              	.LFE137:
ARM GAS  /tmp/ccbromZW.s 			page 11


 445              		.section	.text.tourner_gauche,"ax",%progbits
 446              		.align	2
 447              		.global	tourner_gauche
 448              		.thumb
 449              		.thumb_func
 451              	tourner_gauche:
 452              	.LFB138:
 143:Src/freertos.c **** }
 144:Src/freertos.c **** 
 145:Src/freertos.c **** void tourner_gauche() {
 453              		.loc 1 145 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457 0000 08B5     		push	{r3, lr}
 458              	.LCFI9:
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 3, -8
 461              		.cfi_offset 14, -4
 146:Src/freertos.c ****     alumer_droite(1);
 462              		.loc 1 146 0
 463 0002 0120     		movs	r0, #1
 464 0004 FFF7FEFF 		bl	alumer_droite
 465              	.LVL45:
 147:Src/freertos.c ****     alumer_gauche(0);
 466              		.loc 1 147 0
 467 0008 0020     		movs	r0, #0
 468 000a FFF7FEFF 		bl	alumer_gauche
 469              	.LVL46:
 148:Src/freertos.c ****     accelerer();
 470              		.loc 1 148 0
 471 000e FFF7FEFF 		bl	accelerer
 472              	.LVL47:
 149:Src/freertos.c ****     osDelay(500);
 473              		.loc 1 149 0
 474 0012 4FF4FA70 		mov	r0, #500
 475 0016 FFF7FEFF 		bl	osDelay
 476              	.LVL48:
 150:Src/freertos.c ****     deccelerer();
 477              		.loc 1 150 0
 478 001a FFF7FEFF 		bl	deccelerer
 479              	.LVL49:
 151:Src/freertos.c ****     eteindre_droite();
 480              		.loc 1 151 0
 481 001e FFF7FEFF 		bl	eteindre_droite
 482              	.LVL50:
 152:Src/freertos.c ****     eteindre_gauche();
 483              		.loc 1 152 0
 484 0022 FFF7FEFF 		bl	eteindre_gauche
 485              	.LVL51:
 153:Src/freertos.c ****     deplacement_fini = 1;
 486              		.loc 1 153 0
 487 0026 0122     		movs	r2, #1
 488 0028 014B     		ldr	r3, .L43
 489 002a 1A60     		str	r2, [r3]
 490 002c 08BD     		pop	{r3, pc}
 491              	.L44:
ARM GAS  /tmp/ccbromZW.s 			page 12


 492 002e 00BF     		.align	2
 493              	.L43:
 494 0030 00000000 		.word	.LANCHOR0
 495              		.cfi_endproc
 496              	.LFE138:
 498              		.section	.text.deplacement,"ax",%progbits
 499              		.align	2
 500              		.global	deplacement
 501              		.thumb
 502              		.thumb_func
 504              	deplacement:
 505              	.LFB139:
 154:Src/freertos.c **** }
 155:Src/freertos.c **** 
 156:Src/freertos.c **** void deplacement(int distance)
 157:Src/freertos.c **** {
 506              		.loc 1 157 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              	.LVL52:
 511 0000 38B5     		push	{r3, r4, r5, lr}
 512              	.LCFI10:
 513              		.cfi_def_cfa_offset 16
 514              		.cfi_offset 3, -16
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 14, -4
 518              	.LVL53:
 158:Src/freertos.c ****   int i =0;
 159:Src/freertos.c ****   if (distance > 0)
 519              		.loc 1 159 0
 520 0002 051E     		subs	r5, r0, #0
 521 0004 05DC     		bgt	.L51
 522 0006 0024     		movs	r4, #0
 523 0008 0AE0     		b	.L47
 524              	.LVL54:
 525              	.L48:
 160:Src/freertos.c ****   {
 161:Src/freertos.c ****     for (i = 0; i < distance; i++)
 162:Src/freertos.c ****     {
 163:Src/freertos.c ****       avancer_robot();
 526              		.loc 1 163 0 discriminator 3
 527 000a FFF7FEFF 		bl	avancer_robot
 528              	.LVL55:
 161:Src/freertos.c ****     {
 529              		.loc 1 161 0 discriminator 3
 530 000e 0134     		adds	r4, r4, #1
 531              	.LVL56:
 532 0010 00E0     		b	.L46
 533              	.LVL57:
 534              	.L51:
 535 0012 0024     		movs	r4, #0
 536              	.LVL58:
 537              	.L46:
 161:Src/freertos.c ****     {
 538              		.loc 1 161 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccbromZW.s 			page 13


 539 0014 AC42     		cmp	r4, r5
 540 0016 F8DB     		blt	.L48
 541 0018 38BD     		pop	{r3, r4, r5, pc}
 542              	.LVL59:
 543              	.L50:
 164:Src/freertos.c ****     }
 165:Src/freertos.c ****   }
 166:Src/freertos.c ****   else
 167:Src/freertos.c ****   {
 168:Src/freertos.c ****     for (i = 0; i < -distance; i++)
 169:Src/freertos.c ****     {
 170:Src/freertos.c ****       reculer_robot();
 544              		.loc 1 170 0 is_stmt 1 discriminator 3
 545 001a FFF7FEFF 		bl	reculer_robot
 546              	.LVL60:
 168:Src/freertos.c ****     {
 547              		.loc 1 168 0 discriminator 3
 548 001e 0134     		adds	r4, r4, #1
 549              	.LVL61:
 550              	.L47:
 168:Src/freertos.c ****     {
 551              		.loc 1 168 0 is_stmt 0 discriminator 1
 552 0020 6B42     		negs	r3, r5
 553 0022 9C42     		cmp	r4, r3
 554 0024 F9DB     		blt	.L50
 555 0026 38BD     		pop	{r3, r4, r5, pc}
 556              		.cfi_endproc
 557              	.LFE139:
 559              		.section	.text.motor,"ax",%progbits
 560              		.align	2
 561              		.global	motor
 562              		.thumb
 563              		.thumb_func
 565              	motor:
 566              	.LFB140:
 171:Src/freertos.c ****     }
 172:Src/freertos.c ****   }
 173:Src/freertos.c **** }
 174:Src/freertos.c **** 
 175:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 176:Src/freertos.c **** 
 177:Src/freertos.c **** /* Hook prototypes */
 178:Src/freertos.c **** 
 179:Src/freertos.c **** /* USER CODE BEGIN Application */
 180:Src/freertos.c **** void motor(void const * argument)
 181:Src/freertos.c **** {
 567              		.loc 1 181 0 is_stmt 1
 568              		.cfi_startproc
 569              		@ Volatile: function does not return.
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              	.LVL62:
 573 0000 08B5     		push	{r3, lr}
 574              	.LCFI11:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 3, -8
 577              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbromZW.s 			page 14


 182:Src/freertos.c ****   /* USER CODE BEGIN motor */
 183:Src/freertos.c ****   UNUSED(argument);
 184:Src/freertos.c **** 
 185:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 578              		.loc 1 185 0
 579 0002 0122     		movs	r2, #1
 580 0004 4FF48071 		mov	r1, #256
 581 0008 4FF09040 		mov	r0, #1207959552
 582              	.LVL63:
 583 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 584              	.LVL64:
 186:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 585              		.loc 1 186 0
 586 0010 094C     		ldr	r4, .L56
 587 0012 2046     		mov	r0, r4
 588 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 589              	.LVL65:
 187:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 590              		.loc 1 187 0
 591 0018 0021     		movs	r1, #0
 592 001a 2046     		mov	r0, r4
 593 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 594              	.LVL66:
 188:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 595              		.loc 1 188 0
 596 0020 0C21     		movs	r1, #12
 597 0022 2046     		mov	r0, r4
 598 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 599              	.LVL67:
 600              	.L54:
 189:Src/freertos.c **** 
 190:Src/freertos.c ****   /* Infinite loop */
 191:Src/freertos.c ****   for(;;)
 192:Src/freertos.c ****   {
 193:Src/freertos.c ****       deplacement(1);
 601              		.loc 1 193 0 discriminator 1
 602 0028 0120     		movs	r0, #1
 603 002a FFF7FEFF 		bl	deplacement
 604              	.LVL68:
 194:Src/freertos.c ****       osDelay(2000);
 605              		.loc 1 194 0 discriminator 1
 606 002e 4FF4FA60 		mov	r0, #2000
 607 0032 FFF7FEFF 		bl	osDelay
 608              	.LVL69:
 609 0036 F7E7     		b	.L54
 610              	.L57:
 611              		.align	2
 612              	.L56:
 613 0038 00000000 		.word	htim3
 614              		.cfi_endproc
 615              	.LFE140:
 617              		.global	deplacement_fini
 618              		.section	.bss.deplacement_fini,"aw",%nobits
 619              		.align	2
 620              		.set	.LANCHOR0,. + 0
 623              	deplacement_fini:
 624 0000 00000000 		.space	4
ARM GAS  /tmp/ccbromZW.s 			page 15


 625              		.text
 626              	.Letext0:
 627              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 628              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 629              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 630              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 631              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 632              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 633              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 634              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 635              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccbromZW.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccbromZW.s:22     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccbromZW.s:27     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccbromZW.s:63     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccbromZW.s:68     .text.alumer_droite:0000000000000000 $t
     /tmp/ccbromZW.s:73     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccbromZW.s:105    .text.alumer_droite:0000000000000024 $d
     /tmp/ccbromZW.s:110    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccbromZW.s:115    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccbromZW.s:143    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccbromZW.s:148    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccbromZW.s:153    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccbromZW.s:180    .text.eteindre_droite:000000000000001c $d
     /tmp/ccbromZW.s:185    .text.accelerer:0000000000000000 $t
     /tmp/ccbromZW.s:190    .text.accelerer:0000000000000000 accelerer
     /tmp/ccbromZW.s:231    .text.accelerer:0000000000000020 $d
     /tmp/ccbromZW.s:236    .text.deccelerer:0000000000000000 $t
     /tmp/ccbromZW.s:241    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccbromZW.s:282    .text.deccelerer:0000000000000020 $d
     /tmp/ccbromZW.s:287    .text.reculer_robot:0000000000000000 $t
     /tmp/ccbromZW.s:292    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccbromZW.s:335    .text.reculer_robot:0000000000000030 $d
     /tmp/ccbromZW.s:340    .text.avancer_robot:0000000000000000 $t
     /tmp/ccbromZW.s:345    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccbromZW.s:388    .text.avancer_robot:0000000000000030 $d
     /tmp/ccbromZW.s:393    .text.tourner_droite:0000000000000000 $t
     /tmp/ccbromZW.s:398    .text.tourner_droite:0000000000000000 tourner_droite
     /tmp/ccbromZW.s:441    .text.tourner_droite:0000000000000030 $d
     /tmp/ccbromZW.s:446    .text.tourner_gauche:0000000000000000 $t
     /tmp/ccbromZW.s:451    .text.tourner_gauche:0000000000000000 tourner_gauche
     /tmp/ccbromZW.s:494    .text.tourner_gauche:0000000000000030 $d
     /tmp/ccbromZW.s:499    .text.deplacement:0000000000000000 $t
     /tmp/ccbromZW.s:504    .text.deplacement:0000000000000000 deplacement
     /tmp/ccbromZW.s:560    .text.motor:0000000000000000 $t
     /tmp/ccbromZW.s:565    .text.motor:0000000000000000 motor
     /tmp/ccbromZW.s:613    .text.motor:0000000000000038 $d
     /tmp/ccbromZW.s:623    .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccbromZW.s:619    .bss.deplacement_fini:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
osDelay
htim3
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
