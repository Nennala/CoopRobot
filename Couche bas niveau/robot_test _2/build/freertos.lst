ARM GAS  /tmp/ccUFcmyz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"freertos.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.alumer_gauche,"ax",%progbits
  22              		.align	2
  23              		.global	alumer_gauche
  24              		.thumb
  25              		.thumb_func
  27              	alumer_gauche:
  28              	.LFB129:
  29              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  /tmp/ccUFcmyz.s 			page 2


  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #define PWM_MAX 320
  59:Src/freertos.c **** #define DELAY 1000
  60:Src/freertos.c **** /* USER CODE END Includes */
  61:Src/freertos.c **** 
  62:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  63:Src/freertos.c **** 
  64:Src/freertos.c **** /* USER CODE BEGIN Variables */
  65:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  66:Src/freertos.c **** 
  67:Src/freertos.c **** int deplacement_fini = 0;
  68:Src/freertos.c **** /* USER CODE END Variables */
  69:Src/freertos.c **** 
  70:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  71:Src/freertos.c **** 
  72:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  73:Src/freertos.c **** 
  74:Src/freertos.c **** void alumer_gauche(int sens) {
  30              		.loc 1 74 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
ARM GAS  /tmp/ccUFcmyz.s 			page 3


  75:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  42              		.loc 1 75 0
  43 0002 0546     		mov	r5, r0
  44 0004 064C     		ldr	r4, .L3
  45 0006 B0FA80F2 		clz	r2, r0
  46 000a 5209     		lsrs	r2, r2, #5
  47 000c 0221     		movs	r1, #2
  48 000e 2046     		mov	r0, r4
  49              	.LVL1:
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  51              	.LVL2:
  76:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  52              		.loc 1 76 0
  53 0014 EAB2     		uxtb	r2, r5
  54 0016 0121     		movs	r1, #1
  55 0018 2046     		mov	r0, r4
  56 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58 001e 38BD     		pop	{r3, r4, r5, pc}
  59              	.LVL4:
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00140048 		.word	1207964672
  64              		.cfi_endproc
  65              	.LFE129:
  67              		.section	.text.alumer_droite,"ax",%progbits
  68              		.align	2
  69              		.global	alumer_droite
  70              		.thumb
  71              		.thumb_func
  73              	alumer_droite:
  74              	.LFB130:
  77:Src/freertos.c **** }
  78:Src/freertos.c **** 
  79:Src/freertos.c **** void alumer_droite(int sens) {
  75              		.loc 1 79 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL5:
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
  80:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  85              		.loc 1 80 0
  86 0002 0446     		mov	r4, r0
  87 0004 B0FA80F2 		clz	r2, r0
  88 0008 5209     		lsrs	r2, r2, #5
  89 000a 4FF40061 		mov	r1, #2048
  90 000e 4FF09040 		mov	r0, #1207959552
  91              	.LVL6:
  92 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL7:
  81:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
ARM GAS  /tmp/ccUFcmyz.s 			page 4


  94              		.loc 1 81 0
  95 0016 E2B2     		uxtb	r2, r4
  96 0018 2021     		movs	r1, #32
  97 001a 0248     		ldr	r0, .L7
  98 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 100 0020 10BD     		pop	{r4, pc}
 101              	.LVL9:
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 00040048 		.word	1207960576
 106              		.cfi_endproc
 107              	.LFE130:
 109              		.section	.text.eteindre_gauche,"ax",%progbits
 110              		.align	2
 111              		.global	eteindre_gauche
 112              		.thumb
 113              		.thumb_func
 115              	eteindre_gauche:
 116              	.LFB131:
  82:Src/freertos.c **** }
  83:Src/freertos.c **** 
  84:Src/freertos.c **** void eteindre_gauche() {
 117              		.loc 1 84 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
  85:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 126              		.loc 1 85 0
 127 0002 064C     		ldr	r4, .L11
 128 0004 0022     		movs	r2, #0
 129 0006 0221     		movs	r1, #2
 130 0008 2046     		mov	r0, r4
 131 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
  86:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 133              		.loc 1 86 0
 134 000e 0022     		movs	r2, #0
 135 0010 0121     		movs	r1, #1
 136 0012 2046     		mov	r0, r4
 137 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL11:
 139 0018 10BD     		pop	{r4, pc}
 140              	.L12:
 141 001a 00BF     		.align	2
 142              	.L11:
 143 001c 00140048 		.word	1207964672
 144              		.cfi_endproc
 145              	.LFE131:
 147              		.section	.text.eteindre_droite,"ax",%progbits
 148              		.align	2
ARM GAS  /tmp/ccUFcmyz.s 			page 5


 149              		.global	eteindre_droite
 150              		.thumb
 151              		.thumb_func
 153              	eteindre_droite:
 154              	.LFB132:
  87:Src/freertos.c **** }
  88:Src/freertos.c **** 
  89:Src/freertos.c **** void eteindre_droite() {
 155              		.loc 1 89 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
  90:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 164              		.loc 1 90 0
 165 0002 0022     		movs	r2, #0
 166 0004 4FF40061 		mov	r1, #2048
 167 0008 4FF09040 		mov	r0, #1207959552
 168 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL12:
  91:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 170              		.loc 1 91 0
 171 0010 0022     		movs	r2, #0
 172 0012 2021     		movs	r1, #32
 173 0014 0148     		ldr	r0, .L15
 174 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL13:
 176 001a 08BD     		pop	{r3, pc}
 177              	.L16:
 178              		.align	2
 179              	.L15:
 180 001c 00040048 		.word	1207960576
 181              		.cfi_endproc
 182              	.LFE132:
 184              		.section	.text.pwm_max,"ax",%progbits
 185              		.align	2
 186              		.global	pwm_max
 187              		.thumb
 188              		.thumb_func
 190              	pwm_max:
 191              	.LFB133:
  92:Src/freertos.c **** }
  93:Src/freertos.c **** 
  94:Src/freertos.c **** void pwm_max() {
 192              		.loc 1 94 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
  95:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 197              		.loc 1 95 0
 198 0000 034B     		ldr	r3, .L18
 199 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUFcmyz.s 			page 6


 200 0004 4FF4A072 		mov	r2, #320
 201 0008 5A63     		str	r2, [r3, #52]
  96:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 202              		.loc 1 96 0
 203 000a 1A64     		str	r2, [r3, #64]
 204 000c 7047     		bx	lr
 205              	.L19:
 206 000e 00BF     		.align	2
 207              	.L18:
 208 0010 00000000 		.word	htim3
 209              		.cfi_endproc
 210              	.LFE133:
 212              		.section	.text.accelerer,"ax",%progbits
 213              		.align	2
 214              		.global	accelerer
 215              		.thumb
 216              		.thumb_func
 218              	accelerer:
 219              	.LFB134:
  97:Src/freertos.c **** }
  98:Src/freertos.c **** 
  99:Src/freertos.c **** void accelerer() {
 220              		.loc 1 99 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229              	.LVL14:
 100:Src/freertos.c ****     int pwm = 0;
 230              		.loc 1 100 0
 231 0002 0024     		movs	r4, #0
 101:Src/freertos.c ****     while (pwm != PWM_MAX) {
 232              		.loc 1 101 0
 233 0004 07E0     		b	.L21
 234              	.LVL15:
 235              	.L22:
 102:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 236              		.loc 1 102 0
 237 0006 064B     		ldr	r3, .L24
 238 0008 1B68     		ldr	r3, [r3]
 239 000a 5C63     		str	r4, [r3, #52]
 103:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 240              		.loc 1 103 0
 241 000c 1C64     		str	r4, [r3, #64]
 104:Src/freertos.c ****         pwm += 20;
 242              		.loc 1 104 0
 243 000e 1434     		adds	r4, r4, #20
 244              	.LVL16:
 105:Src/freertos.c ****         osDelay(50);
 245              		.loc 1 105 0
 246 0010 3220     		movs	r0, #50
 247 0012 FFF7FEFF 		bl	osDelay
 248              	.LVL17:
ARM GAS  /tmp/ccUFcmyz.s 			page 7


 249              	.L21:
 101:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 250              		.loc 1 101 0
 251 0016 B4F5A07F 		cmp	r4, #320
 252 001a F4D1     		bne	.L22
 106:Src/freertos.c ****     }
 107:Src/freertos.c **** }
 253              		.loc 1 107 0
 254 001c 10BD     		pop	{r4, pc}
 255              	.LVL18:
 256              	.L25:
 257 001e 00BF     		.align	2
 258              	.L24:
 259 0020 00000000 		.word	htim3
 260              		.cfi_endproc
 261              	.LFE134:
 263              		.section	.text.deccelerer,"ax",%progbits
 264              		.align	2
 265              		.global	deccelerer
 266              		.thumb
 267              		.thumb_func
 269              	deccelerer:
 270              	.LFB135:
 108:Src/freertos.c **** 
 109:Src/freertos.c **** void deccelerer() {
 271              		.loc 1 109 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280              	.LVL19:
 110:Src/freertos.c ****     int pwm = PWM_MAX;
 281              		.loc 1 110 0
 282 0002 4FF4A074 		mov	r4, #320
 111:Src/freertos.c ****     while (pwm != 0) {
 283              		.loc 1 111 0
 284 0006 07E0     		b	.L27
 285              	.LVL20:
 286              	.L28:
 112:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 287              		.loc 1 112 0
 288 0008 054B     		ldr	r3, .L30
 289 000a 1B68     		ldr	r3, [r3]
 290 000c 5C63     		str	r4, [r3, #52]
 113:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 291              		.loc 1 113 0
 292 000e 1C64     		str	r4, [r3, #64]
 114:Src/freertos.c ****         pwm -= 20;
 293              		.loc 1 114 0
 294 0010 143C     		subs	r4, r4, #20
 295              	.LVL21:
 115:Src/freertos.c ****         osDelay(50);
 296              		.loc 1 115 0
ARM GAS  /tmp/ccUFcmyz.s 			page 8


 297 0012 3220     		movs	r0, #50
 298 0014 FFF7FEFF 		bl	osDelay
 299              	.LVL22:
 300              	.L27:
 111:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 301              		.loc 1 111 0
 302 0018 002C     		cmp	r4, #0
 303 001a F5D1     		bne	.L28
 116:Src/freertos.c ****     }
 117:Src/freertos.c **** }
 304              		.loc 1 117 0
 305 001c 10BD     		pop	{r4, pc}
 306              	.LVL23:
 307              	.L31:
 308 001e 00BF     		.align	2
 309              	.L30:
 310 0020 00000000 		.word	htim3
 311              		.cfi_endproc
 312              	.LFE135:
 314              		.section	.text.reculer_robot,"ax",%progbits
 315              		.align	2
 316              		.global	reculer_robot
 317              		.thumb
 318              		.thumb_func
 320              	reculer_robot:
 321              	.LFB136:
 118:Src/freertos.c **** 
 119:Src/freertos.c **** void reculer_robot() {
 322              		.loc 1 119 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 120:Src/freertos.c ****     alumer_droite(1);
 331              		.loc 1 120 0
 332 0002 0120     		movs	r0, #1
 333 0004 FFF7FEFF 		bl	alumer_droite
 334              	.LVL24:
 121:Src/freertos.c ****     alumer_gauche(1);
 335              		.loc 1 121 0
 336 0008 0120     		movs	r0, #1
 337 000a FFF7FEFF 		bl	alumer_gauche
 338              	.LVL25:
 122:Src/freertos.c ****     accelerer();
 339              		.loc 1 122 0
 340 000e FFF7FEFF 		bl	accelerer
 341              	.LVL26:
 123:Src/freertos.c ****     osDelay(1000);
 342              		.loc 1 123 0
 343 0012 4FF47A70 		mov	r0, #1000
 344 0016 FFF7FEFF 		bl	osDelay
 345              	.LVL27:
 124:Src/freertos.c ****     deccelerer();
ARM GAS  /tmp/ccUFcmyz.s 			page 9


 346              		.loc 1 124 0
 347 001a FFF7FEFF 		bl	deccelerer
 348              	.LVL28:
 125:Src/freertos.c ****     eteindre_droite();
 349              		.loc 1 125 0
 350 001e FFF7FEFF 		bl	eteindre_droite
 351              	.LVL29:
 126:Src/freertos.c ****     eteindre_gauche();
 352              		.loc 1 126 0
 353 0022 FFF7FEFF 		bl	eteindre_gauche
 354              	.LVL30:
 127:Src/freertos.c ****     deplacement_fini = 1;
 355              		.loc 1 127 0
 356 0026 0122     		movs	r2, #1
 357 0028 014B     		ldr	r3, .L34
 358 002a 1A60     		str	r2, [r3]
 359 002c 08BD     		pop	{r3, pc}
 360              	.L35:
 361 002e 00BF     		.align	2
 362              	.L34:
 363 0030 00000000 		.word	.LANCHOR0
 364              		.cfi_endproc
 365              	.LFE136:
 367              		.section	.text.avancer_robot,"ax",%progbits
 368              		.align	2
 369              		.global	avancer_robot
 370              		.thumb
 371              		.thumb_func
 373              	avancer_robot:
 374              	.LFB137:
 128:Src/freertos.c **** }
 129:Src/freertos.c **** 
 130:Src/freertos.c **** void avancer_robot() {
 375              		.loc 1 130 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI7:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 131:Src/freertos.c ****     alumer_droite(0);
 384              		.loc 1 131 0
 385 0002 0020     		movs	r0, #0
 386 0004 FFF7FEFF 		bl	alumer_droite
 387              	.LVL31:
 132:Src/freertos.c ****     alumer_gauche(0);
 388              		.loc 1 132 0
 389 0008 0020     		movs	r0, #0
 390 000a FFF7FEFF 		bl	alumer_gauche
 391              	.LVL32:
 133:Src/freertos.c ****     accelerer();
 392              		.loc 1 133 0
 393 000e FFF7FEFF 		bl	accelerer
 394              	.LVL33:
 134:Src/freertos.c ****     osDelay(1000);
ARM GAS  /tmp/ccUFcmyz.s 			page 10


 395              		.loc 1 134 0
 396 0012 4FF47A70 		mov	r0, #1000
 397 0016 FFF7FEFF 		bl	osDelay
 398              	.LVL34:
 135:Src/freertos.c ****     deccelerer();
 399              		.loc 1 135 0
 400 001a FFF7FEFF 		bl	deccelerer
 401              	.LVL35:
 136:Src/freertos.c ****     eteindre_droite();
 402              		.loc 1 136 0
 403 001e FFF7FEFF 		bl	eteindre_droite
 404              	.LVL36:
 137:Src/freertos.c ****     eteindre_gauche();
 405              		.loc 1 137 0
 406 0022 FFF7FEFF 		bl	eteindre_gauche
 407              	.LVL37:
 138:Src/freertos.c ****     deplacement_fini = 1;
 408              		.loc 1 138 0
 409 0026 0122     		movs	r2, #1
 410 0028 014B     		ldr	r3, .L38
 411 002a 1A60     		str	r2, [r3]
 412 002c 08BD     		pop	{r3, pc}
 413              	.L39:
 414 002e 00BF     		.align	2
 415              	.L38:
 416 0030 00000000 		.word	.LANCHOR0
 417              		.cfi_endproc
 418              	.LFE137:
 420              		.section	.text.pivoter_gauche,"ax",%progbits
 421              		.align	2
 422              		.global	pivoter_gauche
 423              		.thumb
 424              		.thumb_func
 426              	pivoter_gauche:
 427              	.LFB138:
 139:Src/freertos.c **** 
 140:Src/freertos.c **** }
 141:Src/freertos.c **** 
 142:Src/freertos.c **** void pivoter_gauche() {
 428              		.loc 1 142 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 08B5     		push	{r3, lr}
 433              	.LCFI8:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 143:Src/freertos.c ****     pwm_max();
 437              		.loc 1 143 0
 438 0002 FFF7FEFF 		bl	pwm_max
 439              	.LVL38:
 144:Src/freertos.c ****     alumer_gauche(1);
 440              		.loc 1 144 0
 441 0006 0120     		movs	r0, #1
 442 0008 FFF7FEFF 		bl	alumer_gauche
 443              	.LVL39:
ARM GAS  /tmp/ccUFcmyz.s 			page 11


 145:Src/freertos.c ****     alumer_droite(0);
 444              		.loc 1 145 0
 445 000c 0020     		movs	r0, #0
 446 000e FFF7FEFF 		bl	alumer_droite
 447              	.LVL40:
 146:Src/freertos.c ****     osDelay(230);
 448              		.loc 1 146 0
 449 0012 E620     		movs	r0, #230
 450 0014 FFF7FEFF 		bl	osDelay
 451              	.LVL41:
 147:Src/freertos.c ****     deccelerer();
 452              		.loc 1 147 0
 453 0018 FFF7FEFF 		bl	deccelerer
 454              	.LVL42:
 148:Src/freertos.c ****     eteindre_droite();
 455              		.loc 1 148 0
 456 001c FFF7FEFF 		bl	eteindre_droite
 457              	.LVL43:
 149:Src/freertos.c ****     eteindre_gauche();
 458              		.loc 1 149 0
 459 0020 FFF7FEFF 		bl	eteindre_gauche
 460              	.LVL44:
 150:Src/freertos.c ****     deplacement_fini = 1;
 461              		.loc 1 150 0
 462 0024 0122     		movs	r2, #1
 463 0026 014B     		ldr	r3, .L42
 464 0028 1A60     		str	r2, [r3]
 465 002a 08BD     		pop	{r3, pc}
 466              	.L43:
 467              		.align	2
 468              	.L42:
 469 002c 00000000 		.word	.LANCHOR0
 470              		.cfi_endproc
 471              	.LFE138:
 473              		.section	.text.pivoter_droite,"ax",%progbits
 474              		.align	2
 475              		.global	pivoter_droite
 476              		.thumb
 477              		.thumb_func
 479              	pivoter_droite:
 480              	.LFB139:
 151:Src/freertos.c **** }
 152:Src/freertos.c **** 
 153:Src/freertos.c **** void pivoter_droite() {
 481              		.loc 1 153 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 154:Src/freertos.c ****     pwm_max();
 490              		.loc 1 154 0
 491 0002 FFF7FEFF 		bl	pwm_max
 492              	.LVL45:
ARM GAS  /tmp/ccUFcmyz.s 			page 12


 155:Src/freertos.c ****     alumer_droite(1);
 493              		.loc 1 155 0
 494 0006 0120     		movs	r0, #1
 495 0008 FFF7FEFF 		bl	alumer_droite
 496              	.LVL46:
 156:Src/freertos.c ****     alumer_gauche(0);
 497              		.loc 1 156 0
 498 000c 0020     		movs	r0, #0
 499 000e FFF7FEFF 		bl	alumer_gauche
 500              	.LVL47:
 157:Src/freertos.c ****     osDelay(220);
 501              		.loc 1 157 0
 502 0012 DC20     		movs	r0, #220
 503 0014 FFF7FEFF 		bl	osDelay
 504              	.LVL48:
 158:Src/freertos.c ****     deccelerer();
 505              		.loc 1 158 0
 506 0018 FFF7FEFF 		bl	deccelerer
 507              	.LVL49:
 159:Src/freertos.c ****     eteindre_droite();
 508              		.loc 1 159 0
 509 001c FFF7FEFF 		bl	eteindre_droite
 510              	.LVL50:
 160:Src/freertos.c ****     eteindre_gauche();
 511              		.loc 1 160 0
 512 0020 FFF7FEFF 		bl	eteindre_gauche
 513              	.LVL51:
 161:Src/freertos.c ****     deplacement_fini = 1;
 514              		.loc 1 161 0
 515 0024 0122     		movs	r2, #1
 516 0026 014B     		ldr	r3, .L46
 517 0028 1A60     		str	r2, [r3]
 518 002a 08BD     		pop	{r3, pc}
 519              	.L47:
 520              		.align	2
 521              	.L46:
 522 002c 00000000 		.word	.LANCHOR0
 523              		.cfi_endproc
 524              	.LFE139:
 526              		.section	.text.deplacement,"ax",%progbits
 527              		.align	2
 528              		.global	deplacement
 529              		.thumb
 530              		.thumb_func
 532              	deplacement:
 533              	.LFB140:
 162:Src/freertos.c **** }
 163:Src/freertos.c **** 
 164:Src/freertos.c **** void deplacement(int distance)
 165:Src/freertos.c **** {
 534              		.loc 1 165 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL52:
 539 0000 38B5     		push	{r3, r4, r5, lr}
 540              	.LCFI10:
ARM GAS  /tmp/ccUFcmyz.s 			page 13


 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 3, -16
 543              		.cfi_offset 4, -12
 544              		.cfi_offset 5, -8
 545              		.cfi_offset 14, -4
 546              	.LVL53:
 166:Src/freertos.c ****   int i =0;
 167:Src/freertos.c ****   if (distance > 0)
 547              		.loc 1 167 0
 548 0002 051E     		subs	r5, r0, #0
 549 0004 05DC     		bgt	.L54
 550 0006 0024     		movs	r4, #0
 551 0008 0AE0     		b	.L50
 552              	.LVL54:
 553              	.L51:
 168:Src/freertos.c ****   {
 169:Src/freertos.c ****     for (i = 0; i < distance; i++)
 170:Src/freertos.c ****     {
 171:Src/freertos.c ****       avancer_robot();
 554              		.loc 1 171 0 discriminator 3
 555 000a FFF7FEFF 		bl	avancer_robot
 556              	.LVL55:
 169:Src/freertos.c ****     {
 557              		.loc 1 169 0 discriminator 3
 558 000e 0134     		adds	r4, r4, #1
 559              	.LVL56:
 560 0010 00E0     		b	.L49
 561              	.LVL57:
 562              	.L54:
 563 0012 0024     		movs	r4, #0
 564              	.LVL58:
 565              	.L49:
 169:Src/freertos.c ****     {
 566              		.loc 1 169 0 is_stmt 0 discriminator 1
 567 0014 AC42     		cmp	r4, r5
 568 0016 F8DB     		blt	.L51
 569 0018 38BD     		pop	{r3, r4, r5, pc}
 570              	.LVL59:
 571              	.L53:
 172:Src/freertos.c ****     }
 173:Src/freertos.c ****   }
 174:Src/freertos.c ****   else
 175:Src/freertos.c ****   {
 176:Src/freertos.c ****     for (i = 0; i < -distance; i++)
 177:Src/freertos.c ****     {
 178:Src/freertos.c ****       reculer_robot();
 572              		.loc 1 178 0 is_stmt 1 discriminator 3
 573 001a FFF7FEFF 		bl	reculer_robot
 574              	.LVL60:
 176:Src/freertos.c ****     {
 575              		.loc 1 176 0 discriminator 3
 576 001e 0134     		adds	r4, r4, #1
 577              	.LVL61:
 578              	.L50:
 176:Src/freertos.c ****     {
 579              		.loc 1 176 0 is_stmt 0 discriminator 1
 580 0020 6B42     		negs	r3, r5
ARM GAS  /tmp/ccUFcmyz.s 			page 14


 581 0022 9C42     		cmp	r4, r3
 582 0024 F9DB     		blt	.L53
 583 0026 38BD     		pop	{r3, r4, r5, pc}
 584              		.cfi_endproc
 585              	.LFE140:
 587              		.section	.text.motor,"ax",%progbits
 588              		.align	2
 589              		.global	motor
 590              		.thumb
 591              		.thumb_func
 593              	motor:
 594              	.LFB141:
 179:Src/freertos.c ****     }
 180:Src/freertos.c ****   }
 181:Src/freertos.c **** }
 182:Src/freertos.c **** 
 183:Src/freertos.c **** 
 184:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 185:Src/freertos.c **** 
 186:Src/freertos.c **** /* Hook prototypes */
 187:Src/freertos.c **** 
 188:Src/freertos.c **** /* USER CODE BEGIN Application */
 189:Src/freertos.c **** void motor(void const * argument)
 190:Src/freertos.c **** {
 595              		.loc 1 190 0 is_stmt 1
 596              		.cfi_startproc
 597              		@ Volatile: function does not return.
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL62:
 601 0000 08B5     		push	{r3, lr}
 602              	.LCFI11:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 3, -8
 605              		.cfi_offset 14, -4
 191:Src/freertos.c ****   /* USER CODE BEGIN motor */
 192:Src/freertos.c ****   UNUSED(argument);
 193:Src/freertos.c **** 
 194:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 606              		.loc 1 194 0
 607 0002 0122     		movs	r2, #1
 608 0004 4FF48071 		mov	r1, #256
 609 0008 4FF09040 		mov	r0, #1207959552
 610              	.LVL63:
 611 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 612              	.LVL64:
 195:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 613              		.loc 1 195 0
 614 0010 204C     		ldr	r4, .L59
 615 0012 2046     		mov	r0, r4
 616 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 617              	.LVL65:
 196:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 618              		.loc 1 196 0
 619 0018 0021     		movs	r1, #0
 620 001a 2046     		mov	r0, r4
 621 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
ARM GAS  /tmp/ccUFcmyz.s 			page 15


 622              	.LVL66:
 197:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 623              		.loc 1 197 0
 624 0020 0C21     		movs	r1, #12
 625 0022 2046     		mov	r0, r4
 626 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 627              	.LVL67:
 628              	.L57:
 198:Src/freertos.c **** 
 199:Src/freertos.c ****   /* Infinite loop */
 200:Src/freertos.c ****   for(;;)
 201:Src/freertos.c ****   {
 202:Src/freertos.c ****       deplacement(1);
 629              		.loc 1 202 0 discriminator 1
 630 0028 0120     		movs	r0, #1
 631 002a FFF7FEFF 		bl	deplacement
 632              	.LVL68:
 203:Src/freertos.c ****       osDelay(DELAY);
 633              		.loc 1 203 0 discriminator 1
 634 002e 4FF47A70 		mov	r0, #1000
 635 0032 FFF7FEFF 		bl	osDelay
 636              	.LVL69:
 204:Src/freertos.c ****       pivoter_droite();
 637              		.loc 1 204 0 discriminator 1
 638 0036 FFF7FEFF 		bl	pivoter_droite
 639              	.LVL70:
 205:Src/freertos.c ****       osDelay(DELAY);
 640              		.loc 1 205 0 discriminator 1
 641 003a 4FF47A70 		mov	r0, #1000
 642 003e FFF7FEFF 		bl	osDelay
 643              	.LVL71:
 206:Src/freertos.c ****       pivoter_droite();
 644              		.loc 1 206 0 discriminator 1
 645 0042 FFF7FEFF 		bl	pivoter_droite
 646              	.LVL72:
 207:Src/freertos.c ****       osDelay(DELAY);
 647              		.loc 1 207 0 discriminator 1
 648 0046 4FF47A70 		mov	r0, #1000
 649 004a FFF7FEFF 		bl	osDelay
 650              	.LVL73:
 208:Src/freertos.c ****       deplacement(1);
 651              		.loc 1 208 0 discriminator 1
 652 004e 0120     		movs	r0, #1
 653 0050 FFF7FEFF 		bl	deplacement
 654              	.LVL74:
 209:Src/freertos.c ****       osDelay(DELAY);
 655              		.loc 1 209 0 discriminator 1
 656 0054 4FF47A70 		mov	r0, #1000
 657 0058 FFF7FEFF 		bl	osDelay
 658              	.LVL75:
 210:Src/freertos.c ****       pivoter_gauche();
 659              		.loc 1 210 0 discriminator 1
 660 005c FFF7FEFF 		bl	pivoter_gauche
 661              	.LVL76:
 211:Src/freertos.c ****       osDelay(DELAY);
 662              		.loc 1 211 0 discriminator 1
 663 0060 4FF47A70 		mov	r0, #1000
ARM GAS  /tmp/ccUFcmyz.s 			page 16


 664 0064 FFF7FEFF 		bl	osDelay
 665              	.LVL77:
 212:Src/freertos.c ****       pivoter_gauche();
 666              		.loc 1 212 0 discriminator 1
 667 0068 FFF7FEFF 		bl	pivoter_gauche
 668              	.LVL78:
 213:Src/freertos.c ****       osDelay(DELAY);
 669              		.loc 1 213 0 discriminator 1
 670 006c 4FF47A70 		mov	r0, #1000
 671 0070 FFF7FEFF 		bl	osDelay
 672              	.LVL79:
 214:Src/freertos.c ****       deplacement(1);
 673              		.loc 1 214 0 discriminator 1
 674 0074 0120     		movs	r0, #1
 675 0076 FFF7FEFF 		bl	deplacement
 676              	.LVL80:
 215:Src/freertos.c ****       osDelay(DELAY);
 677              		.loc 1 215 0 discriminator 1
 678 007a 4FF47A70 		mov	r0, #1000
 679 007e FFF7FEFF 		bl	osDelay
 680              	.LVL81:
 216:Src/freertos.c ****       deplacement(-1);
 681              		.loc 1 216 0 discriminator 1
 682 0082 4FF0FF30 		mov	r0, #-1
 683 0086 FFF7FEFF 		bl	deplacement
 684              	.LVL82:
 217:Src/freertos.c ****       osDelay(DELAY);
 685              		.loc 1 217 0 discriminator 1
 686 008a 4FF47A70 		mov	r0, #1000
 687 008e FFF7FEFF 		bl	osDelay
 688              	.LVL83:
 689 0092 C9E7     		b	.L57
 690              	.L60:
 691              		.align	2
 692              	.L59:
 693 0094 00000000 		.word	htim3
 694              		.cfi_endproc
 695              	.LFE141:
 697              		.global	deplacement_fini
 698              		.section	.bss.deplacement_fini,"aw",%nobits
 699              		.align	2
 700              		.set	.LANCHOR0,. + 0
 703              	deplacement_fini:
 704 0000 00000000 		.space	4
 705              		.text
 706              	.Letext0:
 707              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 708              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 709              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 710              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 711              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 712              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 713              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 714              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 715              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccUFcmyz.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccUFcmyz.s:22     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccUFcmyz.s:27     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccUFcmyz.s:63     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccUFcmyz.s:68     .text.alumer_droite:0000000000000000 $t
     /tmp/ccUFcmyz.s:73     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccUFcmyz.s:105    .text.alumer_droite:0000000000000024 $d
     /tmp/ccUFcmyz.s:110    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccUFcmyz.s:115    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccUFcmyz.s:143    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccUFcmyz.s:148    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccUFcmyz.s:153    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccUFcmyz.s:180    .text.eteindre_droite:000000000000001c $d
     /tmp/ccUFcmyz.s:185    .text.pwm_max:0000000000000000 $t
     /tmp/ccUFcmyz.s:190    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccUFcmyz.s:208    .text.pwm_max:0000000000000010 $d
     /tmp/ccUFcmyz.s:213    .text.accelerer:0000000000000000 $t
     /tmp/ccUFcmyz.s:218    .text.accelerer:0000000000000000 accelerer
     /tmp/ccUFcmyz.s:259    .text.accelerer:0000000000000020 $d
     /tmp/ccUFcmyz.s:264    .text.deccelerer:0000000000000000 $t
     /tmp/ccUFcmyz.s:269    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccUFcmyz.s:310    .text.deccelerer:0000000000000020 $d
     /tmp/ccUFcmyz.s:315    .text.reculer_robot:0000000000000000 $t
     /tmp/ccUFcmyz.s:320    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccUFcmyz.s:363    .text.reculer_robot:0000000000000030 $d
     /tmp/ccUFcmyz.s:368    .text.avancer_robot:0000000000000000 $t
     /tmp/ccUFcmyz.s:373    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccUFcmyz.s:416    .text.avancer_robot:0000000000000030 $d
     /tmp/ccUFcmyz.s:421    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccUFcmyz.s:426    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccUFcmyz.s:469    .text.pivoter_gauche:000000000000002c $d
     /tmp/ccUFcmyz.s:474    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccUFcmyz.s:479    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccUFcmyz.s:522    .text.pivoter_droite:000000000000002c $d
     /tmp/ccUFcmyz.s:527    .text.deplacement:0000000000000000 $t
     /tmp/ccUFcmyz.s:532    .text.deplacement:0000000000000000 deplacement
     /tmp/ccUFcmyz.s:588    .text.motor:0000000000000000 $t
     /tmp/ccUFcmyz.s:593    .text.motor:0000000000000000 motor
     /tmp/ccUFcmyz.s:693    .text.motor:0000000000000094 $d
     /tmp/ccUFcmyz.s:703    .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccUFcmyz.s:699    .bss.deplacement_fini:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
osDelay
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
