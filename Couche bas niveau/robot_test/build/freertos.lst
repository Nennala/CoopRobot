ARM GAS  /tmp/ccFMycvQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"freertos.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.alumer_gauche,"ax",%progbits
  22              		.align	2
  23              		.global	alumer_gauche
  24              		.thumb
  25              		.thumb_func
  27              	alumer_gauche:
  28              	.LFB129:
  29              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  /tmp/ccFMycvQ.s 			page 2


  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include <string.h>
  55:Src/freertos.c **** #include "cmsis_os.h"
  56:Src/freertos.c **** #include "main.h"
  57:Src/freertos.c **** #include "stm32f3xx_hal.h"
  58:Src/freertos.c **** /* USER CODE END Includes */
  59:Src/freertos.c **** 
  60:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  61:Src/freertos.c **** 
  62:Src/freertos.c **** /* USER CODE BEGIN Variables */
  63:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  64:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  65:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  66:Src/freertos.c **** extern TIM_HandleTypeDef htim2;
  67:Src/freertos.c **** 
  68:Src/freertos.c **** uint32_t adcBuffer;
  69:Src/freertos.c **** int flag_adc = 0;
  70:Src/freertos.c **** int deplacement_fini = 0;
  71:Src/freertos.c **** /* USER CODE END Variables */
  72:Src/freertos.c **** 
  73:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  74:Src/freertos.c **** 
  75:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  76:Src/freertos.c **** 
  77:Src/freertos.c **** void alumer_gauche(int sens) {
  30              		.loc 1 77 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
ARM GAS  /tmp/ccFMycvQ.s 			page 3


  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  78:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  42              		.loc 1 78 0
  43 0002 0546     		mov	r5, r0
  44 0004 064C     		ldr	r4, .L3
  45 0006 B0FA80F2 		clz	r2, r0
  46 000a 5209     		lsrs	r2, r2, #5
  47 000c 0221     		movs	r1, #2
  48 000e 2046     		mov	r0, r4
  49              	.LVL1:
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  51              	.LVL2:
  79:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  52              		.loc 1 79 0
  53 0014 EAB2     		uxtb	r2, r5
  54 0016 0121     		movs	r1, #1
  55 0018 2046     		mov	r0, r4
  56 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58 001e 38BD     		pop	{r3, r4, r5, pc}
  59              	.LVL4:
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00140048 		.word	1207964672
  64              		.cfi_endproc
  65              	.LFE129:
  67              		.section	.text.alumer_droite,"ax",%progbits
  68              		.align	2
  69              		.global	alumer_droite
  70              		.thumb
  71              		.thumb_func
  73              	alumer_droite:
  74              	.LFB130:
  80:Src/freertos.c **** }
  81:Src/freertos.c **** 
  82:Src/freertos.c **** void alumer_droite(int sens) {
  75              		.loc 1 82 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL5:
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
  83:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  85              		.loc 1 83 0
  86 0002 0446     		mov	r4, r0
  87 0004 B0FA80F2 		clz	r2, r0
  88 0008 5209     		lsrs	r2, r2, #5
  89 000a 4FF40061 		mov	r1, #2048
  90 000e 4FF09040 		mov	r0, #1207959552
  91              	.LVL6:
ARM GAS  /tmp/ccFMycvQ.s 			page 4


  92 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL7:
  84:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  94              		.loc 1 84 0
  95 0016 E2B2     		uxtb	r2, r4
  96 0018 2021     		movs	r1, #32
  97 001a 0248     		ldr	r0, .L7
  98 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 100 0020 10BD     		pop	{r4, pc}
 101              	.LVL9:
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 00040048 		.word	1207960576
 106              		.cfi_endproc
 107              	.LFE130:
 109              		.section	.text.eteindre_gauche,"ax",%progbits
 110              		.align	2
 111              		.global	eteindre_gauche
 112              		.thumb
 113              		.thumb_func
 115              	eteindre_gauche:
 116              	.LFB131:
  85:Src/freertos.c **** }
  86:Src/freertos.c **** 
  87:Src/freertos.c **** void eteindre_gauche() {
 117              		.loc 1 87 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
  88:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 126              		.loc 1 88 0
 127 0002 064C     		ldr	r4, .L11
 128 0004 0022     		movs	r2, #0
 129 0006 0221     		movs	r1, #2
 130 0008 2046     		mov	r0, r4
 131 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
  89:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 133              		.loc 1 89 0
 134 000e 0022     		movs	r2, #0
 135 0010 0121     		movs	r1, #1
 136 0012 2046     		mov	r0, r4
 137 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL11:
 139 0018 10BD     		pop	{r4, pc}
 140              	.L12:
 141 001a 00BF     		.align	2
 142              	.L11:
 143 001c 00140048 		.word	1207964672
 144              		.cfi_endproc
ARM GAS  /tmp/ccFMycvQ.s 			page 5


 145              	.LFE131:
 147              		.section	.text.eteindre_droite,"ax",%progbits
 148              		.align	2
 149              		.global	eteindre_droite
 150              		.thumb
 151              		.thumb_func
 153              	eteindre_droite:
 154              	.LFB132:
  90:Src/freertos.c **** }
  91:Src/freertos.c **** 
  92:Src/freertos.c **** void eteindre_droite() {
 155              		.loc 1 92 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
  93:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 164              		.loc 1 93 0
 165 0002 0022     		movs	r2, #0
 166 0004 4FF40061 		mov	r1, #2048
 167 0008 4FF09040 		mov	r0, #1207959552
 168 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL12:
  94:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 170              		.loc 1 94 0
 171 0010 0022     		movs	r2, #0
 172 0012 2021     		movs	r1, #32
 173 0014 0148     		ldr	r0, .L15
 174 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL13:
 176 001a 08BD     		pop	{r3, pc}
 177              	.L16:
 178              		.align	2
 179              	.L15:
 180 001c 00040048 		.word	1207960576
 181              		.cfi_endproc
 182              	.LFE132:
 184              		.section	.text.avancer_dix_cm,"ax",%progbits
 185              		.align	2
 186              		.global	avancer_dix_cm
 187              		.thumb
 188              		.thumb_func
 190              	avancer_dix_cm:
 191              	.LFB133:
  95:Src/freertos.c **** }
  96:Src/freertos.c **** 
  97:Src/freertos.c **** void avancer_dix_cm() {
 192              		.loc 1 97 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI4:
ARM GAS  /tmp/ccFMycvQ.s 			page 6


 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
  98:Src/freertos.c ****     alumer_droite(1);
 201              		.loc 1 98 0
 202 0002 0120     		movs	r0, #1
 203 0004 FFF7FEFF 		bl	alumer_droite
 204              	.LVL14:
  99:Src/freertos.c ****     alumer_gauche(1);
 205              		.loc 1 99 0
 206 0008 0120     		movs	r0, #1
 207 000a FFF7FEFF 		bl	alumer_gauche
 208              	.LVL15:
 100:Src/freertos.c ****     //accelerer();
 101:Src/freertos.c ****     osDelay(2000);
 209              		.loc 1 101 0
 210 000e 4FF4FA60 		mov	r0, #2000
 211 0012 FFF7FEFF 		bl	osDelay
 212              	.LVL16:
 102:Src/freertos.c ****     //deccelerer();
 103:Src/freertos.c ****     eteindre_droite();
 213              		.loc 1 103 0
 214 0016 FFF7FEFF 		bl	eteindre_droite
 215              	.LVL17:
 104:Src/freertos.c ****     eteindre_gauche();
 216              		.loc 1 104 0
 217 001a FFF7FEFF 		bl	eteindre_gauche
 218              	.LVL18:
 105:Src/freertos.c ****     deplacement_fini = 1;
 219              		.loc 1 105 0
 220 001e 0122     		movs	r2, #1
 221 0020 014B     		ldr	r3, .L19
 222 0022 1A60     		str	r2, [r3]
 223 0024 08BD     		pop	{r3, pc}
 224              	.L20:
 225 0026 00BF     		.align	2
 226              	.L19:
 227 0028 00000000 		.word	.LANCHOR0
 228              		.cfi_endproc
 229              	.LFE133:
 231              		.section	.text.reculer_dix_cm,"ax",%progbits
 232              		.align	2
 233              		.global	reculer_dix_cm
 234              		.thumb
 235              		.thumb_func
 237              	reculer_dix_cm:
 238              	.LFB134:
 106:Src/freertos.c **** }
 107:Src/freertos.c **** 
 108:Src/freertos.c **** void reculer_dix_cm() {
 239              		.loc 1 108 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI5:
 245              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFMycvQ.s 			page 7


 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 109:Src/freertos.c ****     alumer_droite(0);
 248              		.loc 1 109 0
 249 0002 0020     		movs	r0, #0
 250 0004 FFF7FEFF 		bl	alumer_droite
 251              	.LVL19:
 110:Src/freertos.c ****     alumer_gauche(0);
 252              		.loc 1 110 0
 253 0008 0020     		movs	r0, #0
 254 000a FFF7FEFF 		bl	alumer_gauche
 255              	.LVL20:
 111:Src/freertos.c ****     //accelerer();
 112:Src/freertos.c ****     osDelay(2000);
 256              		.loc 1 112 0
 257 000e 4FF4FA60 		mov	r0, #2000
 258 0012 FFF7FEFF 		bl	osDelay
 259              	.LVL21:
 113:Src/freertos.c ****     //deccelerer();
 114:Src/freertos.c ****     eteindre_droite();
 260              		.loc 1 114 0
 261 0016 FFF7FEFF 		bl	eteindre_droite
 262              	.LVL22:
 115:Src/freertos.c ****     eteindre_gauche();
 263              		.loc 1 115 0
 264 001a FFF7FEFF 		bl	eteindre_gauche
 265              	.LVL23:
 116:Src/freertos.c ****     deplacement_fini = 1;
 266              		.loc 1 116 0
 267 001e 0122     		movs	r2, #1
 268 0020 014B     		ldr	r3, .L23
 269 0022 1A60     		str	r2, [r3]
 270 0024 08BD     		pop	{r3, pc}
 271              	.L24:
 272 0026 00BF     		.align	2
 273              	.L23:
 274 0028 00000000 		.word	.LANCHOR0
 275              		.cfi_endproc
 276              	.LFE134:
 278              		.section	.text.tourner_droite,"ax",%progbits
 279              		.align	2
 280              		.global	tourner_droite
 281              		.thumb
 282              		.thumb_func
 284              	tourner_droite:
 285              	.LFB135:
 117:Src/freertos.c **** }
 118:Src/freertos.c **** 
 119:Src/freertos.c **** void tourner_droite() {
 286              		.loc 1 119 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
ARM GAS  /tmp/ccFMycvQ.s 			page 8


 294              		.cfi_offset 14, -4
 120:Src/freertos.c ****     alumer_gauche(1);
 295              		.loc 1 120 0
 296 0002 0120     		movs	r0, #1
 297 0004 FFF7FEFF 		bl	alumer_gauche
 298              	.LVL24:
 121:Src/freertos.c ****     alumer_droite(0);
 299              		.loc 1 121 0
 300 0008 0020     		movs	r0, #0
 301 000a FFF7FEFF 		bl	alumer_droite
 302              	.LVL25:
 122:Src/freertos.c ****     //accelerer();
 123:Src/freertos.c ****     osDelay(1000);
 303              		.loc 1 123 0
 304 000e 4FF47A70 		mov	r0, #1000
 305 0012 FFF7FEFF 		bl	osDelay
 306              	.LVL26:
 124:Src/freertos.c ****     //deccelerer();
 125:Src/freertos.c ****     eteindre_droite();
 307              		.loc 1 125 0
 308 0016 FFF7FEFF 		bl	eteindre_droite
 309              	.LVL27:
 126:Src/freertos.c ****     eteindre_gauche();
 310              		.loc 1 126 0
 311 001a FFF7FEFF 		bl	eteindre_gauche
 312              	.LVL28:
 127:Src/freertos.c ****     deplacement_fini = 1;
 313              		.loc 1 127 0
 314 001e 0122     		movs	r2, #1
 315 0020 014B     		ldr	r3, .L27
 316 0022 1A60     		str	r2, [r3]
 317 0024 08BD     		pop	{r3, pc}
 318              	.L28:
 319 0026 00BF     		.align	2
 320              	.L27:
 321 0028 00000000 		.word	.LANCHOR0
 322              		.cfi_endproc
 323              	.LFE135:
 325              		.section	.text.tourner_gauche,"ax",%progbits
 326              		.align	2
 327              		.global	tourner_gauche
 328              		.thumb
 329              		.thumb_func
 331              	tourner_gauche:
 332              	.LFB136:
 128:Src/freertos.c **** }
 129:Src/freertos.c **** 
 130:Src/freertos.c **** void tourner_gauche() {
 333              		.loc 1 130 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              	.LCFI7:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFMycvQ.s 			page 9


 131:Src/freertos.c ****     alumer_droite(1);
 342              		.loc 1 131 0
 343 0002 0120     		movs	r0, #1
 344 0004 FFF7FEFF 		bl	alumer_droite
 345              	.LVL29:
 132:Src/freertos.c ****     alumer_gauche(0);
 346              		.loc 1 132 0
 347 0008 0020     		movs	r0, #0
 348 000a FFF7FEFF 		bl	alumer_gauche
 349              	.LVL30:
 133:Src/freertos.c ****     //accelerer();
 134:Src/freertos.c ****     osDelay(1000);
 350              		.loc 1 134 0
 351 000e 4FF47A70 		mov	r0, #1000
 352 0012 FFF7FEFF 		bl	osDelay
 353              	.LVL31:
 135:Src/freertos.c ****     //deccelerer();
 136:Src/freertos.c ****     eteindre_droite();
 354              		.loc 1 136 0
 355 0016 FFF7FEFF 		bl	eteindre_droite
 356              	.LVL32:
 137:Src/freertos.c ****     eteindre_gauche();
 357              		.loc 1 137 0
 358 001a FFF7FEFF 		bl	eteindre_gauche
 359              	.LVL33:
 138:Src/freertos.c ****     deplacement_fini = 1;
 360              		.loc 1 138 0
 361 001e 0122     		movs	r2, #1
 362 0020 014B     		ldr	r3, .L31
 363 0022 1A60     		str	r2, [r3]
 364 0024 08BD     		pop	{r3, pc}
 365              	.L32:
 366 0026 00BF     		.align	2
 367              	.L31:
 368 0028 00000000 		.word	.LANCHOR0
 369              		.cfi_endproc
 370              	.LFE136:
 372              		.section	.text.accelerer,"ax",%progbits
 373              		.align	2
 374              		.global	accelerer
 375              		.thumb
 376              		.thumb_func
 378              	accelerer:
 379              	.LFB137:
 139:Src/freertos.c **** }
 140:Src/freertos.c **** 
 141:Src/freertos.c **** void accelerer() {
 380              		.loc 1 141 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 10B5     		push	{r4, lr}
 385              	.LCFI8:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 389              	.LVL34:
ARM GAS  /tmp/ccFMycvQ.s 			page 10


 142:Src/freertos.c ****     int pwm = 0;
 390              		.loc 1 142 0
 391 0002 0024     		movs	r4, #0
 143:Src/freertos.c ****     while (pwm != 100) {
 392              		.loc 1 143 0
 393 0004 07E0     		b	.L34
 394              	.LVL35:
 395              	.L35:
 144:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 396              		.loc 1 144 0
 397 0006 054B     		ldr	r3, .L37
 398 0008 1B68     		ldr	r3, [r3]
 399 000a 5C63     		str	r4, [r3, #52]
 145:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 400              		.loc 1 145 0
 401 000c 1C64     		str	r4, [r3, #64]
 146:Src/freertos.c ****         pwm += 10;
 402              		.loc 1 146 0
 403 000e 0A34     		adds	r4, r4, #10
 404              	.LVL36:
 147:Src/freertos.c ****         osDelay(100);
 405              		.loc 1 147 0
 406 0010 6420     		movs	r0, #100
 407 0012 FFF7FEFF 		bl	osDelay
 408              	.LVL37:
 409              	.L34:
 143:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 410              		.loc 1 143 0
 411 0016 642C     		cmp	r4, #100
 412 0018 F5D1     		bne	.L35
 148:Src/freertos.c ****     }
 149:Src/freertos.c **** }
 413              		.loc 1 149 0
 414 001a 10BD     		pop	{r4, pc}
 415              	.LVL38:
 416              	.L38:
 417              		.align	2
 418              	.L37:
 419 001c 00000000 		.word	htim3
 420              		.cfi_endproc
 421              	.LFE137:
 423              		.section	.text.deccelerer,"ax",%progbits
 424              		.align	2
 425              		.global	deccelerer
 426              		.thumb
 427              		.thumb_func
 429              	deccelerer:
 430              	.LFB138:
 150:Src/freertos.c **** 
 151:Src/freertos.c **** void deccelerer() {
 431              		.loc 1 151 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 10B5     		push	{r4, lr}
 436              	.LCFI9:
 437              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFMycvQ.s 			page 11


 438              		.cfi_offset 4, -8
 439              		.cfi_offset 14, -4
 440              	.LVL39:
 152:Src/freertos.c ****     int pwm = 100;
 441              		.loc 1 152 0
 442 0002 6424     		movs	r4, #100
 153:Src/freertos.c ****     while (pwm != 0) {
 443              		.loc 1 153 0
 444 0004 07E0     		b	.L40
 445              	.LVL40:
 446              	.L41:
 154:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 447              		.loc 1 154 0
 448 0006 054B     		ldr	r3, .L43
 449 0008 1B68     		ldr	r3, [r3]
 450 000a 5C63     		str	r4, [r3, #52]
 155:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 451              		.loc 1 155 0
 452 000c 1C64     		str	r4, [r3, #64]
 156:Src/freertos.c ****         pwm -= 10;
 453              		.loc 1 156 0
 454 000e 0A3C     		subs	r4, r4, #10
 455              	.LVL41:
 157:Src/freertos.c ****         osDelay(100);
 456              		.loc 1 157 0
 457 0010 6420     		movs	r0, #100
 458 0012 FFF7FEFF 		bl	osDelay
 459              	.LVL42:
 460              	.L40:
 153:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 461              		.loc 1 153 0
 462 0016 002C     		cmp	r4, #0
 463 0018 F5D1     		bne	.L41
 158:Src/freertos.c ****     }
 159:Src/freertos.c **** }
 464              		.loc 1 159 0
 465 001a 10BD     		pop	{r4, pc}
 466              	.LVL43:
 467              	.L44:
 468              		.align	2
 469              	.L43:
 470 001c 00000000 		.word	htim3
 471              		.cfi_endproc
 472              	.LFE138:
 474              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 475              		.align	2
 476              		.global	HAL_ADC_ConvCpltCallback
 477              		.thumb
 478              		.thumb_func
 480              	HAL_ADC_ConvCpltCallback:
 481              	.LFB139:
 160:Src/freertos.c **** 
 161:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 482              		.loc 1 161 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFMycvQ.s 			page 12


 486              		@ link register save eliminated.
 487              	.LVL44:
 162:Src/freertos.c ****     UNUSED(hadc);
 163:Src/freertos.c **** 
 164:Src/freertos.c ****     flag_adc = 1;
 488              		.loc 1 164 0
 489 0000 0122     		movs	r2, #1
 490 0002 014B     		ldr	r3, .L46
 491 0004 1A60     		str	r2, [r3]
 492 0006 7047     		bx	lr
 493              	.L47:
 494              		.align	2
 495              	.L46:
 496 0008 00000000 		.word	.LANCHOR1
 497              		.cfi_endproc
 498              	.LFE139:
 500              		.section	.text._write,"ax",%progbits
 501              		.align	2
 502              		.global	_write
 503              		.thumb
 504              		.thumb_func
 506              	_write:
 507              	.LFB140:
 165:Src/freertos.c **** }
 166:Src/freertos.c **** 
 167:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 508              		.loc 1 167 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              	.LVL45:
 513 0000 10B5     		push	{r4, lr}
 514              	.LCFI10:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 518 0002 1446     		mov	r4, r2
 168:Src/freertos.c ****     UNUSED(file);
 169:Src/freertos.c **** 
 170:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 519              		.loc 1 170 0
 520 0004 42F21073 		movw	r3, #10000
 521 0008 92B2     		uxth	r2, r2
 522              	.LVL46:
 523 000a 0248     		ldr	r0, .L50
 524              	.LVL47:
 525 000c FFF7FEFF 		bl	HAL_UART_Transmit
 526              	.LVL48:
 171:Src/freertos.c **** 
 172:Src/freertos.c ****     return len;
 173:Src/freertos.c **** }
 527              		.loc 1 173 0
 528 0010 2046     		mov	r0, r4
 529 0012 10BD     		pop	{r4, pc}
 530              	.LVL49:
 531              	.L51:
 532              		.align	2
ARM GAS  /tmp/ccFMycvQ.s 			page 13


 533              	.L50:
 534 0014 00000000 		.word	huart2
 535              		.cfi_endproc
 536              	.LFE140:
 538              		.section	.text.adcControl,"ax",%progbits
 539              		.align	2
 540              		.global	adcControl
 541              		.thumb
 542              		.thumb_func
 544              	adcControl:
 545              	.LFB141:
 174:Src/freertos.c **** 
 175:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 176:Src/freertos.c **** 
 177:Src/freertos.c **** /* Hook prototypes */
 178:Src/freertos.c **** 
 179:Src/freertos.c **** /* USER CODE BEGIN Application */
 180:Src/freertos.c **** void adcControl(void const * argument)
 181:Src/freertos.c **** {
 546              		.loc 1 181 0
 547              		.cfi_startproc
 548              		@ Volatile: function does not return.
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              	.LVL50:
 552 0000 08B5     		push	{r3, lr}
 553              	.LCFI11:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 3, -8
 556              		.cfi_offset 14, -4
 182:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 183:Src/freertos.c ****   UNUSED(argument);
 184:Src/freertos.c **** 
 185:Src/freertos.c ****   HAL_TIM_Base_Start(&htim2);
 557              		.loc 1 185 0
 558 0002 0B48     		ldr	r0, .L56
 559              	.LVL51:
 560 0004 FFF7FEFF 		bl	HAL_TIM_Base_Start
 561              	.LVL52:
 186:Src/freertos.c ****   HAL_ADC_Start_DMA(&hadc1,(uint32_t *)adcBuffer, 1);
 562              		.loc 1 186 0
 563 0008 0122     		movs	r2, #1
 564 000a 0A4B     		ldr	r3, .L56+4
 565 000c 1968     		ldr	r1, [r3]
 566 000e 0A48     		ldr	r0, .L56+8
 567 0010 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 568              	.LVL53:
 569              	.L54:
 187:Src/freertos.c **** 
 188:Src/freertos.c ****   /* Infinite loop */
 189:Src/freertos.c ****   for(;;)
 190:Src/freertos.c ****   {
 191:Src/freertos.c ****     if (flag_adc == 1) {
 570              		.loc 1 191 0
 571 0014 094B     		ldr	r3, .L56+12
 572 0016 1B68     		ldr	r3, [r3]
 573 0018 012B     		cmp	r3, #1
ARM GAS  /tmp/ccFMycvQ.s 			page 14


 574 001a 04D1     		bne	.L53
 192:Src/freertos.c ****         printf("Value : %lu\r\n", adcBuffer);
 575              		.loc 1 192 0
 576 001c 054B     		ldr	r3, .L56+4
 577 001e 1968     		ldr	r1, [r3]
 578 0020 0748     		ldr	r0, .L56+16
 579 0022 FFF7FEFF 		bl	printf
 580              	.LVL54:
 581              	.L53:
 193:Src/freertos.c ****     }
 194:Src/freertos.c ****     osDelay(1000);
 582              		.loc 1 194 0
 583 0026 4FF47A70 		mov	r0, #1000
 584 002a FFF7FEFF 		bl	osDelay
 585              	.LVL55:
 195:Src/freertos.c ****   }
 586              		.loc 1 195 0
 587 002e F1E7     		b	.L54
 588              	.L57:
 589              		.align	2
 590              	.L56:
 591 0030 00000000 		.word	htim2
 592 0034 00000000 		.word	adcBuffer
 593 0038 00000000 		.word	hadc1
 594 003c 00000000 		.word	.LANCHOR1
 595 0040 00000000 		.word	.LC0
 596              		.cfi_endproc
 597              	.LFE141:
 599              		.section	.text.motor,"ax",%progbits
 600              		.align	2
 601              		.global	motor
 602              		.thumb
 603              		.thumb_func
 605              	motor:
 606              	.LFB142:
 196:Src/freertos.c ****   /* USER CODE END adcControl */
 197:Src/freertos.c **** }
 198:Src/freertos.c **** 
 199:Src/freertos.c **** void motor(void const * argument)
 200:Src/freertos.c **** {
 607              		.loc 1 200 0
 608              		.cfi_startproc
 609              		@ Volatile: function does not return.
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL56:
 613 0000 08B5     		push	{r3, lr}
 614              	.LCFI12:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 3, -8
 617              		.cfi_offset 14, -4
 201:Src/freertos.c ****   /* USER CODE BEGIN motor */
 202:Src/freertos.c ****   UNUSED(argument);
 203:Src/freertos.c **** 
 204:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 618              		.loc 1 204 0
 619 0002 0122     		movs	r2, #1
ARM GAS  /tmp/ccFMycvQ.s 			page 15


 620 0004 4FF48071 		mov	r1, #256
 621 0008 4FF09040 		mov	r0, #1207959552
 622              	.LVL57:
 623 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 624              	.LVL58:
 205:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 625              		.loc 1 205 0
 626 0010 124C     		ldr	r4, .L61
 627 0012 2046     		mov	r0, r4
 628 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 629              	.LVL59:
 206:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 630              		.loc 1 206 0
 631 0018 0021     		movs	r1, #0
 632 001a 2046     		mov	r0, r4
 633 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 634              	.LVL60:
 207:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 635              		.loc 1 207 0
 636 0020 0C21     		movs	r1, #12
 637 0022 2046     		mov	r0, r4
 638 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 639              	.LVL61:
 640              	.L59:
 208:Src/freertos.c **** 
 209:Src/freertos.c ****   /* Infinite loop */
 210:Src/freertos.c ****   for(;;)
 211:Src/freertos.c ****   {
 212:Src/freertos.c ****     avancer_dix_cm();
 641              		.loc 1 212 0 discriminator 1
 642 0028 FFF7FEFF 		bl	avancer_dix_cm
 643              	.LVL62:
 213:Src/freertos.c ****     osDelay(500);
 644              		.loc 1 213 0 discriminator 1
 645 002c 4FF4FA70 		mov	r0, #500
 646 0030 FFF7FEFF 		bl	osDelay
 647              	.LVL63:
 214:Src/freertos.c ****     reculer_dix_cm();
 648              		.loc 1 214 0 discriminator 1
 649 0034 FFF7FEFF 		bl	reculer_dix_cm
 650              	.LVL64:
 215:Src/freertos.c ****     osDelay(500);
 651              		.loc 1 215 0 discriminator 1
 652 0038 4FF4FA70 		mov	r0, #500
 653 003c FFF7FEFF 		bl	osDelay
 654              	.LVL65:
 216:Src/freertos.c ****     tourner_gauche();
 655              		.loc 1 216 0 discriminator 1
 656 0040 FFF7FEFF 		bl	tourner_gauche
 657              	.LVL66:
 217:Src/freertos.c ****     osDelay(500);
 658              		.loc 1 217 0 discriminator 1
 659 0044 4FF4FA70 		mov	r0, #500
 660 0048 FFF7FEFF 		bl	osDelay
 661              	.LVL67:
 218:Src/freertos.c ****     tourner_droite();
 662              		.loc 1 218 0 discriminator 1
ARM GAS  /tmp/ccFMycvQ.s 			page 16


 663 004c FFF7FEFF 		bl	tourner_droite
 664              	.LVL68:
 219:Src/freertos.c ****     osDelay(500);
 665              		.loc 1 219 0 discriminator 1
 666 0050 4FF4FA70 		mov	r0, #500
 667 0054 FFF7FEFF 		bl	osDelay
 668              	.LVL69:
 669 0058 E6E7     		b	.L59
 670              	.L62:
 671 005a 00BF     		.align	2
 672              	.L61:
 673 005c 00000000 		.word	htim3
 674              		.cfi_endproc
 675              	.LFE142:
 677              		.global	deplacement_fini
 678              		.global	flag_adc
 679              		.comm	adcBuffer,4,4
 680              		.section	.bss.flag_adc,"aw",%nobits
 681              		.align	2
 682              		.set	.LANCHOR1,. + 0
 685              	flag_adc:
 686 0000 00000000 		.space	4
 687              		.section	.bss.deplacement_fini,"aw",%nobits
 688              		.align	2
 689              		.set	.LANCHOR0,. + 0
 692              	deplacement_fini:
 693 0000 00000000 		.space	4
 694              		.section	.rodata.str1.4,"aMS",%progbits,1
 695              		.align	2
 696              	.LC0:
 697 0000 56616C75 		.ascii	"Value : %lu\015\012\000"
 697      65203A20 
 697      256C750D 
 697      0A00
 698              		.text
 699              	.Letext0:
 700              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 701              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 702              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 703              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 704              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 705              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 706              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 707              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 708              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 709              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 710              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 711              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 712              		.file 14 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccFMycvQ.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccFMycvQ.s:22     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccFMycvQ.s:27     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccFMycvQ.s:63     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccFMycvQ.s:68     .text.alumer_droite:0000000000000000 $t
     /tmp/ccFMycvQ.s:73     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccFMycvQ.s:105    .text.alumer_droite:0000000000000024 $d
     /tmp/ccFMycvQ.s:110    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccFMycvQ.s:115    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccFMycvQ.s:143    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccFMycvQ.s:148    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccFMycvQ.s:153    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccFMycvQ.s:180    .text.eteindre_droite:000000000000001c $d
     /tmp/ccFMycvQ.s:185    .text.avancer_dix_cm:0000000000000000 $t
     /tmp/ccFMycvQ.s:190    .text.avancer_dix_cm:0000000000000000 avancer_dix_cm
     /tmp/ccFMycvQ.s:227    .text.avancer_dix_cm:0000000000000028 $d
     /tmp/ccFMycvQ.s:232    .text.reculer_dix_cm:0000000000000000 $t
     /tmp/ccFMycvQ.s:237    .text.reculer_dix_cm:0000000000000000 reculer_dix_cm
     /tmp/ccFMycvQ.s:274    .text.reculer_dix_cm:0000000000000028 $d
     /tmp/ccFMycvQ.s:279    .text.tourner_droite:0000000000000000 $t
     /tmp/ccFMycvQ.s:284    .text.tourner_droite:0000000000000000 tourner_droite
     /tmp/ccFMycvQ.s:321    .text.tourner_droite:0000000000000028 $d
     /tmp/ccFMycvQ.s:326    .text.tourner_gauche:0000000000000000 $t
     /tmp/ccFMycvQ.s:331    .text.tourner_gauche:0000000000000000 tourner_gauche
     /tmp/ccFMycvQ.s:368    .text.tourner_gauche:0000000000000028 $d
     /tmp/ccFMycvQ.s:373    .text.accelerer:0000000000000000 $t
     /tmp/ccFMycvQ.s:378    .text.accelerer:0000000000000000 accelerer
     /tmp/ccFMycvQ.s:419    .text.accelerer:000000000000001c $d
     /tmp/ccFMycvQ.s:424    .text.deccelerer:0000000000000000 $t
     /tmp/ccFMycvQ.s:429    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccFMycvQ.s:470    .text.deccelerer:000000000000001c $d
     /tmp/ccFMycvQ.s:475    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccFMycvQ.s:480    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccFMycvQ.s:496    .text.HAL_ADC_ConvCpltCallback:0000000000000008 $d
     /tmp/ccFMycvQ.s:501    .text._write:0000000000000000 $t
     /tmp/ccFMycvQ.s:506    .text._write:0000000000000000 _write
     /tmp/ccFMycvQ.s:534    .text._write:0000000000000014 $d
     /tmp/ccFMycvQ.s:539    .text.adcControl:0000000000000000 $t
     /tmp/ccFMycvQ.s:544    .text.adcControl:0000000000000000 adcControl
     /tmp/ccFMycvQ.s:591    .text.adcControl:0000000000000030 $d
                            *COM*:0000000000000004 adcBuffer
     /tmp/ccFMycvQ.s:600    .text.motor:0000000000000000 $t
     /tmp/ccFMycvQ.s:605    .text.motor:0000000000000000 motor
     /tmp/ccFMycvQ.s:673    .text.motor:000000000000005c $d
     /tmp/ccFMycvQ.s:692    .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccFMycvQ.s:685    .bss.flag_adc:0000000000000000 flag_adc
     /tmp/ccFMycvQ.s:681    .bss.flag_adc:0000000000000000 $d
     /tmp/ccFMycvQ.s:688    .bss.deplacement_fini:0000000000000000 $d
     /tmp/ccFMycvQ.s:695    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
osDelay
htim3
HAL_UART_Transmit
ARM GAS  /tmp/ccFMycvQ.s 			page 18


huart2
HAL_TIM_Base_Start
HAL_ADC_Start_DMA
printf
htim2
hadc1
HAL_TIM_PWM_Start
