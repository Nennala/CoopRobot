<<<<<<< HEAD
ARM GAS  /tmp/cckw9KWo.s 			page 1
=======
ARM GAS  /tmp/ccXGsRah.s 			page 1
>>>>>>> refs/remotes/origin/master


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"freertos.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.alumer_gauche,"ax",%progbits
  22              		.align	2
  23              		.global	alumer_gauche
  24              		.thumb
  25              		.thumb_func
  27              	alumer_gauche:
  28              	.LFB129:
  29              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
<<<<<<< HEAD
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/cckw9KWo.s 			page 2
=======
ARM GAS  /tmp/ccXGsRah.s 			page 2
>>>>>>> refs/remotes/origin/master


  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #include <time.h>
  59:Src/freertos.c **** #include <stdlib.h>
  60:Src/freertos.c **** 
  61:Src/freertos.c **** #define PWM_MAX 320
  62:Src/freertos.c **** #define DELAY 1000
  63:Src/freertos.c **** #define OK 0x06
  64:Src/freertos.c **** /* USER CODE END Includes */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* USER CODE BEGIN Variables */
  69:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  70:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  71:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  72:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** int flag_adc = 0;
  75:Src/freertos.c **** uint32_t adcValue = 0;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** int deplacement_fini = 0;
  78:Src/freertos.c **** 
  79:Src/freertos.c **** int flag_haut = 0;
  80:Src/freertos.c **** int flag_bas = 0;
  81:Src/freertos.c **** int flag_droite = 0;
  82:Src/freertos.c **** int flag_gauche = 0;
  83:Src/freertos.c **** int flag_distance = 0;
  84:Src/freertos.c **** int flag_cap =0;
<<<<<<< HEAD
  85:Src/freertos.c **** 
  86:Src/freertos.c **** struct Robot {
  87:Src/freertos.c ****     int posx;
ARM GAS  /tmp/cckw9KWo.s 			page 3


  88:Src/freertos.c ****     int posy;
  89:Src/freertos.c ****     int orientation;
  90:Src/freertos.c **** };
  91:Src/freertos.c **** 
  92:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  93:Src/freertos.c **** 
  94:Src/freertos.c **** /* USER CODE END Variables */
  95:Src/freertos.c **** 
  96:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  97:Src/freertos.c **** 
  98:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  99:Src/freertos.c **** 
 100:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
 101:Src/freertos.c **** void alumer_gauche(int sens) {
  29              		.loc 1 101 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 102:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  41              		.loc 1 102 0
  42 0002 074C     		ldr	r4, .L3
  43 0004 0546     		mov	r5, r0
  44 0006 B0FA80F2 		clz	r2, r0
  45 000a 5209     		lsrs	r2, r2, #5
  46 000c 2046     		mov	r0, r4
  47              	.LVL1:
  48 000e 0221     		movs	r1, #2
  49 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL2:
 103:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  51              		.loc 1 103 0
  52 0014 2046     		mov	r0, r4
  53 0016 0121     		movs	r1, #1
  54 0018 EAB2     		uxtb	r2, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL3:
  57 001e 38BD     		pop	{r3, r4, r5, pc}
  58              	.LVL4:
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0020 00140048 		.word	1207964672
  63              		.cfi_endproc
  64              	.LFE128:
  66              		.section	.text.alumer_droite,"ax",%progbits
  67              		.align	2
  68              		.global	alumer_droite
  69              		.thumb
  70              		.thumb_func
ARM GAS  /tmp/cckw9KWo.s 			page 4


  72              	alumer_droite:
  73              	.LFB129:
 104:Src/freertos.c **** }
 105:Src/freertos.c **** 
 106:Src/freertos.c **** void alumer_droite(int sens) {
  74              		.loc 1 106 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL5:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
 107:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  84              		.loc 1 107 0
  85 0002 0446     		mov	r4, r0
  86 0004 B0FA80F2 		clz	r2, r0
  87 0008 5209     		lsrs	r2, r2, #5
  88 000a 4FF09040 		mov	r0, #1207959552
  89              	.LVL6:
  90 000e 4FF40061 		mov	r1, #2048
  91 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL7:
 108:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  93              		.loc 1 108 0
  94 0016 0348     		ldr	r0, .L7
  95 0018 2021     		movs	r1, #32
  96 001a E2B2     		uxtb	r2, r4
  97 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL8:
  99 0020 10BD     		pop	{r4, pc}
 100              	.LVL9:
 101              	.L8:
 102 0022 00BF     		.align	2
 103              	.L7:
 104 0024 00040048 		.word	1207960576
 105              		.cfi_endproc
 106              	.LFE129:
 108              		.section	.text.eteindre_gauche,"ax",%progbits
 109              		.align	2
 110              		.global	eteindre_gauche
 111              		.thumb
 112              		.thumb_func
 114              	eteindre_gauche:
 115              	.LFB130:
 109:Src/freertos.c **** }
 110:Src/freertos.c **** 
 111:Src/freertos.c **** void eteindre_gauche() {
 116              		.loc 1 111 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cckw9KWo.s 			page 5


 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 112:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 125              		.loc 1 112 0
 126 0002 064C     		ldr	r4, .L11
 127 0004 2046     		mov	r0, r4
 128 0006 0221     		movs	r1, #2
 129 0008 0022     		movs	r2, #0
 130 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL10:
 113:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 132              		.loc 1 113 0
 133 000e 2046     		mov	r0, r4
 134 0010 0121     		movs	r1, #1
 135 0012 0022     		movs	r2, #0
 136 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL11:
 138 0018 10BD     		pop	{r4, pc}
 139              	.L12:
 140 001a 00BF     		.align	2
 141              	.L11:
 142 001c 00140048 		.word	1207964672
 143              		.cfi_endproc
 144              	.LFE130:
 146              		.section	.text.eteindre_droite,"ax",%progbits
 147              		.align	2
 148              		.global	eteindre_droite
 149              		.thumb
 150              		.thumb_func
 152              	eteindre_droite:
 153              	.LFB131:
 114:Src/freertos.c **** }
 115:Src/freertos.c **** 
 116:Src/freertos.c **** void eteindre_droite() {
 154              		.loc 1 116 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
 117:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 163              		.loc 1 117 0
 164 0002 4FF09040 		mov	r0, #1207959552
 165 0006 4FF40061 		mov	r1, #2048
 166 000a 0022     		movs	r2, #0
 167 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL12:
 118:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 169              		.loc 1 118 0
 170 0010 0248     		ldr	r0, .L15
 171 0012 2021     		movs	r1, #32
 172 0014 0022     		movs	r2, #0
 173 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 174              	.LVL13:
ARM GAS  /tmp/cckw9KWo.s 			page 6


 175 001a 08BD     		pop	{r3, pc}
 176              	.L16:
 177              		.align	2
 178              	.L15:
 179 001c 00040048 		.word	1207960576
 180              		.cfi_endproc
 181              	.LFE131:
 183              		.section	.text.pwm_max,"ax",%progbits
 184              		.align	2
 185              		.global	pwm_max
 186              		.thumb
 187              		.thumb_func
 189              	pwm_max:
 190              	.LFB132:
 119:Src/freertos.c **** }
 120:Src/freertos.c **** 
 121:Src/freertos.c **** void pwm_max() {
 191              		.loc 1 121 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 122:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 196              		.loc 1 122 0
 197 0000 034B     		ldr	r3, .L18
 198 0002 1B68     		ldr	r3, [r3]
 199 0004 4FF4A072 		mov	r2, #320
 200 0008 5A63     		str	r2, [r3, #52]
 123:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 201              		.loc 1 123 0
 202 000a 1A64     		str	r2, [r3, #64]
 203 000c 7047     		bx	lr
 204              	.L19:
 205 000e 00BF     		.align	2
 206              	.L18:
 207 0010 00000000 		.word	htim3
 208              		.cfi_endproc
 209              	.LFE132:
 211              		.section	.text.accelerer,"ax",%progbits
 212              		.align	2
 213              		.global	accelerer
 214              		.thumb
 215              		.thumb_func
 217              	accelerer:
 218              	.LFB133:
 124:Src/freertos.c **** }
 125:Src/freertos.c **** 
 126:Src/freertos.c **** void accelerer() {
 219              		.loc 1 126 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
ARM GAS  /tmp/cckw9KWo.s 			page 7


 228              	.LVL14:
 127:Src/freertos.c ****     int pwm = 0;
 229              		.loc 1 127 0
 230 0002 0024     		movs	r4, #0
 128:Src/freertos.c ****     while (pwm != PWM_MAX) {
 231              		.loc 1 128 0
 232 0004 07E0     		b	.L21
 233              	.LVL15:
 234              	.L22:
 129:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 235              		.loc 1 129 0
 236 0006 064B     		ldr	r3, .L24
 237 0008 1B68     		ldr	r3, [r3]
 238 000a 5C63     		str	r4, [r3, #52]
 130:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 239              		.loc 1 130 0
 240 000c 1C64     		str	r4, [r3, #64]
 131:Src/freertos.c ****         pwm += 20;
 241              		.loc 1 131 0
 242 000e 1434     		adds	r4, r4, #20
 243              	.LVL16:
 132:Src/freertos.c ****         osDelay(50);
 244              		.loc 1 132 0
 245 0010 3220     		movs	r0, #50
 246 0012 FFF7FEFF 		bl	osDelay
 247              	.LVL17:
 248              	.L21:
 128:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 249              		.loc 1 128 0
 250 0016 B4F5A07F 		cmp	r4, #320
 251 001a F4D1     		bne	.L22
 133:Src/freertos.c ****     }
 134:Src/freertos.c **** }
 252              		.loc 1 134 0
 253 001c 10BD     		pop	{r4, pc}
 254              	.LVL18:
 255              	.L25:
 256 001e 00BF     		.align	2
 257              	.L24:
 258 0020 00000000 		.word	htim3
 259              		.cfi_endproc
 260              	.LFE133:
 262              		.section	.text.deccelerer,"ax",%progbits
 263              		.align	2
 264              		.global	deccelerer
 265              		.thumb
 266              		.thumb_func
 268              	deccelerer:
 269              	.LFB134:
 135:Src/freertos.c **** 
 136:Src/freertos.c **** void deccelerer() {
 270              		.loc 1 136 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI5:
ARM GAS  /tmp/cckw9KWo.s 			page 8


 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279              	.LVL19:
 137:Src/freertos.c ****     int pwm = PWM_MAX;
 280              		.loc 1 137 0
 281 0002 4FF4A074 		mov	r4, #320
 138:Src/freertos.c ****     while (pwm != 0) {
 282              		.loc 1 138 0
 283 0006 07E0     		b	.L27
 284              	.LVL20:
 285              	.L28:
 139:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 286              		.loc 1 139 0
 287 0008 054B     		ldr	r3, .L30
 288 000a 1B68     		ldr	r3, [r3]
 289 000c 5C63     		str	r4, [r3, #52]
 140:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 290              		.loc 1 140 0
 291 000e 1C64     		str	r4, [r3, #64]
 141:Src/freertos.c ****         pwm -= 20;
 292              		.loc 1 141 0
 293 0010 143C     		subs	r4, r4, #20
 294              	.LVL21:
 142:Src/freertos.c ****         osDelay(50);
 295              		.loc 1 142 0
 296 0012 3220     		movs	r0, #50
 297 0014 FFF7FEFF 		bl	osDelay
 298              	.LVL22:
 299              	.L27:
 138:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 300              		.loc 1 138 0
 301 0018 002C     		cmp	r4, #0
 302 001a F5D1     		bne	.L28
 143:Src/freertos.c ****     }
 144:Src/freertos.c **** }
 303              		.loc 1 144 0
 304 001c 10BD     		pop	{r4, pc}
 305              	.LVL23:
 306              	.L31:
 307 001e 00BF     		.align	2
 308              	.L30:
 309 0020 00000000 		.word	htim3
 310              		.cfi_endproc
 311              	.LFE134:
 313              		.section	.text.avancer_robot,"ax",%progbits
 314              		.align	2
 315              		.global	avancer_robot
 316              		.thumb
 317              		.thumb_func
 319              	avancer_robot:
 320              	.LFB135:
 145:Src/freertos.c **** 
 146:Src/freertos.c **** void avancer_robot() {
 321              		.loc 1 146 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cckw9KWo.s 			page 9


 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI6:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 147:Src/freertos.c ****     alumer_droite(0);
 330              		.loc 1 147 0
 331 0002 0020     		movs	r0, #0
 332 0004 FFF7FEFF 		bl	alumer_droite
 333              	.LVL24:
 148:Src/freertos.c ****     alumer_gauche(0);
 334              		.loc 1 148 0
 335 0008 0020     		movs	r0, #0
 336 000a FFF7FEFF 		bl	alumer_gauche
 337              	.LVL25:
 149:Src/freertos.c ****     accelerer();
 338              		.loc 1 149 0
 339 000e FFF7FEFF 		bl	accelerer
 340              	.LVL26:
 150:Src/freertos.c ****     osDelay(850);//robot2 : 470 robot1 : 850
 341              		.loc 1 150 0
 342 0012 40F25230 		movw	r0, #850
 343 0016 FFF7FEFF 		bl	osDelay
 344              	.LVL27:
 151:Src/freertos.c ****     deccelerer();
 345              		.loc 1 151 0
 346 001a FFF7FEFF 		bl	deccelerer
 347              	.LVL28:
 152:Src/freertos.c ****     eteindre_droite();
 348              		.loc 1 152 0
 349 001e FFF7FEFF 		bl	eteindre_droite
 350              	.LVL29:
 153:Src/freertos.c ****     eteindre_gauche();
 351              		.loc 1 153 0
 352 0022 FFF7FEFF 		bl	eteindre_gauche
 353              	.LVL30:
 154:Src/freertos.c ****     deplacement_fini = 1;
 354              		.loc 1 154 0
 355 0026 0122     		movs	r2, #1
 356 0028 034B     		ldr	r3, .L34
 357 002a 1A60     		str	r2, [r3]
 155:Src/freertos.c ****     flag_distance -= 2;
 358              		.loc 1 155 0
 359 002c 034A     		ldr	r2, .L34+4
 360 002e 1368     		ldr	r3, [r2]
 361 0030 023B     		subs	r3, r3, #2
 362 0032 1360     		str	r3, [r2]
 363 0034 08BD     		pop	{r3, pc}
 364              	.L35:
 365 0036 00BF     		.align	2
 366              	.L34:
 367 0038 00000000 		.word	.LANCHOR0
 368 003c 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE135:
 372              		.section	.text.reculer_robot,"ax",%progbits
ARM GAS  /tmp/cckw9KWo.s 			page 10


 373              		.align	2
 374              		.global	reculer_robot
 375              		.thumb
 376              		.thumb_func
 378              	reculer_robot:
 379              	.LFB136:
 156:Src/freertos.c **** }
 157:Src/freertos.c **** 
 158:Src/freertos.c **** void reculer_robot() {
 380              		.loc 1 158 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI7:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 159:Src/freertos.c ****     alumer_droite(1);
 389              		.loc 1 159 0
 390 0002 0120     		movs	r0, #1
 391 0004 FFF7FEFF 		bl	alumer_droite
 392              	.LVL31:
 160:Src/freertos.c ****     alumer_gauche(1);
 393              		.loc 1 160 0
 394 0008 0120     		movs	r0, #1
 395 000a FFF7FEFF 		bl	alumer_gauche
 396              	.LVL32:
 161:Src/freertos.c ****     accelerer();
 397              		.loc 1 161 0
 398 000e FFF7FEFF 		bl	accelerer
 399              	.LVL33:
 162:Src/freertos.c ****     osDelay(850);
 400              		.loc 1 162 0
 401 0012 40F25230 		movw	r0, #850
 402 0016 FFF7FEFF 		bl	osDelay
 403              	.LVL34:
 163:Src/freertos.c ****     deccelerer();
 404              		.loc 1 163 0
 405 001a FFF7FEFF 		bl	deccelerer
 406              	.LVL35:
 164:Src/freertos.c ****     eteindre_droite();
 407              		.loc 1 164 0
 408 001e FFF7FEFF 		bl	eteindre_droite
 409              	.LVL36:
 165:Src/freertos.c ****     eteindre_gauche();
 410              		.loc 1 165 0
 411 0022 FFF7FEFF 		bl	eteindre_gauche
 412              	.LVL37:
 166:Src/freertos.c ****     flag_distance += 1;
 413              		.loc 1 166 0
 414 0026 024A     		ldr	r2, .L38
 415 0028 1368     		ldr	r3, [r2]
 416 002a 0133     		adds	r3, r3, #1
 417 002c 1360     		str	r3, [r2]
 418 002e 08BD     		pop	{r3, pc}
 419              	.L39:
ARM GAS  /tmp/cckw9KWo.s 			page 11


 420              		.align	2
 421              	.L38:
 422 0030 00000000 		.word	.LANCHOR1
 423              		.cfi_endproc
 424              	.LFE136:
 426              		.section	.text.pivoter_gauche,"ax",%progbits
 427              		.align	2
 428              		.global	pivoter_gauche
 429              		.thumb
 430              		.thumb_func
 432              	pivoter_gauche:
 433              	.LFB137:
 167:Src/freertos.c **** }
 168:Src/freertos.c **** 
 169:Src/freertos.c **** 
 170:Src/freertos.c **** void pivoter_gauche() {
 434              		.loc 1 170 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438 0000 08B5     		push	{r3, lr}
 439              	.LCFI8:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 3, -8
 442              		.cfi_offset 14, -4
 171:Src/freertos.c ****     pwm_max();
 443              		.loc 1 171 0
 444 0002 FFF7FEFF 		bl	pwm_max
 445              	.LVL38:
 172:Src/freertos.c ****     alumer_gauche(1);
 446              		.loc 1 172 0
 447 0006 0120     		movs	r0, #1
 448 0008 FFF7FEFF 		bl	alumer_gauche
 449              	.LVL39:
 173:Src/freertos.c ****     alumer_droite(0);
 450              		.loc 1 173 0
 451 000c 0020     		movs	r0, #0
 452 000e FFF7FEFF 		bl	alumer_droite
 453              	.LVL40:
 174:Src/freertos.c ****     osDelay(115);//robot 2 : 40 robot1 : 115
 454              		.loc 1 174 0
 455 0012 7320     		movs	r0, #115
 456 0014 FFF7FEFF 		bl	osDelay
 457              	.LVL41:
 175:Src/freertos.c ****     deccelerer();
 458              		.loc 1 175 0
 459 0018 FFF7FEFF 		bl	deccelerer
 460              	.LVL42:
 176:Src/freertos.c ****     eteindre_droite();
 461              		.loc 1 176 0
 462 001c FFF7FEFF 		bl	eteindre_droite
 463              	.LVL43:
 177:Src/freertos.c ****     eteindre_gauche();
 464              		.loc 1 177 0
 465 0020 FFF7FEFF 		bl	eteindre_gauche
 466              	.LVL44:
 178:Src/freertos.c ****     deplacement_fini = 1;
ARM GAS  /tmp/cckw9KWo.s 			page 12


 467              		.loc 1 178 0
 468 0024 0122     		movs	r2, #1
 469 0026 014B     		ldr	r3, .L42
 470 0028 1A60     		str	r2, [r3]
 471 002a 08BD     		pop	{r3, pc}
 472              	.L43:
 473              		.align	2
 474              	.L42:
 475 002c 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE137:
 479              		.section	.text.pivoter_droite,"ax",%progbits
 480              		.align	2
 481              		.global	pivoter_droite
 482              		.thumb
 483              		.thumb_func
 485              	pivoter_droite:
 486              	.LFB138:
 179:Src/freertos.c **** }
 180:Src/freertos.c **** 
 181:Src/freertos.c **** void pivoter_droite() {
 487              		.loc 1 181 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 08B5     		push	{r3, lr}
 492              	.LCFI9:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 3, -8
 495              		.cfi_offset 14, -4
 182:Src/freertos.c ****     pwm_max();
 496              		.loc 1 182 0
 497 0002 FFF7FEFF 		bl	pwm_max
 498              	.LVL45:
 183:Src/freertos.c ****     alumer_droite(1);
 499              		.loc 1 183 0
 500 0006 0120     		movs	r0, #1
 501 0008 FFF7FEFF 		bl	alumer_droite
 502              	.LVL46:
 184:Src/freertos.c ****     alumer_gauche(0);
 503              		.loc 1 184 0
 504 000c 0020     		movs	r0, #0
 505 000e FFF7FEFF 		bl	alumer_gauche
 506              	.LVL47:
 185:Src/freertos.c ****     osDelay(115);
 507              		.loc 1 185 0
 508 0012 7320     		movs	r0, #115
 509 0014 FFF7FEFF 		bl	osDelay
 510              	.LVL48:
 186:Src/freertos.c ****     deccelerer();
 511              		.loc 1 186 0
 512 0018 FFF7FEFF 		bl	deccelerer
 513              	.LVL49:
 187:Src/freertos.c ****     eteindre_droite();
 514              		.loc 1 187 0
 515 001c FFF7FEFF 		bl	eteindre_droite
 516              	.LVL50:
ARM GAS  /tmp/cckw9KWo.s 			page 13


 188:Src/freertos.c ****     eteindre_gauche();
 517              		.loc 1 188 0
 518 0020 FFF7FEFF 		bl	eteindre_gauche
 519              	.LVL51:
 189:Src/freertos.c ****     deplacement_fini = 1;
 520              		.loc 1 189 0
 521 0024 0122     		movs	r2, #1
 522 0026 014B     		ldr	r3, .L46
 523 0028 1A60     		str	r2, [r3]
 524 002a 08BD     		pop	{r3, pc}
 525              	.L47:
 526              		.align	2
 527              	.L46:
 528 002c 00000000 		.word	.LANCHOR0
 529              		.cfi_endproc
 530              	.LFE138:
 532              		.section	.text.gestion_moteurs,"ax",%progbits
 533              		.align	2
 534              		.global	gestion_moteurs
 535              		.thumb
 536              		.thumb_func
 538              	gestion_moteurs:
 539              	.LFB139:
=======
  85:Src/freertos.c **** int flag_present = 0;
  86:Src/freertos.c **** 
ARM GAS  /tmp/ccXGsRah.s 			page 3


  87:Src/freertos.c **** struct Robot {
  88:Src/freertos.c ****     int posx;
  89:Src/freertos.c ****     int posy;
  90:Src/freertos.c ****     int orientation;
  91:Src/freertos.c **** };
  92:Src/freertos.c **** 
  93:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  94:Src/freertos.c **** 
  95:Src/freertos.c **** /* USER CODE END Variables */
  96:Src/freertos.c **** 
  97:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  98:Src/freertos.c **** 
  99:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 100:Src/freertos.c **** 
 101:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
 102:Src/freertos.c **** void alumer_gauche(int sens) {
  30              		.loc 1 102 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 103:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  42              		.loc 1 103 0
  43 0002 0546     		mov	r5, r0
  44 0004 064C     		ldr	r4, .L3
  45 0006 B0FA80F2 		clz	r2, r0
  46 000a 5209     		lsrs	r2, r2, #5
  47 000c 0221     		movs	r1, #2
  48 000e 2046     		mov	r0, r4
  49              	.LVL1:
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  51              	.LVL2:
 104:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  52              		.loc 1 104 0
  53 0014 EAB2     		uxtb	r2, r5
  54 0016 0121     		movs	r1, #1
  55 0018 2046     		mov	r0, r4
  56 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58 001e 38BD     		pop	{r3, r4, r5, pc}
  59              	.LVL4:
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00140048 		.word	1207964672
  64              		.cfi_endproc
  65              	.LFE129:
  67              		.section	.text.alumer_droite,"ax",%progbits
  68              		.align	2
  69              		.global	alumer_droite
ARM GAS  /tmp/ccXGsRah.s 			page 4


  70              		.thumb
  71              		.thumb_func
  73              	alumer_droite:
  74              	.LFB130:
 105:Src/freertos.c **** }
 106:Src/freertos.c **** 
 107:Src/freertos.c **** void alumer_droite(int sens) {
  75              		.loc 1 107 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL5:
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
 108:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  85              		.loc 1 108 0
  86 0002 0446     		mov	r4, r0
  87 0004 B0FA80F2 		clz	r2, r0
  88 0008 5209     		lsrs	r2, r2, #5
  89 000a 4FF40061 		mov	r1, #2048
  90 000e 4FF09040 		mov	r0, #1207959552
  91              	.LVL6:
  92 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL7:
 109:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  94              		.loc 1 109 0
  95 0016 E2B2     		uxtb	r2, r4
  96 0018 2021     		movs	r1, #32
  97 001a 0248     		ldr	r0, .L7
  98 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 100 0020 10BD     		pop	{r4, pc}
 101              	.LVL9:
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 00040048 		.word	1207960576
 106              		.cfi_endproc
 107              	.LFE130:
 109              		.section	.text.eteindre_gauche,"ax",%progbits
 110              		.align	2
 111              		.global	eteindre_gauche
 112              		.thumb
 113              		.thumb_func
 115              	eteindre_gauche:
 116              	.LFB131:
 110:Src/freertos.c **** }
 111:Src/freertos.c **** 
 112:Src/freertos.c **** void eteindre_gauche() {
 117              		.loc 1 112 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccXGsRah.s 			page 5


 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 113:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 126              		.loc 1 113 0
 127 0002 064C     		ldr	r4, .L11
 128 0004 0022     		movs	r2, #0
 129 0006 0221     		movs	r1, #2
 130 0008 2046     		mov	r0, r4
 131 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
 114:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 133              		.loc 1 114 0
 134 000e 0022     		movs	r2, #0
 135 0010 0121     		movs	r1, #1
 136 0012 2046     		mov	r0, r4
 137 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL11:
 139 0018 10BD     		pop	{r4, pc}
 140              	.L12:
 141 001a 00BF     		.align	2
 142              	.L11:
 143 001c 00140048 		.word	1207964672
 144              		.cfi_endproc
 145              	.LFE131:
 147              		.section	.text.eteindre_droite,"ax",%progbits
 148              		.align	2
 149              		.global	eteindre_droite
 150              		.thumb
 151              		.thumb_func
 153              	eteindre_droite:
 154              	.LFB132:
 115:Src/freertos.c **** }
 116:Src/freertos.c **** 
 117:Src/freertos.c **** void eteindre_droite() {
 155              		.loc 1 117 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
 118:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 164              		.loc 1 118 0
 165 0002 0022     		movs	r2, #0
 166 0004 4FF40061 		mov	r1, #2048
 167 0008 4FF09040 		mov	r0, #1207959552
 168 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL12:
 119:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 170              		.loc 1 119 0
 171 0010 0022     		movs	r2, #0
 172 0012 2021     		movs	r1, #32
 173 0014 0148     		ldr	r0, .L15
ARM GAS  /tmp/ccXGsRah.s 			page 6


 174 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL13:
 176 001a 08BD     		pop	{r3, pc}
 177              	.L16:
 178              		.align	2
 179              	.L15:
 180 001c 00040048 		.word	1207960576
 181              		.cfi_endproc
 182              	.LFE132:
 184              		.section	.text.pwm_max,"ax",%progbits
 185              		.align	2
 186              		.global	pwm_max
 187              		.thumb
 188              		.thumb_func
 190              	pwm_max:
 191              	.LFB133:
 120:Src/freertos.c **** }
 121:Src/freertos.c **** 
 122:Src/freertos.c **** void pwm_max() {
 192              		.loc 1 122 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 123:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 197              		.loc 1 123 0
 198 0000 034B     		ldr	r3, .L18
 199 0002 1B68     		ldr	r3, [r3]
 200 0004 4FF4A072 		mov	r2, #320
 201 0008 5A63     		str	r2, [r3, #52]
 124:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 202              		.loc 1 124 0
 203 000a 1A64     		str	r2, [r3, #64]
 204 000c 7047     		bx	lr
 205              	.L19:
 206 000e 00BF     		.align	2
 207              	.L18:
 208 0010 00000000 		.word	htim3
 209              		.cfi_endproc
 210              	.LFE133:
 212              		.section	.text.accelerer,"ax",%progbits
 213              		.align	2
 214              		.global	accelerer
 215              		.thumb
 216              		.thumb_func
 218              	accelerer:
 219              	.LFB134:
 125:Src/freertos.c **** }
 126:Src/freertos.c **** 
 127:Src/freertos.c **** void accelerer() {
 220              		.loc 1 127 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXGsRah.s 			page 7


 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229              	.LVL14:
 128:Src/freertos.c ****     int pwm = 0;
 230              		.loc 1 128 0
 231 0002 0024     		movs	r4, #0
 129:Src/freertos.c ****     while (pwm != PWM_MAX) {
 232              		.loc 1 129 0
 233 0004 07E0     		b	.L21
 234              	.LVL15:
 235              	.L22:
 130:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 236              		.loc 1 130 0
 237 0006 064B     		ldr	r3, .L24
 238 0008 1B68     		ldr	r3, [r3]
 239 000a 5C63     		str	r4, [r3, #52]
 131:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 240              		.loc 1 131 0
 241 000c 1C64     		str	r4, [r3, #64]
 132:Src/freertos.c ****         pwm += 20;
 242              		.loc 1 132 0
 243 000e 1434     		adds	r4, r4, #20
 244              	.LVL16:
 133:Src/freertos.c ****         osDelay(50);
 245              		.loc 1 133 0
 246 0010 3220     		movs	r0, #50
 247 0012 FFF7FEFF 		bl	osDelay
 248              	.LVL17:
 249              	.L21:
 129:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 250              		.loc 1 129 0
 251 0016 B4F5A07F 		cmp	r4, #320
 252 001a F4D1     		bne	.L22
 134:Src/freertos.c ****     }
 135:Src/freertos.c **** }
 253              		.loc 1 135 0
 254 001c 10BD     		pop	{r4, pc}
 255              	.LVL18:
 256              	.L25:
 257 001e 00BF     		.align	2
 258              	.L24:
 259 0020 00000000 		.word	htim3
 260              		.cfi_endproc
 261              	.LFE134:
 263              		.section	.text.deccelerer,"ax",%progbits
 264              		.align	2
 265              		.global	deccelerer
 266              		.thumb
 267              		.thumb_func
 269              	deccelerer:
 270              	.LFB135:
 136:Src/freertos.c **** 
 137:Src/freertos.c **** void deccelerer() {
 271              		.loc 1 137 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXGsRah.s 			page 8


 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280              	.LVL19:
 138:Src/freertos.c ****     int pwm = PWM_MAX;
 281              		.loc 1 138 0
 282 0002 4FF4A074 		mov	r4, #320
 139:Src/freertos.c ****     while (pwm != 0) {
 283              		.loc 1 139 0
 284 0006 07E0     		b	.L27
 285              	.LVL20:
 286              	.L28:
 140:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 287              		.loc 1 140 0
 288 0008 054B     		ldr	r3, .L30
 289 000a 1B68     		ldr	r3, [r3]
 290 000c 5C63     		str	r4, [r3, #52]
 141:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 291              		.loc 1 141 0
 292 000e 1C64     		str	r4, [r3, #64]
 142:Src/freertos.c ****         pwm -= 20;
 293              		.loc 1 142 0
 294 0010 143C     		subs	r4, r4, #20
 295              	.LVL21:
 143:Src/freertos.c ****         osDelay(50);
 296              		.loc 1 143 0
 297 0012 3220     		movs	r0, #50
 298 0014 FFF7FEFF 		bl	osDelay
 299              	.LVL22:
 300              	.L27:
 139:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 301              		.loc 1 139 0
 302 0018 002C     		cmp	r4, #0
 303 001a F5D1     		bne	.L28
 144:Src/freertos.c ****     }
 145:Src/freertos.c **** }
 304              		.loc 1 145 0
 305 001c 10BD     		pop	{r4, pc}
 306              	.LVL23:
 307              	.L31:
 308 001e 00BF     		.align	2
 309              	.L30:
 310 0020 00000000 		.word	htim3
 311              		.cfi_endproc
 312              	.LFE135:
 314              		.section	.text.reculer_robot,"ax",%progbits
 315              		.align	2
 316              		.global	reculer_robot
 317              		.thumb
 318              		.thumb_func
 320              	reculer_robot:
 321              	.LFB136:
 146:Src/freertos.c **** 
 147:Src/freertos.c **** void reculer_robot() {
 322              		.loc 1 147 0
ARM GAS  /tmp/ccXGsRah.s 			page 9


 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 148:Src/freertos.c ****     alumer_droite(1);
 331              		.loc 1 148 0
 332 0002 0120     		movs	r0, #1
 333 0004 FFF7FEFF 		bl	alumer_droite
 334              	.LVL24:
 149:Src/freertos.c ****     alumer_gauche(1);
 335              		.loc 1 149 0
 336 0008 0120     		movs	r0, #1
 337 000a FFF7FEFF 		bl	alumer_gauche
 338              	.LVL25:
 150:Src/freertos.c ****     accelerer();
 339              		.loc 1 150 0
 340 000e FFF7FEFF 		bl	accelerer
 341              	.LVL26:
 151:Src/freertos.c ****     osDelay(850);
 342              		.loc 1 151 0
 343 0012 40F25230 		movw	r0, #850
 344 0016 FFF7FEFF 		bl	osDelay
 345              	.LVL27:
 152:Src/freertos.c ****     deccelerer();
 346              		.loc 1 152 0
 347 001a FFF7FEFF 		bl	deccelerer
 348              	.LVL28:
 153:Src/freertos.c ****     eteindre_droite();
 349              		.loc 1 153 0
 350 001e FFF7FEFF 		bl	eteindre_droite
 351              	.LVL29:
 154:Src/freertos.c ****     eteindre_gauche();
 352              		.loc 1 154 0
 353 0022 FFF7FEFF 		bl	eteindre_gauche
 354              	.LVL30:
 155:Src/freertos.c ****     deplacement_fini = 1;
 355              		.loc 1 155 0
 356 0026 0122     		movs	r2, #1
 357 0028 014B     		ldr	r3, .L34
 358 002a 1A60     		str	r2, [r3]
 359 002c 08BD     		pop	{r3, pc}
 360              	.L35:
 361 002e 00BF     		.align	2
 362              	.L34:
 363 0030 00000000 		.word	.LANCHOR0
 364              		.cfi_endproc
 365              	.LFE136:
 367              		.section	.text.avancer_robot,"ax",%progbits
 368              		.align	2
 369              		.global	avancer_robot
 370              		.thumb
 371              		.thumb_func
 373              	avancer_robot:
ARM GAS  /tmp/ccXGsRah.s 			page 10


 374              	.LFB137:
 156:Src/freertos.c **** }
 157:Src/freertos.c **** 
 158:Src/freertos.c **** void avancer_robot() {
 375              		.loc 1 158 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI7:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 159:Src/freertos.c ****     alumer_droite(0);
 384              		.loc 1 159 0
 385 0002 0020     		movs	r0, #0
 386 0004 FFF7FEFF 		bl	alumer_droite
 387              	.LVL31:
 160:Src/freertos.c ****     alumer_gauche(0);
 388              		.loc 1 160 0
 389 0008 0020     		movs	r0, #0
 390 000a FFF7FEFF 		bl	alumer_gauche
 391              	.LVL32:
 161:Src/freertos.c ****     accelerer();
 392              		.loc 1 161 0
 393 000e FFF7FEFF 		bl	accelerer
 394              	.LVL33:
 162:Src/freertos.c ****     osDelay(850);//robot2 : 470 robot1 : 850
 395              		.loc 1 162 0
 396 0012 40F25230 		movw	r0, #850
 397 0016 FFF7FEFF 		bl	osDelay
 398              	.LVL34:
 163:Src/freertos.c ****     deccelerer();
 399              		.loc 1 163 0
 400 001a FFF7FEFF 		bl	deccelerer
 401              	.LVL35:
 164:Src/freertos.c ****     eteindre_droite();
 402              		.loc 1 164 0
 403 001e FFF7FEFF 		bl	eteindre_droite
 404              	.LVL36:
 165:Src/freertos.c ****     eteindre_gauche();
 405              		.loc 1 165 0
 406 0022 FFF7FEFF 		bl	eteindre_gauche
 407              	.LVL37:
 166:Src/freertos.c ****     deplacement_fini = 1;
 408              		.loc 1 166 0
 409 0026 0122     		movs	r2, #1
 410 0028 014B     		ldr	r3, .L38
 411 002a 1A60     		str	r2, [r3]
 412 002c 08BD     		pop	{r3, pc}
 413              	.L39:
 414 002e 00BF     		.align	2
 415              	.L38:
 416 0030 00000000 		.word	.LANCHOR0
 417              		.cfi_endproc
 418              	.LFE137:
 420              		.section	.text.pivoter_gauche,"ax",%progbits
ARM GAS  /tmp/ccXGsRah.s 			page 11


 421              		.align	2
 422              		.global	pivoter_gauche
 423              		.thumb
 424              		.thumb_func
 426              	pivoter_gauche:
 427              	.LFB138:
 167:Src/freertos.c **** 
 168:Src/freertos.c **** }
 169:Src/freertos.c **** 
 170:Src/freertos.c **** void pivoter_gauche() {
 428              		.loc 1 170 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 08B5     		push	{r3, lr}
 433              	.LCFI8:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 171:Src/freertos.c ****     pwm_max();
 437              		.loc 1 171 0
 438 0002 FFF7FEFF 		bl	pwm_max
 439              	.LVL38:
 172:Src/freertos.c ****     alumer_gauche(1);
 440              		.loc 1 172 0
 441 0006 0120     		movs	r0, #1
 442 0008 FFF7FEFF 		bl	alumer_gauche
 443              	.LVL39:
 173:Src/freertos.c ****     alumer_droite(0);
 444              		.loc 1 173 0
 445 000c 0020     		movs	r0, #0
 446 000e FFF7FEFF 		bl	alumer_droite
 447              	.LVL40:
 174:Src/freertos.c ****     osDelay(115);//robot 2 : 40 robot1 : 115
 448              		.loc 1 174 0
 449 0012 7320     		movs	r0, #115
 450 0014 FFF7FEFF 		bl	osDelay
 451              	.LVL41:
 175:Src/freertos.c ****     deccelerer();
 452              		.loc 1 175 0
 453 0018 FFF7FEFF 		bl	deccelerer
 454              	.LVL42:
 176:Src/freertos.c ****     eteindre_droite();
 455              		.loc 1 176 0
 456 001c FFF7FEFF 		bl	eteindre_droite
 457              	.LVL43:
 177:Src/freertos.c ****     eteindre_gauche();
 458              		.loc 1 177 0
 459 0020 FFF7FEFF 		bl	eteindre_gauche
 460              	.LVL44:
 178:Src/freertos.c ****     deplacement_fini = 1;
 461              		.loc 1 178 0
 462 0024 0122     		movs	r2, #1
 463 0026 014B     		ldr	r3, .L42
 464 0028 1A60     		str	r2, [r3]
 465 002a 08BD     		pop	{r3, pc}
 466              	.L43:
ARM GAS  /tmp/ccXGsRah.s 			page 12


 467              		.align	2
 468              	.L42:
 469 002c 00000000 		.word	.LANCHOR0
 470              		.cfi_endproc
 471              	.LFE138:
 473              		.section	.text.pivoter_droite,"ax",%progbits
 474              		.align	2
 475              		.global	pivoter_droite
 476              		.thumb
 477              		.thumb_func
 479              	pivoter_droite:
 480              	.LFB139:
 179:Src/freertos.c **** }
 180:Src/freertos.c **** 
 181:Src/freertos.c **** void pivoter_droite() {
 481              		.loc 1 181 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 182:Src/freertos.c ****     pwm_max();
 490              		.loc 1 182 0
 491 0002 FFF7FEFF 		bl	pwm_max
 492              	.LVL45:
 183:Src/freertos.c ****     alumer_droite(1);
 493              		.loc 1 183 0
 494 0006 0120     		movs	r0, #1
 495 0008 FFF7FEFF 		bl	alumer_droite
 496              	.LVL46:
 184:Src/freertos.c ****     alumer_gauche(0);
 497              		.loc 1 184 0
 498 000c 0020     		movs	r0, #0
 499 000e FFF7FEFF 		bl	alumer_gauche
 500              	.LVL47:
 185:Src/freertos.c ****     osDelay(115);
 501              		.loc 1 185 0
 502 0012 7320     		movs	r0, #115
 503 0014 FFF7FEFF 		bl	osDelay
 504              	.LVL48:
 186:Src/freertos.c ****     deccelerer();
 505              		.loc 1 186 0
 506 0018 FFF7FEFF 		bl	deccelerer
 507              	.LVL49:
 187:Src/freertos.c ****     eteindre_droite();
 508              		.loc 1 187 0
 509 001c FFF7FEFF 		bl	eteindre_droite
 510              	.LVL50:
 188:Src/freertos.c ****     eteindre_gauche();
 511              		.loc 1 188 0
 512 0020 FFF7FEFF 		bl	eteindre_gauche
 513              	.LVL51:
 189:Src/freertos.c ****     deplacement_fini = 1;
 514              		.loc 1 189 0
ARM GAS  /tmp/ccXGsRah.s 			page 13


 515 0024 0122     		movs	r2, #1
 516 0026 014B     		ldr	r3, .L46
 517 0028 1A60     		str	r2, [r3]
 518 002a 08BD     		pop	{r3, pc}
 519              	.L47:
 520              		.align	2
 521              	.L46:
 522 002c 00000000 		.word	.LANCHOR0
 523              		.cfi_endproc
 524              	.LFE139:
 526              		.section	.text.gestion_moteurs,"ax",%progbits
 527              		.align	2
 528              		.global	gestion_moteurs
 529              		.thumb
 530              		.thumb_func
 532              	gestion_moteurs:
 533              	.LFB140:
>>>>>>> refs/remotes/origin/master
 190:Src/freertos.c **** }
 191:Src/freertos.c **** 
 192:Src/freertos.c **** void gestion_moteurs()
 193:Src/freertos.c **** {
<<<<<<< HEAD
 540              		.loc 1 193 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 08B5     		push	{r3, lr}
 545              	.LCFI10:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 3, -8
 548              		.cfi_offset 14, -4
 194:Src/freertos.c ****     if (flag_distance > 0) {
 549              		.loc 1 194 0
 550 0002 064B     		ldr	r3, .L52
 551 0004 1B68     		ldr	r3, [r3]
 552 0006 002B     		cmp	r3, #0
 553 0008 01DD     		ble	.L49
 195:Src/freertos.c ****       avancer_robot();
 554              		.loc 1 195 0
 555 000a FFF7FEFF 		bl	avancer_robot
 556              	.LVL52:
 557              	.L49:
 196:Src/freertos.c ****     }
 197:Src/freertos.c **** 
 198:Src/freertos.c ****     if (flag_distance < 0) {
 558              		.loc 1 198 0
 559 000e 034B     		ldr	r3, .L52
 560 0010 1B68     		ldr	r3, [r3]
 561 0012 002B     		cmp	r3, #0
 562 0014 01DA     		bge	.L48
 199:Src/freertos.c ****       reculer_robot();
 563              		.loc 1 199 0
ARM GAS  /tmp/cckw9KWo.s 			page 14


 564 0016 FFF7FEFF 		bl	reculer_robot
 565              	.LVL53:
 566              	.L48:
 567 001a 08BD     		pop	{r3, pc}
 568              	.L53:
 569              		.align	2
 570              	.L52:
 571 001c 00000000 		.word	.LANCHOR1
 572              		.cfi_endproc
 573              	.LFE139:
 575              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 576              		.align	2
 577              		.global	HAL_ADC_ConvCpltCallback
 578              		.thumb
 579              		.thumb_func
 581              	HAL_ADC_ConvCpltCallback:
 582              	.LFB140:
 200:Src/freertos.c ****     }
 201:Src/freertos.c **** 
 202:Src/freertos.c ****     /*
 203:Src/freertos.c ****     if (flag_cap < 0) {
 204:Src/freertos.c ****       pivoter_gauche();
 205:Src/freertos.c ****       flag_cap ++;
 206:Src/freertos.c ****       while(!deplacement_fini);
 207:Src/freertos.c ****       deplacement_fini = 0;
 208:Src/freertos.c ****     }
 209:Src/freertos.c **** 
 210:Src/freertos.c ****     if (flag_cap > 0) {
 211:Src/freertos.c ****       flag_cap --;
 212:Src/freertos.c ****       while(!deplacement_fini);
 213:Src/freertos.c ****       deplacement_fini = 0;
 214:Src/freertos.c ****     }
 215:Src/freertos.c ****     */
 216:Src/freertos.c **** }
 217:Src/freertos.c **** 
 218:Src/freertos.c **** /* END Fonctions pour les moteurs */
 219:Src/freertos.c **** 
 220:Src/freertos.c **** /* BEGIN Fonctions ADC */
 221:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 583              		.loc 1 221 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL54:
 588 0000 08B5     		push	{r3, lr}
 589              	.LCFI11:
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 222:Src/freertos.c ****     UNUSED(hadc);
 223:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 593              		.loc 1 223 0
 594 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 595              	.LVL55:
 596 0006 034B     		ldr	r3, .L56
 597 0008 1860     		str	r0, [r3]
 224:Src/freertos.c ****     flag_adc = 1;
ARM GAS  /tmp/cckw9KWo.s 			page 15


 598              		.loc 1 224 0
 599 000a 0122     		movs	r2, #1
 600 000c 024B     		ldr	r3, .L56+4
 601 000e 1A60     		str	r2, [r3]
 602 0010 08BD     		pop	{r3, pc}
 603              	.L57:
 604 0012 00BF     		.align	2
 605              	.L56:
 606 0014 00000000 		.word	.LANCHOR2
 607 0018 00000000 		.word	.LANCHOR3
 608              		.cfi_endproc
 609              	.LFE140:
 611              		.section	.text._write,"ax",%progbits
 612              		.align	2
 613              		.global	_write
 614              		.thumb
 615              		.thumb_func
 617              	_write:
 618              	.LFB141:
 225:Src/freertos.c **** }
 226:Src/freertos.c **** 
 227:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 619              		.loc 1 227 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              	.LVL56:
 624 0000 10B5     		push	{r4, lr}
 625              	.LCFI12:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 629 0002 1446     		mov	r4, r2
 228:Src/freertos.c ****     UNUSED(file);
 229:Src/freertos.c **** 
 230:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 630              		.loc 1 230 0
 631 0004 0348     		ldr	r0, .L60
 632              	.LVL57:
 633 0006 92B2     		uxth	r2, r2
 634              	.LVL58:
 635 0008 42F21073 		movw	r3, #10000
 636 000c FFF7FEFF 		bl	HAL_UART_Transmit
 637              	.LVL59:
 231:Src/freertos.c ****     return len;
 232:Src/freertos.c **** }
 638              		.loc 1 232 0
 639 0010 2046     		mov	r0, r4
 640 0012 10BD     		pop	{r4, pc}
 641              	.LVL60:
 642              	.L61:
 643              		.align	2
 644              	.L60:
 645 0014 00000000 		.word	huart2
 646              		.cfi_endproc
 647              	.LFE141:
 649              		.section	.text.EnvoiMessage,"ax",%progbits
ARM GAS  /tmp/cckw9KWo.s 			page 16


 650              		.align	2
 651              		.global	EnvoiMessage
 652              		.thumb
 653              		.thumb_func
 655              	EnvoiMessage:
 656              	.LFB142:
 233:Src/freertos.c **** /* END Fonctions ADC */
 234:Src/freertos.c **** 
 235:Src/freertos.c **** /* BEGIN Fonctions UART */
 236:Src/freertos.c ****     void EnvoiMessage(uint8_t data){
 657              		.loc 1 236 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL61:
 662 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 663              	.LCFI13:
 664              		.cfi_def_cfa_offset 32
 665              		.cfi_offset 4, -32
 666              		.cfi_offset 5, -28
 667              		.cfi_offset 6, -24
 668              		.cfi_offset 7, -20
 669              		.cfi_offset 8, -16
 670              		.cfi_offset 9, -12
 671              		.cfi_offset 10, -8
 672              		.cfi_offset 14, -4
 673 0004 82B0     		sub	sp, sp, #8
 674              	.LCFI14:
 675              		.cfi_def_cfa_offset 40
 237:Src/freertos.c ****         uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit,
 238:Src/freertos.c **** 
 239:Src/freertos.c ****         eun = (data & 0x01);
 676              		.loc 1 239 0
 677 0006 00F0010E 		and	lr, r0, #1
 678              	.LVL62:
 240:Src/freertos.c ****         edeux = (data & 0x02)/2;
 679              		.loc 1 240 0
 680 000a C0F34006 		ubfx	r6, r0, #1, #1
 681              	.LVL63:
 241:Src/freertos.c ****         equatre =(data & 0x04)/4;
 682              		.loc 1 241 0
 683 000e 00F00403 		and	r3, r0, #4
 684 0012 DBB2     		uxtb	r3, r3
 685 0014 9B10     		asrs	r3, r3, #2
 686 0016 DBB2     		uxtb	r3, r3
 687              	.LVL64:
 242:Src/freertos.c ****         ehuit = (data & 0x08)/8;
 688              		.loc 1 242 0
 689 0018 00F00801 		and	r1, r0, #8
 690 001c C9B2     		uxtb	r1, r1
 691 001e C910     		asrs	r1, r1, #3
 692 0020 CFB2     		uxtb	r7, r1
 693              	.LVL65:
 243:Src/freertos.c ****         eseize = (data & 0x10)/16;
 694              		.loc 1 243 0
 695 0022 00F01004 		and	r4, r0, #16
 696 0026 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/cckw9KWo.s 			page 17


 697 0028 2411     		asrs	r4, r4, #4
 698 002a 5FFA84FC 		uxtb	ip, r4
 699              	.LVL66:
 244:Src/freertos.c ****         etrentedeux = (data & 0x20)/32;
 700              		.loc 1 244 0
 701 002e 00F02002 		and	r2, r0, #32
 702 0032 D2B2     		uxtb	r2, r2
 703 0034 5211     		asrs	r2, r2, #5
 704 0036 D2B2     		uxtb	r2, r2
 705              	.LVL67:
 245:Src/freertos.c ****         esoixantequatre = (data & 0x40)/64;
 706              		.loc 1 245 0
 707 0038 00F04005 		and	r5, r0, #64
 708 003c EDB2     		uxtb	r5, r5
 709 003e AD11     		asrs	r5, r5, #6
 710 0040 5FFA85F8 		uxtb	r8, r5
 711              	.LVL68:
 246:Src/freertos.c ****         ecentvingthuit = (data & 0x80)/128;
 712              		.loc 1 246 0
 713 0044 00F08000 		and	r0, r0, #128
 714              	.LVL69:
 715 0048 C011     		asrs	r0, r0, #7
 716 004a C0B2     		uxtb	r0, r0
 717              	.LVL70:
 247:Src/freertos.c **** 
 248:Src/freertos.c ****         b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequat
 718              		.loc 1 248 0
 719 004c 80EA020A 		eor	r10, r0, r2
 720 0050 80EA0809 		eor	r9, r0, r8
 721 0054 09EB4A09 		add	r9, r9, r10, lsl #1
 722 0058 88EA0208 		eor	r8, r8, r2
 723              	.LVL71:
 724 005c 08EB4908 		add	r8, r8, r9, lsl #1
 725 0060 00EB4800 		add	r0, r0, r8, lsl #1
 726              	.LVL72:
 727 0064 05EB4000 		add	r0, r5, r0, lsl #1
 728 0068 02EB4002 		add	r2, r2, r0, lsl #1
 729              	.LVL73:
 730 006c 8DF80720 		strb	r2, [sp, #7]
 249:Src/freertos.c ****         k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + eq
 731              		.loc 1 249 0
 732 0070 8CEA0302 		eor	r2, ip, r3
 733 0074 8CEA070C 		eor	ip, ip, r7
 734              	.LVL74:
 735 0078 0CEB420C 		add	ip, ip, r2, lsl #1
 736 007c 5F40     		eors	r7, r7, r3
 737              	.LVL75:
 738 007e 07EB4C07 		add	r7, r7, ip, lsl #1
 739 0082 04EB4707 		add	r7, r4, r7, lsl #1
 740 0086 01EB4701 		add	r1, r1, r7, lsl #1
 741              	.LVL76:
 742 008a 03EB4103 		add	r3, r3, r1, lsl #1
 743              	.LVL77:
 744 008e 8DF80630 		strb	r3, [sp, #6]
 250:Src/freertos.c ****         z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 745              		.loc 1 250 0
 746 0092 F3B2     		uxtb	r3, r6
ARM GAS  /tmp/cckw9KWo.s 			page 18


 747 0094 03EB4E02 		add	r2, r3, lr, lsl #1
 748 0098 86EA0E06 		eor	r6, r6, lr
 749              	.LVL78:
 750 009c 06EB4206 		add	r6, r6, r2, lsl #1
 751 00a0 03EB8606 		add	r6, r3, r6, lsl #2
 752 00a4 0EEB460E 		add	lr, lr, r6, lsl #1
 753              	.LVL79:
 754 00a8 8DF805E0 		strb	lr, [sp, #5]
 251:Src/freertos.c **** 
 252:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 755              		.loc 1 252 0
 756 00ac 124C     		ldr	r4, .L70
 757              	.LVL80:
 758 00ae 2046     		mov	r0, r4
 759 00b0 0DF10701 		add	r1, sp, #7
 760 00b4 0122     		movs	r2, #1
 761 00b6 4EF6EE63 		movw	r3, #61166
 762              	.LVL81:
 763 00ba FFF7FEFF 		bl	HAL_UART_Transmit
 764              	.LVL82:
 253:Src/freertos.c ****         osDelay(2);
 765              		.loc 1 253 0
 766 00be 0220     		movs	r0, #2
 767 00c0 FFF7FEFF 		bl	osDelay
 768              	.LVL83:
 254:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 769              		.loc 1 254 0
 770 00c4 2046     		mov	r0, r4
 771 00c6 0DF10601 		add	r1, sp, #6
 772 00ca 0122     		movs	r2, #1
 773 00cc 4EF6EE63 		movw	r3, #61166
 774 00d0 FFF7FEFF 		bl	HAL_UART_Transmit
 775              	.LVL84:
 255:Src/freertos.c ****         osDelay(2);
 776              		.loc 1 255 0
 777 00d4 0220     		movs	r0, #2
 778 00d6 FFF7FEFF 		bl	osDelay
 779              	.LVL85:
 256:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 780              		.loc 1 256 0
 781 00da 2046     		mov	r0, r4
 782 00dc 0DF10501 		add	r1, sp, #5
 783 00e0 0122     		movs	r2, #1
 784 00e2 4EF6EE63 		movw	r3, #61166
 785 00e6 FFF7FEFF 		bl	HAL_UART_Transmit
 786              	.LVL86:
 257:Src/freertos.c ****         osDelay(2);
 787              		.loc 1 257 0
 788 00ea 0220     		movs	r0, #2
 789 00ec FFF7FEFF 		bl	osDelay
 790              	.LVL87:
 258:Src/freertos.c ****     }
 791              		.loc 1 258 0
 792 00f0 02B0     		add	sp, sp, #8
 793              	.LCFI15:
 794              		.cfi_def_cfa_offset 32
 795              		@ sp needed
ARM GAS  /tmp/cckw9KWo.s 			page 19


 796 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 797              	.LVL88:
 798              	.L71:
 799 00f6 00BF     		.align	2
 800              	.L70:
 801 00f8 00000000 		.word	huart1
 802              		.cfi_endproc
 803              	.LFE142:
 805              		.section	.text.ReceptionMessage,"ax",%progbits
 806              		.align	2
 807              		.global	ReceptionMessage
 808              		.thumb
 809              		.thumb_func
 811              	ReceptionMessage:
 812              	.LFB143:
 259:Src/freertos.c **** 
 260:Src/freertos.c ****     int ReceptionMessage(){
 813              		.loc 1 260 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 818              	.LCFI16:
 819              		.cfi_def_cfa_offset 28
 820              		.cfi_offset 4, -28
 821              		.cfi_offset 5, -24
 822              		.cfi_offset 6, -20
 823              		.cfi_offset 7, -16
 824              		.cfi_offset 8, -12
 825              		.cfi_offset 9, -8
 826              		.cfi_offset 14, -4
 827 0004 83B0     		sub	sp, sp, #12
 828              	.LCFI17:
 829              		.cfi_def_cfa_offset 40
 261:Src/freertos.c ****         uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 262:Src/freertos.c ****         uint8_t rec[3];
 263:Src/freertos.c ****         HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 830              		.loc 1 263 0
 831 0006 414C     		ldr	r4, .L90
 832 0008 2046     		mov	r0, r4
 833 000a 0DF10701 		add	r1, sp, #7
 834 000e 0122     		movs	r2, #1
 835 0010 4EF6EE63 		movw	r3, #61166
 836 0014 FFF7FEFF 		bl	HAL_UART_Receive
 837              	.LVL89:
 264:Src/freertos.c ****         HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
 838              		.loc 1 264 0
 839 0018 2046     		mov	r0, r4
 840 001a 0DF10601 		add	r1, sp, #6
 841 001e 0122     		movs	r2, #1
 842 0020 4EF6EE63 		movw	r3, #61166
 843 0024 FFF7FEFF 		bl	HAL_UART_Receive
 844              	.LVL90:
 265:Src/freertos.c ****         HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 845              		.loc 1 265 0
 846 0028 2046     		mov	r0, r4
 847 002a 0DF10501 		add	r1, sp, #5
ARM GAS  /tmp/cckw9KWo.s 			page 20


 848 002e 0122     		movs	r2, #1
 849 0030 4EF6EE63 		movw	r3, #61166
 850 0034 FFF7FEFF 		bl	HAL_UART_Receive
 851              	.LVL91:
 266:Src/freertos.c **** 
 267:Src/freertos.c ****         rec[0] = r;
 852              		.loc 1 267 0
 853 0038 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 854 003c 8DF800C0 		strb	ip, [sp]
 268:Src/freertos.c ****         rec[1] = m;
 855              		.loc 1 268 0
 856 0040 9DF80650 		ldrb	r5, [sp, #6]	@ zero_extendqisi2
 857 0044 8DF80150 		strb	r5, [sp, #1]
 269:Src/freertos.c ****         rec[2] = n;
 858              		.loc 1 269 0
 859 0048 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
 860 004c 8DF80280 		strb	r8, [sp, #2]
 861              	.LVL92:
 270:Src/freertos.c ****         ok = 1;
 271:Src/freertos.c ****         for (i =0; i<3; i++) {
 862              		.loc 1 271 0
 863 0050 0024     		movs	r4, #0
 270:Src/freertos.c ****         ok = 1;
 864              		.loc 1 270 0
 865 0052 4FF0010E 		mov	lr, #1
 866              		.loc 1 271 0
 867 0056 2DE0     		b	.L73
 868              	.LVL93:
 869              	.L81:
 272:Src/freertos.c ****             run = (rec[i] & 0x01);
 870              		.loc 1 272 0
 871 0058 02AB     		add	r3, sp, #8
 872 005a 2344     		add	r3, r3, r4
 873 005c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 874 0060 03F00106 		and	r6, r3, #1
 875              	.LVL94:
 273:Src/freertos.c ****             rdeux = (rec[i] & 0x02)/2;
 876              		.loc 1 273 0
 877 0064 C3F34007 		ubfx	r7, r3, #1, #1
 878              	.LVL95:
 274:Src/freertos.c ****             rquatre =(rec[i] & 0x04)/4;
 879              		.loc 1 274 0
 880 0068 03F00402 		and	r2, r3, #4
 881 006c D2B2     		uxtb	r2, r2
 882 006e 9210     		asrs	r2, r2, #2
 883 0070 D2B2     		uxtb	r2, r2
 884              	.LVL96:
 275:Src/freertos.c ****             rhuit = (rec[i] & 0x08)/8;
 885              		.loc 1 275 0
 886 0072 03F00800 		and	r0, r3, #8
 887 0076 C0B2     		uxtb	r0, r0
 888 0078 C010     		asrs	r0, r0, #3
 889 007a C0B2     		uxtb	r0, r0
 890              	.LVL97:
 276:Src/freertos.c ****             rseize = (rec[i] & 0x10)/16;
 891              		.loc 1 276 0
 892 007c 03F01001 		and	r1, r3, #16
ARM GAS  /tmp/cckw9KWo.s 			page 21


 893 0080 C9B2     		uxtb	r1, r1
 894 0082 0911     		asrs	r1, r1, #4
 895 0084 C9B2     		uxtb	r1, r1
 896              	.LVL98:
 277:Src/freertos.c ****             rtrentedeux = (rec[i] & 0x20)/32;
 897              		.loc 1 277 0
 898 0086 03F02003 		and	r3, r3, #32
 899 008a DBB2     		uxtb	r3, r3
 900 008c 5B11     		asrs	r3, r3, #5
 901 008e DBB2     		uxtb	r3, r3
 902              	.LVL99:
 278:Src/freertos.c ****             if ((run^rdeux) != rhuit) ok =0;
 903              		.loc 1 278 0
 904 0090 86EA0709 		eor	r9, r6, r7
 905 0094 8145     		cmp	r9, r0
 906 0096 01D0     		beq	.L78
 907 0098 4FF0000E 		mov	lr, #0
 908              	.LVL100:
 909              	.L78:
 279:Src/freertos.c ****             if ((rdeux^rquatre) != rseize) ok =0;
 910              		.loc 1 279 0
 911 009c 5740     		eors	r7, r7, r2
 912              	.LVL101:
 913 009e 8F42     		cmp	r7, r1
 914 00a0 01D0     		beq	.L79
 915 00a2 4FF0000E 		mov	lr, #0
 916              	.LVL102:
 917              	.L79:
 280:Src/freertos.c ****             if ((rquatre^run) != rtrentedeux) ok = 0;
 918              		.loc 1 280 0
 919 00a6 7240     		eors	r2, r2, r6
 920              	.LVL103:
 921 00a8 9A42     		cmp	r2, r3
 922 00aa 01D0     		beq	.L80
 923 00ac 4FF0000E 		mov	lr, #0
 924              	.LVL104:
 925              	.L80:
 271:Src/freertos.c ****             run = (rec[i] & 0x01);
 926              		.loc 1 271 0 discriminator 2
 927 00b0 0134     		adds	r4, r4, #1
 928              	.LVL105:
 929 00b2 E4B2     		uxtb	r4, r4
 930              	.LVL106:
 931              	.L73:
 271:Src/freertos.c ****             run = (rec[i] & 0x01);
 932              		.loc 1 271 0 is_stmt 0 discriminator 1
 933 00b4 022C     		cmp	r4, #2
 934 00b6 CFD9     		bls	.L81
 281:Src/freertos.c ****         }
 282:Src/freertos.c ****         r =  (r & 0x07)*32;
 935              		.loc 1 282 0 is_stmt 1
 936 00b8 0CF0070C 		and	ip, ip, #7
 937 00bc 4FEA4C1C 		lsl	ip, ip, #5
 938 00c0 8DF807C0 		strb	ip, [sp, #7]
 283:Src/freertos.c ****         m =  (m & 0x07)*4;
 939              		.loc 1 283 0
 940 00c4 05F00703 		and	r3, r5, #7
ARM GAS  /tmp/cckw9KWo.s 			page 22


 941 00c8 9D00     		lsls	r5, r3, #2
 942 00ca 8DF80650 		strb	r5, [sp, #6]
 284:Src/freertos.c ****         n =  (n & 0x07);
 943              		.loc 1 284 0
 944 00ce 08F00708 		and	r8, r8, #7
 945 00d2 8DF80580 		strb	r8, [sp, #5]
 285:Src/freertos.c ****         v =  r + m + n;
 946              		.loc 1 285 0
 947 00d6 6544     		add	r5, r5, ip
 948 00d8 4544     		add	r5, r5, r8
 949 00da EDB2     		uxtb	r5, r5
 950              	.LVL107:
 286:Src/freertos.c ****         if (ok == 1) {
 951              		.loc 1 286 0
 952 00dc BEF1000F 		cmp	lr, #0
 953 00e0 0CD1     		bne	.L88
 287:Src/freertos.c ****             for (i = 0; i<5; i++)
 288:Src/freertos.c ****             {
 289:Src/freertos.c ****                 HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 290:Src/freertos.c ****                 osDelay(500);
 291:Src/freertos.c ****             }
 292:Src/freertos.c ****             return(v);
 293:Src/freertos.c ****         }
 294:Src/freertos.c ****         else return(0);
 954              		.loc 1 294 0
 955 00e2 0020     		movs	r0, #0
 956 00e4 0EE0     		b	.L83
 957              	.LVL108:
 958              	.L84:
 289:Src/freertos.c ****                 osDelay(500);
 959              		.loc 1 289 0 discriminator 3
 960 00e6 0A48     		ldr	r0, .L90+4
 961 00e8 4021     		movs	r1, #64
 962 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 963              	.LVL109:
 290:Src/freertos.c ****             }
 964              		.loc 1 290 0 discriminator 3
 965 00ee 4FF4FA70 		mov	r0, #500
 966 00f2 FFF7FEFF 		bl	osDelay
 967              	.LVL110:
 287:Src/freertos.c ****             for (i = 0; i<5; i++)
 968              		.loc 1 287 0 discriminator 3
 969 00f6 0134     		adds	r4, r4, #1
 970              	.LVL111:
 971 00f8 E4B2     		uxtb	r4, r4
 972              	.LVL112:
 973 00fa 00E0     		b	.L82
 974              	.LVL113:
 975              	.L88:
 976 00fc 0024     		movs	r4, #0
 977              	.LVL114:
 978              	.L82:
 287:Src/freertos.c ****             for (i = 0; i<5; i++)
 979              		.loc 1 287 0 is_stmt 0 discriminator 1
 980 00fe 042C     		cmp	r4, #4
 981 0100 F1D9     		bls	.L84
 292:Src/freertos.c ****         }
ARM GAS  /tmp/cckw9KWo.s 			page 23


 982              		.loc 1 292 0 is_stmt 1
 983 0102 2846     		mov	r0, r5
 984              	.L83:
 295:Src/freertos.c ****     }
 985              		.loc 1 295 0
 986 0104 03B0     		add	sp, sp, #12
 987              	.LCFI18:
 988              		.cfi_def_cfa_offset 28
 989              		@ sp needed
 990 0106 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 991              	.LVL115:
 992              	.L91:
 993 010a 00BF     		.align	2
 994              	.L90:
 995 010c 00000000 		.word	huart1
 996 0110 00040048 		.word	1207960576
 997              		.cfi_endproc
 998              	.LFE143:
 1000              		.section	.text.recoitpos,"ax",%progbits
 1001              		.align	2
 1002              		.global	recoitpos
 1003              		.thumb
 1004              		.thumb_func
 1006              	recoitpos:
 1007              	.LFB144:
 296:Src/freertos.c **** 
 297:Src/freertos.c ****     void recoitpos(){
 1008              		.loc 1 297 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012 0000 38B5     		push	{r3, r4, r5, lr}
 1013              	.LCFI19:
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 3, -16
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 5, -8
 1018              		.cfi_offset 14, -4
 298:Src/freertos.c ****         uint8_t a, x, y, c;
 299:Src/freertos.c ****         a = ReceptionMessage();
 1019              		.loc 1 299 0
 1020 0002 FFF7FEFF 		bl	ReceptionMessage
 1021              	.LVL116:
 1022 0006 C0B2     		uxtb	r0, r0
 1023              	.LVL117:
 300:Src/freertos.c ****         x = a & 0xF0;
 1024              		.loc 1 300 0
 1025 0008 00F0F005 		and	r5, r0, #240
 1026              	.LVL118:
 301:Src/freertos.c ****         y = a & 0x0F;
 1027              		.loc 1 301 0
 1028 000c 00F00F04 		and	r4, r0, #15
 1029              	.LVL119:
 302:Src/freertos.c ****         c = ReceptionMessage();
 1030              		.loc 1 302 0
 1031 0010 FFF7FEFF 		bl	ReceptionMessage
 1032              	.LVL120:
ARM GAS  /tmp/cckw9KWo.s 			page 24


 303:Src/freertos.c ****         robot2.posx = x;
 1033              		.loc 1 303 0
 1034 0014 024B     		ldr	r3, .L94
 1035 0016 1D60     		str	r5, [r3]
 304:Src/freertos.c ****         robot2.posy = y;
 1036              		.loc 1 304 0
 1037 0018 5C60     		str	r4, [r3, #4]
 305:Src/freertos.c ****         robot2.orientation = c;
 1038              		.loc 1 305 0
 1039 001a C0B2     		uxtb	r0, r0
 1040 001c 9860     		str	r0, [r3, #8]
 1041 001e 38BD     		pop	{r3, r4, r5, pc}
 1042              	.LVL121:
 1043              	.L95:
 1044              		.align	2
 1045              	.L94:
 1046 0020 00000000 		.word	robot2
 1047              		.cfi_endproc
 1048              	.LFE144:
 1050              		.section	.text.envoipos,"ax",%progbits
 1051              		.align	2
 1052              		.global	envoipos
 1053              		.thumb
 1054              		.thumb_func
 1056              	envoipos:
 1057              	.LFB145:
 306:Src/freertos.c ****     }
 307:Src/freertos.c **** 
 308:Src/freertos.c ****     void envoipos(uint8_t x, uint8_t y , uint8_t c){
 1058              		.loc 1 308 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              	.LVL122:
 1063 0000 10B5     		push	{r4, lr}
 1064              	.LCFI20:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 1068 0002 1446     		mov	r4, r2
 309:Src/freertos.c ****          x = x*16 + y;
 1069              		.loc 1 309 0
 1070 0004 01EB0010 		add	r0, r1, r0, lsl #4
 1071              	.LVL123:
 310:Src/freertos.c ****          EnvoiMessage(x);
 1072              		.loc 1 310 0
 1073 0008 C0B2     		uxtb	r0, r0
 1074 000a FFF7FEFF 		bl	EnvoiMessage
 1075              	.LVL124:
 311:Src/freertos.c ****          EnvoiMessage(c);
 1076              		.loc 1 311 0
 1077 000e 2046     		mov	r0, r4
 1078 0010 FFF7FEFF 		bl	EnvoiMessage
 1079              	.LVL125:
 1080 0014 10BD     		pop	{r4, pc}
 1081              		.cfi_endproc
 1082              	.LFE145:
ARM GAS  /tmp/cckw9KWo.s 			page 25


 1084 0016 00BF     		.section	.text.Traduction,"ax",%progbits
 1085              		.align	2
 1086              		.global	Traduction
 1087              		.thumb
 1088              		.thumb_func
 1090              	Traduction:
 1091              	.LFB146:
 312:Src/freertos.c ****     }
 313:Src/freertos.c **** 
 314:Src/freertos.c ****     void Traduction(uint8_t msg){
 1092              		.loc 1 314 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              	.LVL126:
 1097 0000 10B5     		push	{r4, lr}
 1098              	.LCFI21:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 4, -8
 1101              		.cfi_offset 14, -4
 1102 0002 0446     		mov	r4, r0
 315:Src/freertos.c ****         if (msg == 0x05) {
 1103              		.loc 1 315 0
 1104 0004 0528     		cmp	r0, #5
 1105 0006 05D1     		bne	.L99
 316:Src/freertos.c ****            envoipos(robot1.posx, robot1.posy, robot1.orientation);
 1106              		.loc 1 316 0
 1107 0008 174B     		ldr	r3, .L106
 1108 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1109              	.LVL127:
 1110 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1111 000e 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1112 0010 FFF7FEFF 		bl	envoipos
 1113              	.LVL128:
 1114              	.L99:
 317:Src/freertos.c ****         }
 318:Src/freertos.c **** 
 319:Src/freertos.c ****         if (msg == 0x06) {
 320:Src/freertos.c **** 
 321:Src/freertos.c ****         }
 322:Src/freertos.c **** 
 323:Src/freertos.c ****         if (msg == 0x07) {
 1115              		.loc 1 323 0
 1116 0014 072C     		cmp	r4, #7
 1117 0016 02D1     		bne	.L100
 324:Src/freertos.c ****             flag_haut = 1;
 1118              		.loc 1 324 0
 1119 0018 0122     		movs	r2, #1
 1120 001a 144B     		ldr	r3, .L106+4
 1121 001c 1A60     		str	r2, [r3]
 1122              	.L100:
 325:Src/freertos.c ****         }
 326:Src/freertos.c **** 
 327:Src/freertos.c ****         if (msg == 0x08) {
 1123              		.loc 1 327 0
 1124 001e 082C     		cmp	r4, #8
 1125 0020 02D1     		bne	.L101
ARM GAS  /tmp/cckw9KWo.s 			page 26


 328:Src/freertos.c ****             flag_bas = 1;
 1126              		.loc 1 328 0
 1127 0022 0122     		movs	r2, #1
 1128 0024 124B     		ldr	r3, .L106+8
 1129 0026 1A60     		str	r2, [r3]
 1130              	.L101:
 329:Src/freertos.c ****         }
 330:Src/freertos.c **** 
 331:Src/freertos.c ****         if (msg == 0x09) {
 1131              		.loc 1 331 0
 1132 0028 092C     		cmp	r4, #9
 1133 002a 02D1     		bne	.L102
 332:Src/freertos.c ****             flag_droite = 1;
 1134              		.loc 1 332 0
 1135 002c 0122     		movs	r2, #1
 1136 002e 114B     		ldr	r3, .L106+12
 1137 0030 1A60     		str	r2, [r3]
 1138              	.L102:
 333:Src/freertos.c ****         }
 334:Src/freertos.c **** 
 335:Src/freertos.c ****         if (msg == 0x0A) {
 1139              		.loc 1 335 0
 1140 0032 0A2C     		cmp	r4, #10
 1141 0034 02D1     		bne	.L103
 336:Src/freertos.c ****             flag_gauche = 1;
 1142              		.loc 1 336 0
 1143 0036 0122     		movs	r2, #1
 1144 0038 0F4B     		ldr	r3, .L106+16
 1145 003a 1A60     		str	r2, [r3]
 1146              	.L103:
 337:Src/freertos.c ****         }
 338:Src/freertos.c **** 
 339:Src/freertos.c ****         if (msg == 0x0B) {
 340:Src/freertos.c ****         }
 341:Src/freertos.c **** 
 342:Src/freertos.c ****         if (msg == 0x0C) {
 343:Src/freertos.c ****         }
 344:Src/freertos.c **** 
 345:Src/freertos.c ****         if (msg == 0x0D) {
 1147              		.loc 1 345 0
 1148 003c 0D2C     		cmp	r4, #13
 1149 003e 12D1     		bne	.L98
 1150              	.LBB2:
 346:Src/freertos.c ****             uint8_t a;
 347:Src/freertos.c ****             srand(time(NULL));
 1151              		.loc 1 347 0
 1152 0040 0020     		movs	r0, #0
 1153 0042 FFF7FEFF 		bl	time
 1154              	.LVL129:
 1155 0046 FFF7FEFF 		bl	srand
 1156              	.LVL130:
 348:Src/freertos.c ****             a = rand()%100;
 1157              		.loc 1 348 0
 1158 004a FFF7FEFF 		bl	rand
 1159              	.LVL131:
 1160 004e 0B4B     		ldr	r3, .L106+20
 1161 0050 83FB0032 		smull	r3, r2, r3, r0
ARM GAS  /tmp/cckw9KWo.s 			page 27


 1162 0054 C317     		asrs	r3, r0, #31
 1163 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1164 005a 6422     		movs	r2, #100
 1165 005c 02FB1303 		mls	r3, r2, r3, r0
 1166              	.LVL132:
 349:Src/freertos.c ****             EnvoiMessage(a);
 1167              		.loc 1 349 0
 1168 0060 D8B2     		uxtb	r0, r3
 1169 0062 FFF7FEFF 		bl	EnvoiMessage
 1170              	.LVL133:
 1171              	.L98:
 1172 0066 10BD     		pop	{r4, pc}
 1173              	.L107:
 1174              		.align	2
 1175              	.L106:
 1176 0068 00000000 		.word	robot1
 1177 006c 00000000 		.word	.LANCHOR4
 1178 0070 00000000 		.word	.LANCHOR5
 1179 0074 00000000 		.word	.LANCHOR6
 1180 0078 00000000 		.word	.LANCHOR7
 1181 007c 1F85EB51 		.word	1374389535
 1182              	.LBE2:
 1183              		.cfi_endproc
 1184              	.LFE146:
 1186              		.section	.text.WaitFor,"ax",%progbits
 1187              		.align	2
 1188              		.global	WaitFor
 1189              		.thumb
 1190              		.thumb_func
 1192              	WaitFor:
 1193              	.LFB147:
 350:Src/freertos.c ****         }
 351:Src/freertos.c **** 
 352:Src/freertos.c ****         if (msg == 0x10) {
 353:Src/freertos.c ****         }
 354:Src/freertos.c **** 
 355:Src/freertos.c ****         if (msg == 0x11) {
 356:Src/freertos.c ****         }
 357:Src/freertos.c **** 
 358:Src/freertos.c ****         if (msg == 0x12) {
 359:Src/freertos.c ****         }
 360:Src/freertos.c **** 
 361:Src/freertos.c ****         if (msg == 0x13) {
 362:Src/freertos.c ****         }
 363:Src/freertos.c ****     }
 364:Src/freertos.c **** 
 365:Src/freertos.c ****     void WaitFor(uint8_t z) {
 1194              		.loc 1 365 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198              	.LVL134:
 1199 0000 10B5     		push	{r4, lr}
 1200              	.LCFI22:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
ARM GAS  /tmp/cckw9KWo.s 			page 28


 1204 0002 0446     		mov	r4, r0
 1205              	.LVL135:
 1206              	.L109:
 366:Src/freertos.c ****         while (z != ReceptionMessage()) ;
 1207              		.loc 1 366 0 discriminator 1
 1208 0004 FFF7FEFF 		bl	ReceptionMessage
 1209              	.LVL136:
 1210 0008 8442     		cmp	r4, r0
 1211 000a FBD1     		bne	.L109
 367:Src/freertos.c ****     }
 1212              		.loc 1 367 0
 1213 000c 10BD     		pop	{r4, pc}
 1214              		.cfi_endproc
 1215              	.LFE147:
 1217 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1218              		.align	2
 1219              		.global	TaPosition
 1220              		.thumb
 1221              		.thumb_func
 1223              	TaPosition:
 1224              	.LFB148:
 368:Src/freertos.c **** 
 369:Src/freertos.c ****     void TaPosition() {
 1225              		.loc 1 369 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229 0000 08B5     		push	{r3, lr}
 1230              	.LCFI23:
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 3, -8
 1233              		.cfi_offset 14, -4
 370:Src/freertos.c ****         EnvoiMessage(0x05);
 1234              		.loc 1 370 0
 1235 0002 0520     		movs	r0, #5
 1236 0004 FFF7FEFF 		bl	EnvoiMessage
 1237              	.LVL137:
 1238 0008 08BD     		pop	{r3, pc}
 1239              		.cfi_endproc
 1240              	.LFE148:
 1242 000a 00BF     		.section	.text.ok,"ax",%progbits
 1243              		.align	2
 1244              		.global	ok
 1245              		.thumb
 1246              		.thumb_func
 1248              	ok:
 1249              	.LFB149:
 371:Src/freertos.c ****     }
 372:Src/freertos.c **** 
 373:Src/freertos.c ****     void ok() {
 1250              		.loc 1 373 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254 0000 08B5     		push	{r3, lr}
 1255              	.LCFI24:
 1256              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cckw9KWo.s 			page 29


 1257              		.cfi_offset 3, -8
 1258              		.cfi_offset 14, -4
 374:Src/freertos.c ****         EnvoiMessage(0x06);
 1259              		.loc 1 374 0
 1260 0002 0620     		movs	r0, #6
 1261 0004 FFF7FEFF 		bl	EnvoiMessage
 1262              	.LVL138:
 1263 0008 08BD     		pop	{r3, pc}
 1264              		.cfi_endproc
 1265              	.LFE149:
 1267 000a 00BF     		.section	.text.Monte,"ax",%progbits
 1268              		.align	2
 1269              		.global	Monte
 1270              		.thumb
 1271              		.thumb_func
 1273              	Monte:
 1274              	.LFB150:
 375:Src/freertos.c ****     }
 376:Src/freertos.c **** 
 377:Src/freertos.c ****     void Monte() {
 1275              		.loc 1 377 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279 0000 08B5     		push	{r3, lr}
 1280              	.LCFI25:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 3, -8
 1283              		.cfi_offset 14, -4
 378:Src/freertos.c ****         EnvoiMessage(0x07);
 1284              		.loc 1 378 0
 1285 0002 0720     		movs	r0, #7
 1286 0004 FFF7FEFF 		bl	EnvoiMessage
 1287              	.LVL139:
 379:Src/freertos.c ****         WaitFor(0x06);
 1288              		.loc 1 379 0
 1289 0008 0620     		movs	r0, #6
 1290 000a FFF7FEFF 		bl	WaitFor
 1291              	.LVL140:
 1292 000e 08BD     		pop	{r3, pc}
 1293              		.cfi_endproc
 1294              	.LFE150:
 1296              		.section	.text.Descend,"ax",%progbits
 1297              		.align	2
 1298              		.global	Descend
 1299              		.thumb
 1300              		.thumb_func
 1302              	Descend:
 1303              	.LFB151:
 380:Src/freertos.c ****     }
 381:Src/freertos.c **** 
 382:Src/freertos.c ****     void Descend() {
 1304              		.loc 1 382 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
 1308 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cckw9KWo.s 			page 30


 1309              	.LCFI26:
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 3, -8
 1312              		.cfi_offset 14, -4
 383:Src/freertos.c ****         EnvoiMessage(0x08);
 1313              		.loc 1 383 0
 1314 0002 0820     		movs	r0, #8
 1315 0004 FFF7FEFF 		bl	EnvoiMessage
 1316              	.LVL141:
 384:Src/freertos.c ****         WaitFor(0x06);
 1317              		.loc 1 384 0
 1318 0008 0620     		movs	r0, #6
 1319 000a FFF7FEFF 		bl	WaitFor
 1320              	.LVL142:
 1321 000e 08BD     		pop	{r3, pc}
 1322              		.cfi_endproc
 1323              	.LFE151:
 1325              		.section	.text.Droite,"ax",%progbits
 1326              		.align	2
 1327              		.global	Droite
 1328              		.thumb
 1329              		.thumb_func
 1331              	Droite:
 1332              	.LFB152:
 385:Src/freertos.c ****     }
 386:Src/freertos.c **** 
 387:Src/freertos.c ****     void Droite() {
 1333              		.loc 1 387 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337 0000 08B5     		push	{r3, lr}
 1338              	.LCFI27:
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 3, -8
 1341              		.cfi_offset 14, -4
 388:Src/freertos.c ****         EnvoiMessage(0x09);
 1342              		.loc 1 388 0
 1343 0002 0920     		movs	r0, #9
 1344 0004 FFF7FEFF 		bl	EnvoiMessage
 1345              	.LVL143:
 389:Src/freertos.c ****         WaitFor(0x06);
 1346              		.loc 1 389 0
 1347 0008 0620     		movs	r0, #6
 1348 000a FFF7FEFF 		bl	WaitFor
 1349              	.LVL144:
 1350 000e 08BD     		pop	{r3, pc}
 1351              		.cfi_endproc
 1352              	.LFE152:
 1354              		.section	.text.Gauche,"ax",%progbits
 1355              		.align	2
 1356              		.global	Gauche
 1357              		.thumb
 1358              		.thumb_func
 1360              	Gauche:
 1361              	.LFB153:
 390:Src/freertos.c ****     }
ARM GAS  /tmp/cckw9KWo.s 			page 31


 391:Src/freertos.c **** 
 392:Src/freertos.c ****     void Gauche() {
 1362              		.loc 1 392 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366 0000 08B5     		push	{r3, lr}
 1367              	.LCFI28:
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 3, -8
 1370              		.cfi_offset 14, -4
 393:Src/freertos.c ****         EnvoiMessage(0x0A);
 1371              		.loc 1 393 0
 1372 0002 0A20     		movs	r0, #10
 1373 0004 FFF7FEFF 		bl	EnvoiMessage
 1374              	.LVL145:
 394:Src/freertos.c ****         WaitFor(0x06);
 1375              		.loc 1 394 0
 1376 0008 0620     		movs	r0, #6
 1377 000a FFF7FEFF 		bl	WaitFor
 1378              	.LVL146:
 1379 000e 08BD     		pop	{r3, pc}
 1380              		.cfi_endproc
 1381              	.LFE153:
 1383              		.section	.text.DansUnCoin,"ax",%progbits
 1384              		.align	2
 1385              		.global	DansUnCoin
 1386              		.thumb
 1387              		.thumb_func
 1389              	DansUnCoin:
 1390              	.LFB154:
 395:Src/freertos.c ****     }
 396:Src/freertos.c **** 
 397:Src/freertos.c ****     void DansUnCoin() {
 1391              		.loc 1 397 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395 0000 08B5     		push	{r3, lr}
 1396              	.LCFI29:
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 3, -8
 1399              		.cfi_offset 14, -4
 398:Src/freertos.c ****         EnvoiMessage(0x0B);
 1400              		.loc 1 398 0
 1401 0002 0B20     		movs	r0, #11
 1402 0004 FFF7FEFF 		bl	EnvoiMessage
 1403              	.LVL147:
 1404 0008 08BD     		pop	{r3, pc}
 1405              		.cfi_endproc
 1406              	.LFE154:
 1408 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1409              		.align	2
 1410              		.global	Trouve
 1411              		.thumb
 1412              		.thumb_func
 1414              	Trouve:
ARM GAS  /tmp/cckw9KWo.s 			page 32


 1415              	.LFB155:
 399:Src/freertos.c ****     }
 400:Src/freertos.c **** 
 401:Src/freertos.c ****     void Trouve() {
 1416              		.loc 1 401 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420 0000 08B5     		push	{r3, lr}
 1421              	.LCFI30:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 3, -8
 1424              		.cfi_offset 14, -4
 402:Src/freertos.c ****         EnvoiMessage(0x0C);
 1425              		.loc 1 402 0
 1426 0002 0C20     		movs	r0, #12
 1427 0004 FFF7FEFF 		bl	EnvoiMessage
 1428              	.LVL148:
 1429 0008 08BD     		pop	{r3, pc}
 1430              		.cfi_endproc
 1431              	.LFE155:
 1433 000a 00BF     		.section	.text.Random,"ax",%progbits
 1434              		.align	2
 1435              		.global	Random
 1436              		.thumb
 1437              		.thumb_func
 1439              	Random:
 1440              	.LFB156:
 403:Src/freertos.c ****     }
 404:Src/freertos.c **** 
 405:Src/freertos.c ****     int Random() {
 1441              		.loc 1 405 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445 0000 10B5     		push	{r4, lr}
 1446              	.LCFI31:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 4, -8
 1449              		.cfi_offset 14, -4
 406:Src/freertos.c ****         int a, p;
 407:Src/freertos.c ****         EnvoiMessage(0x0D);
 1450              		.loc 1 407 0
 1451 0002 0D20     		movs	r0, #13
 1452 0004 FFF7FEFF 		bl	EnvoiMessage
 1453              	.LVL149:
 408:Src/freertos.c ****         srand(time(NULL));
 1454              		.loc 1 408 0
 1455 0008 0020     		movs	r0, #0
 1456 000a FFF7FEFF 		bl	time
 1457              	.LVL150:
 1458 000e FFF7FEFF 		bl	srand
 1459              	.LVL151:
 409:Src/freertos.c ****         a = rand()%256;
 1460              		.loc 1 409 0
 1461 0012 FFF7FEFF 		bl	rand
 1462              	.LVL152:
ARM GAS  /tmp/cckw9KWo.s 			page 33


 1463 0016 0B4C     		ldr	r4, .L132
 1464 0018 0440     		ands	r4, r4, r0
 1465 001a 002C     		cmp	r4, #0
 1466 001c 03DA     		bge	.L128
 1467 001e 013C     		subs	r4, r4, #1
 1468 0020 64F0FF04 		orn	r4, r4, #255
 1469 0024 0134     		adds	r4, r4, #1
 1470              	.L128:
 1471              	.LVL153:
 410:Src/freertos.c ****         if (ReceptionMessage() < a) {
 1472              		.loc 1 410 0
 1473 0026 FFF7FEFF 		bl	ReceptionMessage
 1474              	.LVL154:
 1475 002a A042     		cmp	r0, r4
 1476 002c 04DA     		bge	.L129
 1477              	.LVL155:
 411:Src/freertos.c ****             p = 1;
 412:Src/freertos.c ****             EnvoiMessage(0x50);
 1478              		.loc 1 412 0
 1479 002e 5020     		movs	r0, #80
 1480 0030 FFF7FEFF 		bl	EnvoiMessage
 1481              	.LVL156:
 411:Src/freertos.c ****             p = 1;
 1482              		.loc 1 411 0
 1483 0034 0120     		movs	r0, #1
 1484 0036 10BD     		pop	{r4, pc}
 1485              	.LVL157:
 1486              	.L129:
 413:Src/freertos.c ****         }
 414:Src/freertos.c ****         else {
 415:Src/freertos.c ****             p = 0;
 416:Src/freertos.c ****             EnvoiMessage(0x67);
 1487              		.loc 1 416 0
 1488 0038 6720     		movs	r0, #103
 1489 003a FFF7FEFF 		bl	EnvoiMessage
 1490              	.LVL158:
 415:Src/freertos.c ****             EnvoiMessage(0x67);
 1491              		.loc 1 415 0
 1492 003e 0020     		movs	r0, #0
 1493              	.LVL159:
 417:Src/freertos.c ****         }
 418:Src/freertos.c ****         return(p);
 419:Src/freertos.c ****     }
 1494              		.loc 1 419 0
 1495 0040 10BD     		pop	{r4, pc}
 1496              	.LVL160:
 1497              	.L133:
 1498 0042 00BF     		.align	2
 1499              	.L132:
 1500 0044 FF000080 		.word	-2147483393
 1501              		.cfi_endproc
 1502              	.LFE156:
 1504              		.section	.text.Non,"ax",%progbits
 1505              		.align	2
 1506              		.global	Non
 1507              		.thumb
 1508              		.thumb_func
ARM GAS  /tmp/cckw9KWo.s 			page 34


 1510              	Non:
 1511              	.LFB157:
 420:Src/freertos.c **** 
 421:Src/freertos.c ****     void Non(){
 1512              		.loc 1 421 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516 0000 08B5     		push	{r3, lr}
 1517              	.LCFI32:
 1518              		.cfi_def_cfa_offset 8
 1519              		.cfi_offset 3, -8
 1520              		.cfi_offset 14, -4
 422:Src/freertos.c ****         EnvoiMessage(0x10);
 1521              		.loc 1 422 0
 1522 0002 1020     		movs	r0, #16
 1523 0004 FFF7FEFF 		bl	EnvoiMessage
 1524              	.LVL161:
 1525 0008 08BD     		pop	{r3, pc}
 1526              		.cfi_endproc
 1527              	.LFE157:
 1529 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1530              		.align	2
 1531              		.global	MemeCase
 1532              		.thumb
 1533              		.thumb_func
 1535              	MemeCase:
 1536              	.LFB158:
 423:Src/freertos.c ****     }
 424:Src/freertos.c **** 
 425:Src/freertos.c ****     void MemeCase() {
 1537              		.loc 1 425 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541 0000 08B5     		push	{r3, lr}
 1542              	.LCFI33:
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 3, -8
 1545              		.cfi_offset 14, -4
 426:Src/freertos.c ****         EnvoiMessage(0x12);
 1546              		.loc 1 426 0
 1547 0002 1220     		movs	r0, #18
 1548 0004 FFF7FEFF 		bl	EnvoiMessage
 1549              	.LVL162:
 1550 0008 08BD     		pop	{r3, pc}
 1551              		.cfi_endproc
 1552              	.LFE158:
 1554 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1555              		.align	2
 1556              		.global	TuEsCoin
 1557              		.thumb
 1558              		.thumb_func
 1560              	TuEsCoin:
 1561              	.LFB159:
 427:Src/freertos.c ****     }
 428:Src/freertos.c **** 
ARM GAS  /tmp/cckw9KWo.s 			page 35


 429:Src/freertos.c ****     void TuEsCoin(){
 1562              		.loc 1 429 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566 0000 08B5     		push	{r3, lr}
 1567              	.LCFI34:
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 3, -8
 1570              		.cfi_offset 14, -4
 430:Src/freertos.c ****     EnvoiMessage(0x13);
 1571              		.loc 1 430 0
 1572 0002 1320     		movs	r0, #19
 1573 0004 FFF7FEFF 		bl	EnvoiMessage
 1574              	.LVL163:
 1575 0008 08BD     		pop	{r3, pc}
 1576              		.cfi_endproc
 1577              	.LFE159:
 1579 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1580              		.align	2
 1581              		.global	deplacement
 1582              		.thumb
 1583              		.thumb_func
 1585              	deplacement:
 1586              	.LFB160:
 431:Src/freertos.c **** }
 432:Src/freertos.c **** /* END Fonctions UART */
 433:Src/freertos.c **** 
 434:Src/freertos.c **** /* BEGIN Fonctions IA */
 435:Src/freertos.c **** void deplacement(int distance, int cap)
 436:Src/freertos.c **** {
 1587              		.loc 1 436 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591              	.LVL164:
 1592 0000 38B5     		push	{r3, r4, r5, lr}
 1593              	.LCFI35:
 1594              		.cfi_def_cfa_offset 16
 1595              		.cfi_offset 3, -16
 1596              		.cfi_offset 4, -12
 1597              		.cfi_offset 5, -8
 1598              		.cfi_offset 14, -4
 1599 0002 0546     		mov	r5, r0
 1600              	.LVL165:
 437:Src/freertos.c ****     int i=0;
 438:Src/freertos.c ****   for(i=0; i< distance +1; i++)
 1601              		.loc 1 438 0
 1602 0004 0024     		movs	r4, #0
 1603 0006 08E0     		b	.L141
 1604              	.LVL166:
 1605              	.L142:
 439:Src/freertos.c ****   {
 440:Src/freertos.c ****       flag_distance++;
 1606              		.loc 1 440 0 discriminator 3
 1607 0008 064A     		ldr	r2, .L144
 1608 000a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cckw9KWo.s 			page 36


 1609 000c 0133     		adds	r3, r3, #1
 1610 000e 1360     		str	r3, [r2]
 441:Src/freertos.c ****       osDelay(500);
 1611              		.loc 1 441 0 discriminator 3
 1612 0010 4FF4FA70 		mov	r0, #500
 1613 0014 FFF7FEFF 		bl	osDelay
 1614              	.LVL167:
 438:Src/freertos.c ****   {
 1615              		.loc 1 438 0 discriminator 3
 1616 0018 0134     		adds	r4, r4, #1
 1617              	.LVL168:
 1618              	.L141:
 438:Src/freertos.c ****   {
 1619              		.loc 1 438 0 is_stmt 0 discriminator 1
 1620 001a 6B1C     		adds	r3, r5, #1
 1621 001c A342     		cmp	r3, r4
 1622 001e F3DC     		bgt	.L142
 442:Src/freertos.c ****   }
 443:Src/freertos.c ****   /*for(i=0; i< cap +1; i++)
 444:Src/freertos.c ****   {
 445:Src/freertos.c ****       flag_cap++;
 446:Src/freertos.c ****       osDelay(500);
 447:Src/freertos.c ****   }*/
 448:Src/freertos.c **** }
 1623              		.loc 1 448 0 is_stmt 1
 1624 0020 38BD     		pop	{r3, r4, r5, pc}
 1625              	.LVL169:
 1626              	.L145:
 1627 0022 00BF     		.align	2
 1628              	.L144:
 1629 0024 00000000 		.word	.LANCHOR1
 1630              		.cfi_endproc
 1631              	.LFE160:
 1633              		.section	.text.motor,"ax",%progbits
 1634              		.align	2
 1635              		.global	motor
 1636              		.thumb
 1637              		.thumb_func
 1639              	motor:
 1640              	.LFB161:
 449:Src/freertos.c **** /* END Fonctions IA */
 450:Src/freertos.c **** 
 451:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 452:Src/freertos.c **** 
 453:Src/freertos.c **** /* Hook prototypes */
 454:Src/freertos.c **** 
 455:Src/freertos.c **** /* USER CODE BEGIN Application */
 456:Src/freertos.c **** void motor(void const * argument)
 457:Src/freertos.c **** {
 1641              		.loc 1 457 0
 1642              		.cfi_startproc
 1643              		@ Volatile: function does not return.
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              	.LVL170:
 1647 0000 08B5     		push	{r3, lr}
 1648              	.LCFI36:
ARM GAS  /tmp/cckw9KWo.s 			page 37


 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 3, -8
 1651              		.cfi_offset 14, -4
 458:Src/freertos.c ****   /* USER CODE BEGIN motor */
 459:Src/freertos.c ****   UNUSED(argument);
 460:Src/freertos.c **** 
 461:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 1652              		.loc 1 461 0
 1653 0002 4FF09040 		mov	r0, #1207959552
 1654              	.LVL171:
 1655 0006 4FF48071 		mov	r1, #256
 1656 000a 0122     		movs	r2, #1
 1657 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1658              	.LVL172:
 462:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 1659              		.loc 1 462 0
 1660 0010 074C     		ldr	r4, .L149
 1661 0012 2046     		mov	r0, r4
 1662 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1663              	.LVL173:
 463:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 1664              		.loc 1 463 0
 1665 0018 2046     		mov	r0, r4
 1666 001a 0021     		movs	r1, #0
 1667 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1668              	.LVL174:
 464:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 1669              		.loc 1 464 0
 1670 0020 2046     		mov	r0, r4
 1671 0022 0C21     		movs	r1, #12
 1672 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1673              	.LVL175:
 1674              	.L147:
 465:Src/freertos.c **** 
 466:Src/freertos.c ****   /* Infinite loop */
 467:Src/freertos.c ****   for(;;)
 468:Src/freertos.c ****   {
 469:Src/freertos.c ****     gestion_moteurs();
 1675              		.loc 1 469 0 discriminator 1
 1676 0028 FFF7FEFF 		bl	gestion_moteurs
 1677              	.LVL176:
 470:Src/freertos.c ****   }
 1678              		.loc 1 470 0 discriminator 1
 1679 002c FCE7     		b	.L147
 1680              	.L150:
 1681 002e 00BF     		.align	2
 1682              	.L149:
 1683 0030 00000000 		.word	htim3
 1684              		.cfi_endproc
 1685              	.LFE161:
 1687              		.section	.text.uart,"ax",%progbits
 1688              		.align	2
 1689              		.global	uart
 1690              		.thumb
 1691              		.thumb_func
 1693              	uart:
 1694              	.LFB162:
ARM GAS  /tmp/cckw9KWo.s 			page 38


 471:Src/freertos.c ****   /* USER CODE END motor */
 472:Src/freertos.c **** }
 473:Src/freertos.c **** 
 474:Src/freertos.c **** /*void adcControl(void const * argument)
 475:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 476:Src/freertos.c ****   /* Infinite loop */
 477:Src/freertos.c ****   /*for(;;)
 478:Src/freertos.c ****   {
 479:Src/freertos.c ****     HAL_ADC_Start_IT(&hadc1);
 480:Src/freertos.c ****     osDelay(1000);
 481:Src/freertos.c ****     if (flag_adc == 1) {
 482:Src/freertos.c ****         printf("Value : %lu\n\r", adcValue);
 483:Src/freertos.c ****         flag_adc = 0;
 484:Src/freertos.c ****     }
 485:Src/freertos.c ****   }*/
 486:Src/freertos.c ****   /* USER CODE END adcControl */
 487:Src/freertos.c **** 
 488:Src/freertos.c **** void uart(void const * argument)
 489:Src/freertos.c **** {
 1695              		.loc 1 489 0
 1696              		.cfi_startproc
 1697              		@ Volatile: function does not return.
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
 1701              	.LVL177:
 1702              	.L152:
 490:Src/freertos.c ****   /* USER CODE BEGIN uart */
 491:Src/freertos.c ****   /* Infinite loop */
 492:Src/freertos.c ****   for(;;)
 493:Src/freertos.c ****   {
 494:Src/freertos.c **** 
 495:Src/freertos.c ****     //pivoter_droite();
 496:Src/freertos.c ****     //ok();
 497:Src/freertos.c ****     //WaitFor(OK);
 498:Src/freertos.c **** 
 499:Src/freertos.c ****    /* WaitFor(OK);
 500:Src/freertos.c ****     pivoter_droite();
 501:Src/freertos.c ****     ok();
 502:Src/freertos.c **** 
 503:Src/freertos.c ****     osDelay(1);*/
 504:Src/freertos.c ****   }
 1703              		.loc 1 504 0 discriminator 1
 1704 0000 FEE7     		b	.L152
 1705              		.cfi_endproc
 1706              	.LFE162:
 1708 0002 00BF     		.section	.text.ia,"ax",%progbits
 1709              		.align	2
 1710              		.global	ia
 1711              		.thumb
 1712              		.thumb_func
 1714              	ia:
 1715              	.LFB163:
 505:Src/freertos.c ****   /* USER CODE END uart */
 506:Src/freertos.c **** }
 507:Src/freertos.c **** 
 508:Src/freertos.c **** void ia(void const * argument)
ARM GAS  /tmp/cckw9KWo.s 			page 39


 509:Src/freertos.c **** {
 1716              		.loc 1 509 0
 1717              		.cfi_startproc
 1718              		@ Volatile: function does not return.
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              	.LVL178:
 1722 0000 08B5     		push	{r3, lr}
 1723              	.LCFI37:
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 3, -8
 1726              		.cfi_offset 14, -4
 1727              	.LVL179:
 1728              	.L154:
 510:Src/freertos.c ****   /* USER CODE BEGIN ia */
 511:Src/freertos.c ****   /* Infinite loop */
 512:Src/freertos.c ****   for(;;)
 513:Src/freertos.c ****   {
 514:Src/freertos.c ****     osDelay(1000);
 1729              		.loc 1 514 0 discriminator 1
 1730 0002 4FF47A70 		mov	r0, #1000
 1731 0006 FFF7FEFF 		bl	osDelay
 1732              	.LVL180:
 515:Src/freertos.c ****     printf("Value : %d\n\r", flag_distance);
 1733              		.loc 1 515 0 discriminator 1
 1734 000a 0348     		ldr	r0, .L156
 1735 000c 034B     		ldr	r3, .L156+4
 1736 000e 1968     		ldr	r1, [r3]
 1737 0010 FFF7FEFF 		bl	printf
 1738              	.LVL181:
 516:Src/freertos.c ****   }
 1739              		.loc 1 516 0 discriminator 1
 1740 0014 F5E7     		b	.L154
 1741              	.L157:
 1742 0016 00BF     		.align	2
 1743              	.L156:
 1744 0018 00000000 		.word	.LC0
 1745 001c 00000000 		.word	.LANCHOR1
 1746              		.cfi_endproc
 1747              	.LFE163:
 1749              		.comm	robot2,12,4
 1750              		.comm	robot1,12,4
 1751              		.global	flag_cap
 1752              		.global	flag_distance
 1753              		.global	flag_gauche
 1754              		.global	flag_droite
 1755              		.global	flag_bas
 1756              		.global	flag_haut
 1757              		.global	deplacement_fini
 1758              		.global	adcValue
 1759              		.global	flag_adc
 1760              		.section	.bss.flag_adc,"aw",%nobits
 1761              		.align	2
 1762              		.set	.LANCHOR3,. + 0
 1765              	flag_adc:
 1766 0000 00000000 		.space	4
 1767              		.section	.bss.flag_gauche,"aw",%nobits
ARM GAS  /tmp/cckw9KWo.s 			page 40


 1768              		.align	2
 1769              		.set	.LANCHOR7,. + 0
 1772              	flag_gauche:
 1773 0000 00000000 		.space	4
 1774              		.section	.bss.flag_droite,"aw",%nobits
 1775              		.align	2
 1776              		.set	.LANCHOR6,. + 0
 1779              	flag_droite:
 1780 0000 00000000 		.space	4
 1781              		.section	.bss.flag_distance,"aw",%nobits
 1782              		.align	2
 1783              		.set	.LANCHOR1,. + 0
 1786              	flag_distance:
 1787 0000 00000000 		.space	4
 1788              		.section	.bss.deplacement_fini,"aw",%nobits
 1789              		.align	2
 1790              		.set	.LANCHOR0,. + 0
 1793              	deplacement_fini:
 1794 0000 00000000 		.space	4
 1795              		.section	.bss.flag_haut,"aw",%nobits
 1796              		.align	2
 1797              		.set	.LANCHOR4,. + 0
 1800              	flag_haut:
 1801 0000 00000000 		.space	4
 1802              		.section	.rodata.str1.4,"aMS",%progbits,1
 1803              		.align	2
 1804              	.LC0:
 1805 0000 56616C75 		.ascii	"Value : %d\012\015\000"
 1805      65203A20 
 1805      25640A0D 
 1805      00
 1806              		.section	.bss.flag_cap,"aw",%nobits
 1807              		.align	2
 1810              	flag_cap:
 1811 0000 00000000 		.space	4
 1812              		.section	.bss.adcValue,"aw",%nobits
 1813              		.align	2
 1814              		.set	.LANCHOR2,. + 0
 1817              	adcValue:
 1818 0000 00000000 		.space	4
 1819              		.section	.bss.flag_bas,"aw",%nobits
 1820              		.align	2
 1821              		.set	.LANCHOR5,. + 0
 1824              	flag_bas:
 1825 0000 00000000 		.space	4
 1826              		.text
 1827              	.Letext0:
 1828              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1829              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1830              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1831              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1832              		.file 6 "/usr/include/newlib/sys/types.h"
 1833              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1834              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1835              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1836              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1837              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
ARM GAS  /tmp/cckw9KWo.s 			page 41


 1838              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1839              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1840              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 1841              		.file 15 "/usr/include/newlib/time.h"
 1842              		.file 16 "/usr/include/newlib/stdlib.h"
 1843              		.file 17 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/cckw9KWo.s 			page 42
=======
 534              		.loc 1 193 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538 0000 08B5     		push	{r3, lr}
 539              	.LCFI10:
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 3, -8
 542              		.cfi_offset 14, -4
 194:Src/freertos.c ****     if (flag_distance < 0) {
 543              		.loc 1 194 0
 544 0002 214B     		ldr	r3, .L58
 545 0004 1B68     		ldr	r3, [r3]
 546 0006 002B     		cmp	r3, #0
 547 0008 0CDA     		bge	.L49
 195:Src/freertos.c ****       avancer_robot();
 548              		.loc 1 195 0
 549 000a FFF7FEFF 		bl	avancer_robot
 550              	.LVL52:
 196:Src/freertos.c ****       flag_distance --;
 551              		.loc 1 196 0
 552 000e 1E4A     		ldr	r2, .L58
 553 0010 1368     		ldr	r3, [r2]
 554 0012 013B     		subs	r3, r3, #1
 555 0014 1360     		str	r3, [r2]
 556              	.L50:
 197:Src/freertos.c ****       while(!deplacement_fini);
 557              		.loc 1 197 0 discriminator 1
 558 0016 1D4B     		ldr	r3, .L58+4
 559 0018 1B68     		ldr	r3, [r3]
 560 001a 002B     		cmp	r3, #0
 561 001c FBD0     		beq	.L50
 198:Src/freertos.c ****       deplacement_fini = 0;
 562              		.loc 1 198 0
 563 001e 0022     		movs	r2, #0
 564 0020 1A4B     		ldr	r3, .L58+4
ARM GAS  /tmp/ccXGsRah.s 			page 14


 565 0022 1A60     		str	r2, [r3]
 566              	.L49:
 199:Src/freertos.c ****     }
 200:Src/freertos.c **** 
 201:Src/freertos.c ****     if (flag_distance > 0) {
 567              		.loc 1 201 0
 568 0024 184B     		ldr	r3, .L58
 569 0026 1B68     		ldr	r3, [r3]
 570 0028 002B     		cmp	r3, #0
 571 002a 0CDD     		ble	.L51
 202:Src/freertos.c ****       reculer_robot();
 572              		.loc 1 202 0
 573 002c FFF7FEFF 		bl	reculer_robot
 574              	.LVL53:
 203:Src/freertos.c ****       flag_distance ++;
 575              		.loc 1 203 0
 576 0030 154A     		ldr	r2, .L58
 577 0032 1368     		ldr	r3, [r2]
 578 0034 0133     		adds	r3, r3, #1
 579 0036 1360     		str	r3, [r2]
 580              	.L52:
 204:Src/freertos.c ****       while(!deplacement_fini);
 581              		.loc 1 204 0 discriminator 1
 582 0038 144B     		ldr	r3, .L58+4
 583 003a 1B68     		ldr	r3, [r3]
 584 003c 002B     		cmp	r3, #0
 585 003e FBD0     		beq	.L52
 205:Src/freertos.c ****       deplacement_fini = 0;
 586              		.loc 1 205 0
 587 0040 0022     		movs	r2, #0
 588 0042 124B     		ldr	r3, .L58+4
 589 0044 1A60     		str	r2, [r3]
 590              	.L51:
 206:Src/freertos.c ****     }
 207:Src/freertos.c **** 
 208:Src/freertos.c ****     if (flag_cap < 0) {
 591              		.loc 1 208 0
 592 0046 124B     		ldr	r3, .L58+8
 593 0048 1B68     		ldr	r3, [r3]
 594 004a 002B     		cmp	r3, #0
 595 004c 0CDA     		bge	.L53
 209:Src/freertos.c ****       pivoter_gauche();
 596              		.loc 1 209 0
 597 004e FFF7FEFF 		bl	pivoter_gauche
 598              	.LVL54:
 210:Src/freertos.c ****       flag_cap ++;
 599              		.loc 1 210 0
 600 0052 0F4A     		ldr	r2, .L58+8
 601 0054 1368     		ldr	r3, [r2]
 602 0056 0133     		adds	r3, r3, #1
 603 0058 1360     		str	r3, [r2]
 604              	.L54:
 211:Src/freertos.c ****       while(!deplacement_fini);
 605              		.loc 1 211 0 discriminator 1
 606 005a 0C4B     		ldr	r3, .L58+4
 607 005c 1B68     		ldr	r3, [r3]
 608 005e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXGsRah.s 			page 15


 609 0060 FBD0     		beq	.L54
 212:Src/freertos.c ****       deplacement_fini = 0;
 610              		.loc 1 212 0
 611 0062 0022     		movs	r2, #0
 612 0064 094B     		ldr	r3, .L58+4
 613 0066 1A60     		str	r2, [r3]
 614              	.L53:
 213:Src/freertos.c ****     }
 214:Src/freertos.c **** 
 215:Src/freertos.c ****     if (flag_cap > 0) {
 615              		.loc 1 215 0
 616 0068 094B     		ldr	r3, .L58+8
 617 006a 1B68     		ldr	r3, [r3]
 618 006c 002B     		cmp	r3, #0
 619 006e 09DD     		ble	.L48
 216:Src/freertos.c ****       flag_cap --;
 620              		.loc 1 216 0
 621 0070 013B     		subs	r3, r3, #1
 622 0072 074A     		ldr	r2, .L58+8
 623 0074 1360     		str	r3, [r2]
 624              	.L56:
 217:Src/freertos.c ****       while(!deplacement_fini);
 625              		.loc 1 217 0 discriminator 1
 626 0076 054B     		ldr	r3, .L58+4
 627 0078 1B68     		ldr	r3, [r3]
 628 007a 002B     		cmp	r3, #0
 629 007c FBD0     		beq	.L56
 218:Src/freertos.c ****       deplacement_fini = 0;
 630              		.loc 1 218 0
 631 007e 0022     		movs	r2, #0
 632 0080 024B     		ldr	r3, .L58+4
 633 0082 1A60     		str	r2, [r3]
 634              	.L48:
 635 0084 08BD     		pop	{r3, pc}
 636              	.L59:
 637 0086 00BF     		.align	2
 638              	.L58:
 639 0088 00000000 		.word	.LANCHOR1
 640 008c 00000000 		.word	.LANCHOR0
 641 0090 00000000 		.word	.LANCHOR2
 642              		.cfi_endproc
 643              	.LFE140:
 645              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 646              		.align	2
 647              		.global	HAL_ADC_ConvCpltCallback
 648              		.thumb
 649              		.thumb_func
 651              	HAL_ADC_ConvCpltCallback:
 652              	.LFB141:
 219:Src/freertos.c ****     }
 220:Src/freertos.c **** }
 221:Src/freertos.c **** 
 222:Src/freertos.c **** /* END Fonctions pour les moteurs */
 223:Src/freertos.c **** 
 224:Src/freertos.c **** /* BEGIN Fonctions ADC */
 225:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 653              		.loc 1 225 0
ARM GAS  /tmp/ccXGsRah.s 			page 16


 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              	.LVL55:
 658 0000 08B5     		push	{r3, lr}
 659              	.LCFI11:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 3, -8
 662              		.cfi_offset 14, -4
 226:Src/freertos.c ****     UNUSED(hadc);
 227:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 663              		.loc 1 227 0
 664 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 665              	.LVL56:
 666 0006 034B     		ldr	r3, .L62
 667 0008 1860     		str	r0, [r3]
 228:Src/freertos.c ****     flag_adc = 1;
 668              		.loc 1 228 0
 669 000a 0122     		movs	r2, #1
 670 000c 024B     		ldr	r3, .L62+4
 671 000e 1A60     		str	r2, [r3]
 672 0010 08BD     		pop	{r3, pc}
 673              	.L63:
 674 0012 00BF     		.align	2
 675              	.L62:
 676 0014 00000000 		.word	.LANCHOR3
 677 0018 00000000 		.word	.LANCHOR4
 678              		.cfi_endproc
 679              	.LFE141:
 681              		.section	.text._write,"ax",%progbits
 682              		.align	2
 683              		.global	_write
 684              		.thumb
 685              		.thumb_func
 687              	_write:
 688              	.LFB142:
 229:Src/freertos.c **** }
 230:Src/freertos.c **** 
 231:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 689              		.loc 1 231 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL57:
 694 0000 10B5     		push	{r4, lr}
 695              	.LCFI12:
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 4, -8
 698              		.cfi_offset 14, -4
 699 0002 1446     		mov	r4, r2
 232:Src/freertos.c ****     UNUSED(file);
 233:Src/freertos.c **** 
 234:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 700              		.loc 1 234 0
 701 0004 42F21073 		movw	r3, #10000
 702 0008 92B2     		uxth	r2, r2
 703              	.LVL58:
ARM GAS  /tmp/ccXGsRah.s 			page 17


 704 000a 0248     		ldr	r0, .L66
 705              	.LVL59:
 706 000c FFF7FEFF 		bl	HAL_UART_Transmit
 707              	.LVL60:
 235:Src/freertos.c ****     return len;
 236:Src/freertos.c **** }
 708              		.loc 1 236 0
 709 0010 2046     		mov	r0, r4
 710 0012 10BD     		pop	{r4, pc}
 711              	.LVL61:
 712              	.L67:
 713              		.align	2
 714              	.L66:
 715 0014 00000000 		.word	huart2
 716              		.cfi_endproc
 717              	.LFE142:
 719              		.section	.text.distance,"ax",%progbits
 720              		.align	2
 721              		.global	distance
 722              		.thumb
 723              		.thumb_func
 725              	distance:
 726              	.LFB143:
 237:Src/freertos.c **** 
 238:Src/freertos.c **** int distance() {
 727              		.loc 1 238 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732              	.LVL62:
 239:Src/freertos.c ****     int value = 0;
 240:Src/freertos.c ****     if (adcValue >= 3800) {
 733              		.loc 1 240 0
 734 0000 294B     		ldr	r3, .L99
 735 0002 1B68     		ldr	r3, [r3]
 736 0004 40F6D762 		movw	r2, #3799
 737 0008 9342     		cmp	r3, r2
 738 000a 01D8     		bhi	.L84
 239:Src/freertos.c ****     int value = 0;
 739              		.loc 1 239 0
 740 000c 0020     		movs	r0, #0
 741 000e 00E0     		b	.L69
 742              	.L84:
 241:Src/freertos.c ****         value = 6;
 743              		.loc 1 241 0
 744 0010 0620     		movs	r0, #6
 745              	.L69:
 746              	.LVL63:
 242:Src/freertos.c ****     }
 243:Src/freertos.c ****     if (adcValue >= 3750 && adcValue < 3800) {
 747              		.loc 1 243 0
 748 0012 A3F6A662 		subw	r2, r3, #3750
 749 0016 312A     		cmp	r2, #49
 750 0018 00D8     		bhi	.L70
 244:Src/freertos.c ****         value = 7;
 751              		.loc 1 244 0
ARM GAS  /tmp/ccXGsRah.s 			page 18


 752 001a 0720     		movs	r0, #7
 753              	.LVL64:
 754              	.L70:
 245:Src/freertos.c ****     }
 246:Src/freertos.c ****     if (adcValue >= 3430 && adcValue < 3750) {
 755              		.loc 1 246 0
 756 001c A3F66652 		subw	r2, r3, #3430
 757 0020 B2F5A07F 		cmp	r2, #320
 758 0024 00D2     		bcs	.L71
 247:Src/freertos.c ****         value = 8;
 759              		.loc 1 247 0
 760 0026 0820     		movs	r0, #8
 761              	.LVL65:
 762              	.L71:
 248:Src/freertos.c ****     }
 249:Src/freertos.c ****     if (adcValue >= 3140 && adcValue < 3420) {
 763              		.loc 1 249 0
 764 0028 A3F64442 		subw	r2, r3, #3140
 765 002c B2F58C7F 		cmp	r2, #280
 766 0030 00D2     		bcs	.L72
 250:Src/freertos.c ****         value = 9;
 767              		.loc 1 250 0
 768 0032 0920     		movs	r0, #9
 769              	.LVL66:
 770              	.L72:
 251:Src/freertos.c ****     }
 252:Src/freertos.c ****     if (adcValue >= 2880 && adcValue < 3140) {
 771              		.loc 1 252 0
 772 0034 A3F53462 		sub	r2, r3, #2880
 773 0038 B2F5827F 		cmp	r2, #260
 774 003c 00D2     		bcs	.L73
 253:Src/freertos.c ****         value = 10;
 775              		.loc 1 253 0
 776 003e 0A20     		movs	r0, #10
 777              	.LVL67:
 778              	.L73:
 254:Src/freertos.c ****     }
 255:Src/freertos.c ****     if (adcValue >= 2690 && adcValue < 2880) {
 779              		.loc 1 255 0
 780 0040 A3F68222 		subw	r2, r3, #2690
 781 0044 BD2A     		cmp	r2, #189
 782 0046 00D8     		bhi	.L74
 256:Src/freertos.c ****         value = 11;
 783              		.loc 1 256 0
 784 0048 0B20     		movs	r0, #11
 785              	.LVL68:
 786              	.L74:
 257:Src/freertos.c ****     }
 258:Src/freertos.c ****     if (adcValue >= 2510 && adcValue < 2690) {
 787              		.loc 1 258 0
 788 004a A3F6CE12 		subw	r2, r3, #2510
 789 004e B32A     		cmp	r2, #179
 790 0050 00D8     		bhi	.L75
 259:Src/freertos.c ****         value = 12;
 791              		.loc 1 259 0
 792 0052 0C20     		movs	r0, #12
 793              	.LVL69:
ARM GAS  /tmp/ccXGsRah.s 			page 19


 794              	.L75:
 260:Src/freertos.c ****     }
 261:Src/freertos.c ****     if (adcValue >= 2460 && adcValue < 2510) {
 795              		.loc 1 261 0
 796 0054 A3F69C12 		subw	r2, r3, #2460
 797 0058 312A     		cmp	r2, #49
 798 005a 00D8     		bhi	.L76
 262:Src/freertos.c ****         value = 13;
 799              		.loc 1 262 0
 800 005c 0D20     		movs	r0, #13
 801              	.LVL70:
 802              	.L76:
 263:Src/freertos.c ****     }
 264:Src/freertos.c ****     if (adcValue >= 2250 && adcValue < 2460) {
 803              		.loc 1 264 0
 804 005e A3F6CA02 		subw	r2, r3, #2250
 805 0062 D12A     		cmp	r2, #209
 806 0064 00D8     		bhi	.L77
 265:Src/freertos.c ****         value = 14;
 807              		.loc 1 265 0
 808 0066 0E20     		movs	r0, #14
 809              	.LVL71:
 810              	.L77:
 266:Src/freertos.c ****     }
 267:Src/freertos.c ****     if (adcValue >= 2140 && adcValue < 2250) {
 811              		.loc 1 267 0
 812 0068 A3F65C02 		subw	r2, r3, #2140
 813 006c 6D2A     		cmp	r2, #109
 814 006e 00D8     		bhi	.L78
 268:Src/freertos.c ****         value = 15;
 815              		.loc 1 268 0
 816 0070 0F20     		movs	r0, #15
 817              	.LVL72:
 818              	.L78:
 269:Src/freertos.c ****     }
 270:Src/freertos.c ****     if (adcValue >= 2070 && adcValue < 2140) {
 819              		.loc 1 270 0
 820 0072 A3F61602 		subw	r2, r3, #2070
 821 0076 452A     		cmp	r2, #69
 822 0078 00D8     		bhi	.L79
 271:Src/freertos.c ****         value = 16;
 823              		.loc 1 271 0
 824 007a 1020     		movs	r0, #16
 825              	.LVL73:
 826              	.L79:
 272:Src/freertos.c ****     }
 273:Src/freertos.c ****     if (adcValue >= 1970 && adcValue < 2070) {
 827              		.loc 1 273 0
 828 007c A3F2B272 		subw	r2, r3, #1970
 829 0080 632A     		cmp	r2, #99
 830 0082 00D8     		bhi	.L80
 274:Src/freertos.c ****         value = 17;
 831              		.loc 1 274 0
 832 0084 1120     		movs	r0, #17
 833              	.LVL74:
 834              	.L80:
 275:Src/freertos.c ****     }
ARM GAS  /tmp/ccXGsRah.s 			page 20


 276:Src/freertos.c ****     if (adcValue >= 1910 && adcValue < 1970) {
 835              		.loc 1 276 0
 836 0086 A3F27672 		subw	r2, r3, #1910
 837 008a 3B2A     		cmp	r2, #59
 838 008c 00D8     		bhi	.L81
 277:Src/freertos.c ****         value = 18;
 839              		.loc 1 277 0
 840 008e 1220     		movs	r0, #18
 841              	.LVL75:
 842              	.L81:
 278:Src/freertos.c ****     }
 279:Src/freertos.c ****     if (adcValue >= 1850 && adcValue < 1910) {
 843              		.loc 1 279 0
 844 0090 A3F23A72 		subw	r2, r3, #1850
 845 0094 3B2A     		cmp	r2, #59
 846 0096 00D8     		bhi	.L82
 280:Src/freertos.c ****         value = 19;
 847              		.loc 1 280 0
 848 0098 1320     		movs	r0, #19
 849              	.LVL76:
 850              	.L82:
 281:Src/freertos.c ****     }
 282:Src/freertos.c ****     if (adcValue >= 1780 && adcValue < 1850) {
 851              		.loc 1 282 0
 852 009a A3F2F463 		subw	r3, r3, #1780
 853 009e 452B     		cmp	r3, #69
 854 00a0 00D8     		bhi	.L83
 283:Src/freertos.c ****         value = 20;
 855              		.loc 1 283 0
 856 00a2 1420     		movs	r0, #20
 857              	.LVL77:
 858              	.L83:
 284:Src/freertos.c ****     }
 285:Src/freertos.c ****     return(value);
 286:Src/freertos.c **** }
 859              		.loc 1 286 0
 860 00a4 7047     		bx	lr
 861              	.L100:
 862 00a6 00BF     		.align	2
 863              	.L99:
 864 00a8 00000000 		.word	.LANCHOR3
 865              		.cfi_endproc
 866              	.LFE143:
 868              		.section	.text.estPresent,"ax",%progbits
 869              		.align	2
 870              		.global	estPresent
 871              		.thumb
 872              		.thumb_func
 874              	estPresent:
 875              	.LFB144:
 287:Src/freertos.c **** 
 288:Src/freertos.c **** void estPresent() {
 876              		.loc 1 288 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccXGsRah.s 			page 21


 881              	.LCFI13:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 3, -8
 884              		.cfi_offset 14, -4
 289:Src/freertos.c ****     int value;
 290:Src/freertos.c ****     value = distance();
 885              		.loc 1 290 0
 886 0002 FFF7FEFF 		bl	distance
 887              	.LVL78:
 291:Src/freertos.c ****     if (value != 0 && value <= 20) {
 888              		.loc 1 291 0
 889 0006 20B1     		cbz	r0, .L101
 890              		.loc 1 291 0 is_stmt 0 discriminator 1
 891 0008 1428     		cmp	r0, #20
 892 000a 02DC     		bgt	.L101
 292:Src/freertos.c ****         flag_present = 1;
 893              		.loc 1 292 0 is_stmt 1
 894 000c 0122     		movs	r2, #1
 895 000e 014B     		ldr	r3, .L104
 896 0010 1A60     		str	r2, [r3]
 897              	.L101:
 898 0012 08BD     		pop	{r3, pc}
 899              	.L105:
 900              		.align	2
 901              	.L104:
 902 0014 00000000 		.word	.LANCHOR5
 903              		.cfi_endproc
 904              	.LFE144:
 906              		.section	.text.EnvoiMessage,"ax",%progbits
 907              		.align	2
 908              		.global	EnvoiMessage
 909              		.thumb
 910              		.thumb_func
 912              	EnvoiMessage:
 913              	.LFB145:
 293:Src/freertos.c ****     }
 294:Src/freertos.c **** }
 295:Src/freertos.c **** 
 296:Src/freertos.c **** /* END Fonctions ADC */
 297:Src/freertos.c **** 
 298:Src/freertos.c **** /* BEGIN Fonctions UART */
 299:Src/freertos.c **** void EnvoiMessage(uint8_t data){
 914              		.loc 1 299 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 8
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              	.LVL79:
 919 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 920              	.LCFI14:
 921              		.cfi_def_cfa_offset 32
 922              		.cfi_offset 4, -32
 923              		.cfi_offset 5, -28
 924              		.cfi_offset 6, -24
 925              		.cfi_offset 7, -20
 926              		.cfi_offset 8, -16
 927              		.cfi_offset 9, -12
 928              		.cfi_offset 10, -8
ARM GAS  /tmp/ccXGsRah.s 			page 22


 929              		.cfi_offset 14, -4
 930 0004 82B0     		sub	sp, sp, #8
 931              	.LCFI15:
 932              		.cfi_def_cfa_offset 40
 300:Src/freertos.c ****     uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit, k, 
 301:Src/freertos.c **** 
 302:Src/freertos.c ****     eun = (data & 0x01);
 933              		.loc 1 302 0
 934 0006 00F00107 		and	r7, r0, #1
 935              	.LVL80:
 303:Src/freertos.c ****     edeux = (data & 0x02)/2;
 936              		.loc 1 303 0
 937 000a C0F34005 		ubfx	r5, r0, #1, #1
 938              	.LVL81:
 304:Src/freertos.c ****     equatre =(data & 0x04)/4;
 939              		.loc 1 304 0
 940 000e 00F00403 		and	r3, r0, #4
 941 0012 DBB2     		uxtb	r3, r3
 942 0014 0033     		adds	r3, r3, #0
 943 0016 18BF     		it	ne
 944 0018 0123     		movne	r3, #1
 945              	.LVL82:
 305:Src/freertos.c ****     ehuit = (data & 0x08)/8;
 946              		.loc 1 305 0
 947 001a 00F00801 		and	r1, r0, #8
 948 001e C9B2     		uxtb	r1, r1
 949 0020 C910     		asrs	r1, r1, #3
 950 0022 CEB2     		uxtb	r6, r1
 951              	.LVL83:
 306:Src/freertos.c ****     eseize = (data & 0x10)/16;
 952              		.loc 1 306 0
 953 0024 00F01004 		and	r4, r0, #16
 954 0028 E4B2     		uxtb	r4, r4
 955 002a 2411     		asrs	r4, r4, #4
 956 002c 5FFA84F8 		uxtb	r8, r4
 957              	.LVL84:
 307:Src/freertos.c ****     etrentedeux = (data & 0x20)/32;
 958              		.loc 1 307 0
 959 0030 00F02002 		and	r2, r0, #32
 960 0034 D2B2     		uxtb	r2, r2
 961 0036 0032     		adds	r2, r2, #0
 962 0038 18BF     		it	ne
 963 003a 0122     		movne	r2, #1
 964              	.LVL85:
 308:Src/freertos.c ****     esoixantequatre = (data & 0x40)/64;
 965              		.loc 1 308 0
 966 003c 00F04009 		and	r9, r0, #64
 967 0040 5FFA89F9 		uxtb	r9, r9
 968 0044 4FEAA919 		asr	r9, r9, #6
 969 0048 5FFA89FC 		uxtb	ip, r9
 970              	.LVL86:
 309:Src/freertos.c ****     ecentvingthuit = (data & 0x80)/128;
 971              		.loc 1 309 0
 972 004c 00F08000 		and	r0, r0, #128
 973              	.LVL87:
 974 0050 0030     		adds	r0, r0, #0
 975 0052 18BF     		it	ne
ARM GAS  /tmp/ccXGsRah.s 			page 23


 976 0054 0120     		movne	r0, #1
 977              	.LVL88:
 310:Src/freertos.c **** 
 311:Src/freertos.c ****     b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequatre^e
 978              		.loc 1 311 0
 979 0056 82EA000A 		eor	r10, r2, r0
 980 005a 8CEA000E 		eor	lr, ip, r0
 981 005e 0EEB4A0E 		add	lr, lr, r10, lsl #1
 982 0062 82EA0C0C 		eor	ip, r2, ip
 983              	.LVL89:
 984 0066 0CEB4E0E 		add	lr, ip, lr, lsl #1
 985 006a 00EB4E00 		add	r0, r0, lr, lsl #1
 986              	.LVL90:
 987 006e 09EB4000 		add	r0, r9, r0, lsl #1
 988 0072 02EB4000 		add	r0, r2, r0, lsl #1
 989 0076 8DF80700 		strb	r0, [sp, #7]
 312:Src/freertos.c ****     k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + equatr
 990              		.loc 1 312 0
 991 007a 83EA0800 		eor	r0, r3, r8
 992 007e 86EA0802 		eor	r2, r6, r8
 993              	.LVL91:
 994 0082 02EB4002 		add	r2, r2, r0, lsl #1
 995 0086 5E40     		eors	r6, r6, r3
 996              	.LVL92:
 997 0088 06EB4206 		add	r6, r6, r2, lsl #1
 998 008c 04EB4606 		add	r6, r4, r6, lsl #1
 999 0090 01EB4601 		add	r1, r1, r6, lsl #1
 1000              	.LVL93:
 1001 0094 03EB4103 		add	r3, r3, r1, lsl #1
 1002              	.LVL94:
 1003 0098 8DF80630 		strb	r3, [sp, #6]
 1004 009c EBB2     		uxtb	r3, r5
 313:Src/freertos.c ****     z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 1005              		.loc 1 313 0
 1006 009e 03EB4702 		add	r2, r3, r7, lsl #1
 1007 00a2 7D40     		eors	r5, r5, r7
 1008              	.LVL95:
 1009 00a4 05EB4205 		add	r5, r5, r2, lsl #1
 1010 00a8 03EB8505 		add	r5, r3, r5, lsl #2
 1011 00ac 07EB4507 		add	r7, r7, r5, lsl #1
 1012              	.LVL96:
 1013 00b0 8DF80570 		strb	r7, [sp, #5]
 314:Src/freertos.c **** 
 315:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 1014              		.loc 1 315 0
 1015 00b4 124C     		ldr	r4, .L114
 1016 00b6 4EF6EE63 		movw	r3, #61166
 1017              	.LVL97:
 1018 00ba 0122     		movs	r2, #1
 1019 00bc 0DF10701 		add	r1, sp, #7
 1020 00c0 2046     		mov	r0, r4
 1021 00c2 FFF7FEFF 		bl	HAL_UART_Transmit
 1022              	.LVL98:
 316:Src/freertos.c ****     osDelay(2);
 1023              		.loc 1 316 0
 1024 00c6 0220     		movs	r0, #2
 1025 00c8 FFF7FEFF 		bl	osDelay
ARM GAS  /tmp/ccXGsRah.s 			page 24


 1026              	.LVL99:
 317:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 1027              		.loc 1 317 0
 1028 00cc 4EF6EE63 		movw	r3, #61166
 1029 00d0 0122     		movs	r2, #1
 1030 00d2 0DF10601 		add	r1, sp, #6
 1031 00d6 2046     		mov	r0, r4
 1032 00d8 FFF7FEFF 		bl	HAL_UART_Transmit
 1033              	.LVL100:
 318:Src/freertos.c ****     osDelay(2);
 1034              		.loc 1 318 0
 1035 00dc 0220     		movs	r0, #2
 1036 00de FFF7FEFF 		bl	osDelay
 1037              	.LVL101:
 319:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 1038              		.loc 1 319 0
 1039 00e2 4EF6EE63 		movw	r3, #61166
 1040 00e6 0122     		movs	r2, #1
 1041 00e8 0DF10501 		add	r1, sp, #5
 1042 00ec 2046     		mov	r0, r4
 1043 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 1044              	.LVL102:
 320:Src/freertos.c ****     osDelay(2);
 1045              		.loc 1 320 0
 1046 00f2 0220     		movs	r0, #2
 1047 00f4 FFF7FEFF 		bl	osDelay
 1048              	.LVL103:
 321:Src/freertos.c **** }
 1049              		.loc 1 321 0
 1050 00f8 02B0     		add	sp, sp, #8
 1051              	.LCFI16:
 1052              		.cfi_def_cfa_offset 32
 1053              		@ sp needed
 1054 00fa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1055              	.LVL104:
 1056              	.L115:
 1057 00fe 00BF     		.align	2
 1058              	.L114:
 1059 0100 00000000 		.word	huart1
 1060              		.cfi_endproc
 1061              	.LFE145:
 1063              		.section	.text.ReceptionMessage,"ax",%progbits
 1064              		.align	2
 1065              		.global	ReceptionMessage
 1066              		.thumb
 1067              		.thumb_func
 1069              	ReceptionMessage:
 1070              	.LFB146:
 322:Src/freertos.c **** 
 323:Src/freertos.c **** int ReceptionMessage(){
 1071              		.loc 1 323 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 8
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1076              	.LCFI17:
 1077              		.cfi_def_cfa_offset 28
ARM GAS  /tmp/ccXGsRah.s 			page 25


 1078              		.cfi_offset 4, -28
 1079              		.cfi_offset 5, -24
 1080              		.cfi_offset 6, -20
 1081              		.cfi_offset 7, -16
 1082              		.cfi_offset 8, -12
 1083              		.cfi_offset 9, -8
 1084              		.cfi_offset 14, -4
 1085 0004 83B0     		sub	sp, sp, #12
 1086              	.LCFI18:
 1087              		.cfi_def_cfa_offset 40
 324:Src/freertos.c ****     uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 325:Src/freertos.c ****     uint8_t rec[3];
 326:Src/freertos.c ****     HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 1088              		.loc 1 326 0
 1089 0006 414C     		ldr	r4, .L134
 1090 0008 4EF6EE63 		movw	r3, #61166
 1091 000c 0122     		movs	r2, #1
 1092 000e 0DF10701 		add	r1, sp, #7
 1093 0012 2046     		mov	r0, r4
 1094 0014 FFF7FEFF 		bl	HAL_UART_Receive
 1095              	.LVL105:
 327:Src/freertos.c ****     HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
 1096              		.loc 1 327 0
 1097 0018 4EF6EE63 		movw	r3, #61166
 1098 001c 0122     		movs	r2, #1
 1099 001e 0DF10601 		add	r1, sp, #6
 1100 0022 2046     		mov	r0, r4
 1101 0024 FFF7FEFF 		bl	HAL_UART_Receive
 1102              	.LVL106:
 328:Src/freertos.c ****     HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 1103              		.loc 1 328 0
 1104 0028 4EF6EE63 		movw	r3, #61166
 1105 002c 0122     		movs	r2, #1
 1106 002e 0DF10501 		add	r1, sp, #5
 1107 0032 2046     		mov	r0, r4
 1108 0034 FFF7FEFF 		bl	HAL_UART_Receive
 1109              	.LVL107:
 329:Src/freertos.c **** 
 330:Src/freertos.c ****     rec[0] = r;
 1110              		.loc 1 330 0
 1111 0038 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 1112 003c 8DF800C0 		strb	ip, [sp]
 331:Src/freertos.c ****     rec[1] = m;
 1113              		.loc 1 331 0
 1114 0040 9DF80660 		ldrb	r6, [sp, #6]	@ zero_extendqisi2
 1115 0044 8DF80160 		strb	r6, [sp, #1]
 332:Src/freertos.c ****     rec[2] = n;
 1116              		.loc 1 332 0
 1117 0048 9DF80570 		ldrb	r7, [sp, #5]	@ zero_extendqisi2
 1118 004c 8DF80270 		strb	r7, [sp, #2]
 1119              	.LVL108:
 333:Src/freertos.c ****     ok = 1;
 334:Src/freertos.c ****     for (i =0; i<3; i++) {
 1120              		.loc 1 334 0
 1121 0050 0024     		movs	r4, #0
 333:Src/freertos.c ****     ok = 1;
 1122              		.loc 1 333 0
ARM GAS  /tmp/ccXGsRah.s 			page 26


 1123 0052 0125     		movs	r5, #1
 1124              		.loc 1 334 0
 1125 0054 30E0     		b	.L117
 1126              	.LVL109:
 1127              	.L125:
 335:Src/freertos.c ****         run = (rec[i] & 0x01);
 1128              		.loc 1 335 0
 1129 0056 02AB     		add	r3, sp, #8
 1130 0058 2344     		add	r3, r3, r4
 1131 005a 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1132 005e 03F00108 		and	r8, r3, #1
 1133              	.LVL110:
 336:Src/freertos.c ****         rdeux = (rec[i] & 0x02)/2;
 1134              		.loc 1 336 0
 1135 0062 C3F3400E 		ubfx	lr, r3, #1, #1
 1136              	.LVL111:
 337:Src/freertos.c ****         rquatre =(rec[i] & 0x04)/4;
 1137              		.loc 1 337 0
 1138 0066 03F00402 		and	r2, r3, #4
 1139 006a D2B2     		uxtb	r2, r2
 1140 006c 0032     		adds	r2, r2, #0
 1141 006e 18BF     		it	ne
 1142 0070 0122     		movne	r2, #1
 1143              	.LVL112:
 338:Src/freertos.c ****         rhuit = (rec[i] & 0x08)/8;
 1144              		.loc 1 338 0
 1145 0072 03F00801 		and	r1, r3, #8
 1146 0076 C9B2     		uxtb	r1, r1
 1147 0078 0031     		adds	r1, r1, #0
 1148 007a 18BF     		it	ne
 1149 007c 0121     		movne	r1, #1
 1150              	.LVL113:
 339:Src/freertos.c ****         rseize = (rec[i] & 0x10)/16;
 1151              		.loc 1 339 0
 1152 007e 03F01000 		and	r0, r3, #16
 1153 0082 C0B2     		uxtb	r0, r0
 1154 0084 0030     		adds	r0, r0, #0
 1155 0086 18BF     		it	ne
 1156 0088 0120     		movne	r0, #1
 1157              	.LVL114:
 340:Src/freertos.c ****         rtrentedeux = (rec[i] & 0x20)/32;
 1158              		.loc 1 340 0
 1159 008a 03F02003 		and	r3, r3, #32
 1160 008e DBB2     		uxtb	r3, r3
 1161 0090 0033     		adds	r3, r3, #0
 1162 0092 18BF     		it	ne
 1163 0094 0123     		movne	r3, #1
 1164              	.LVL115:
 341:Src/freertos.c ****         if ((run^rdeux) != rhuit) ok =0;
 1165              		.loc 1 341 0
 1166 0096 88EA0E09 		eor	r9, r8, lr
 1167 009a 4945     		cmp	r1, r9
 1168 009c 00D0     		beq	.L122
 1169 009e 0025     		movs	r5, #0
 1170              	.LVL116:
 1171              	.L122:
 342:Src/freertos.c ****         if ((rdeux^rquatre) != rseize) ok =0;
ARM GAS  /tmp/ccXGsRah.s 			page 27


 1172              		.loc 1 342 0
 1173 00a0 8EEA020E 		eor	lr, lr, r2
 1174              	.LVL117:
 1175 00a4 7045     		cmp	r0, lr
 1176 00a6 00D0     		beq	.L123
 1177 00a8 0025     		movs	r5, #0
 1178              	.LVL118:
 1179              	.L123:
 343:Src/freertos.c ****         if ((rquatre^run) != rtrentedeux) ok = 0;
 1180              		.loc 1 343 0
 1181 00aa 88EA0202 		eor	r2, r8, r2
 1182              	.LVL119:
 1183 00ae 9342     		cmp	r3, r2
 1184 00b0 00D0     		beq	.L124
 1185 00b2 0025     		movs	r5, #0
 1186              	.LVL120:
 1187              	.L124:
 334:Src/freertos.c ****         run = (rec[i] & 0x01);
 1188              		.loc 1 334 0 discriminator 2
 1189 00b4 0134     		adds	r4, r4, #1
 1190              	.LVL121:
 1191 00b6 E4B2     		uxtb	r4, r4
 1192              	.LVL122:
 1193              	.L117:
 334:Src/freertos.c ****         run = (rec[i] & 0x01);
 1194              		.loc 1 334 0 is_stmt 0 discriminator 1
 1195 00b8 022C     		cmp	r4, #2
 1196 00ba CCD9     		bls	.L125
 344:Src/freertos.c ****     }
 345:Src/freertos.c ****     r =  (r & 0x07)*32;
 1197              		.loc 1 345 0 is_stmt 1
 1198 00bc 0CF0070C 		and	ip, ip, #7
 1199 00c0 4FEA4C1C 		lsl	ip, ip, #5
 1200 00c4 8DF807C0 		strb	ip, [sp, #7]
 346:Src/freertos.c ****     m =  (m & 0x07)*4;
 1201              		.loc 1 346 0
 1202 00c8 06F00702 		and	r2, r6, #7
 1203 00cc 9300     		lsls	r3, r2, #2
 1204 00ce 8DF80630 		strb	r3, [sp, #6]
 347:Src/freertos.c ****     n =  (n & 0x07);
 1205              		.loc 1 347 0
 1206 00d2 07F00707 		and	r7, r7, #7
 1207 00d6 8DF80570 		strb	r7, [sp, #5]
 348:Src/freertos.c ****     v =  r + m + n;
 1208              		.loc 1 348 0
 1209 00da 6344     		add	r3, r3, ip
 1210 00dc 3B44     		add	r3, r3, r7
 1211 00de DCB2     		uxtb	r4, r3
 1212              	.LVL123:
 349:Src/freertos.c ****     if (ok == 1) {
 1213              		.loc 1 349 0
 1214 00e0 65B9     		cbnz	r5, .L132
 350:Src/freertos.c ****         for (i = 0; i<5; i++)
 351:Src/freertos.c ****         {
 352:Src/freertos.c ****             HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 353:Src/freertos.c ****             osDelay(500);
 354:Src/freertos.c ****         }
ARM GAS  /tmp/ccXGsRah.s 			page 28


 355:Src/freertos.c ****         return(v);
 356:Src/freertos.c ****     }
 357:Src/freertos.c ****     else return(0);
 1215              		.loc 1 357 0
 1216 00e2 0020     		movs	r0, #0
 1217 00e4 0EE0     		b	.L127
 1218              	.LVL124:
 1219              	.L128:
 352:Src/freertos.c ****             osDelay(500);
 1220              		.loc 1 352 0 discriminator 3
 1221 00e6 4021     		movs	r1, #64
 1222 00e8 0948     		ldr	r0, .L134+4
 1223 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1224              	.LVL125:
 353:Src/freertos.c ****         }
 1225              		.loc 1 353 0 discriminator 3
 1226 00ee 4FF4FA70 		mov	r0, #500
 1227 00f2 FFF7FEFF 		bl	osDelay
 1228              	.LVL126:
 350:Src/freertos.c ****         for (i = 0; i<5; i++)
 1229              		.loc 1 350 0 discriminator 3
 1230 00f6 0135     		adds	r5, r5, #1
 1231              	.LVL127:
 1232 00f8 EDB2     		uxtb	r5, r5
 1233              	.LVL128:
 1234 00fa 00E0     		b	.L126
 1235              	.LVL129:
 1236              	.L132:
 1237 00fc 0025     		movs	r5, #0
 1238              	.LVL130:
 1239              	.L126:
 350:Src/freertos.c ****         for (i = 0; i<5; i++)
 1240              		.loc 1 350 0 is_stmt 0 discriminator 1
 1241 00fe 042D     		cmp	r5, #4
 1242 0100 F1D9     		bls	.L128
 355:Src/freertos.c ****     }
 1243              		.loc 1 355 0 is_stmt 1
 1244 0102 2046     		mov	r0, r4
 1245              	.LVL131:
 1246              	.L127:
 358:Src/freertos.c **** }
 1247              		.loc 1 358 0
 1248 0104 03B0     		add	sp, sp, #12
 1249              	.LCFI19:
 1250              		.cfi_def_cfa_offset 28
 1251              		@ sp needed
 1252 0106 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1253              	.LVL132:
 1254              	.L135:
 1255 010a 00BF     		.align	2
 1256              	.L134:
 1257 010c 00000000 		.word	huart1
 1258 0110 00040048 		.word	1207960576
 1259              		.cfi_endproc
 1260              	.LFE146:
 1262              		.section	.text.recoitpos,"ax",%progbits
 1263              		.align	2
ARM GAS  /tmp/ccXGsRah.s 			page 29


 1264              		.global	recoitpos
 1265              		.thumb
 1266              		.thumb_func
 1268              	recoitpos:
 1269              	.LFB147:
 359:Src/freertos.c **** 
 360:Src/freertos.c **** void recoitpos(){
 1270              		.loc 1 360 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274 0000 38B5     		push	{r3, r4, r5, lr}
 1275              	.LCFI20:
 1276              		.cfi_def_cfa_offset 16
 1277              		.cfi_offset 3, -16
 1278              		.cfi_offset 4, -12
 1279              		.cfi_offset 5, -8
 1280              		.cfi_offset 14, -4
 361:Src/freertos.c ****     uint8_t a, x, y, c;
 362:Src/freertos.c ****     a = ReceptionMessage();
 1281              		.loc 1 362 0
 1282 0002 FFF7FEFF 		bl	ReceptionMessage
 1283              	.LVL133:
 1284 0006 C0B2     		uxtb	r0, r0
 1285              	.LVL134:
 363:Src/freertos.c ****     x = a & 0xF0;
 1286              		.loc 1 363 0
 1287 0008 00F0F005 		and	r5, r0, #240
 1288              	.LVL135:
 364:Src/freertos.c ****     y = a & 0x0F;
 1289              		.loc 1 364 0
 1290 000c 00F00F04 		and	r4, r0, #15
 1291              	.LVL136:
 365:Src/freertos.c ****     c = ReceptionMessage();
 1292              		.loc 1 365 0
 1293 0010 FFF7FEFF 		bl	ReceptionMessage
 1294              	.LVL137:
 366:Src/freertos.c ****     robot2.posx = x;
 1295              		.loc 1 366 0
 1296 0014 024B     		ldr	r3, .L138
 1297 0016 1D60     		str	r5, [r3]
 367:Src/freertos.c ****     robot2.posy = y;
 1298              		.loc 1 367 0
 1299 0018 5C60     		str	r4, [r3, #4]
 368:Src/freertos.c ****     robot2.orientation = c;
 1300              		.loc 1 368 0
 1301 001a C0B2     		uxtb	r0, r0
 1302 001c 9860     		str	r0, [r3, #8]
 1303 001e 38BD     		pop	{r3, r4, r5, pc}
 1304              	.LVL138:
 1305              	.L139:
 1306              		.align	2
 1307              	.L138:
 1308 0020 00000000 		.word	robot2
 1309              		.cfi_endproc
 1310              	.LFE147:
 1312              		.section	.text.envoipos,"ax",%progbits
ARM GAS  /tmp/ccXGsRah.s 			page 30


 1313              		.align	2
 1314              		.global	envoipos
 1315              		.thumb
 1316              		.thumb_func
 1318              	envoipos:
 1319              	.LFB148:
 369:Src/freertos.c **** }
 370:Src/freertos.c **** 
 371:Src/freertos.c **** void envoipos(uint8_t x, uint8_t y , uint8_t c){
 1320              		.loc 1 371 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              	.LVL139:
 1325 0000 10B5     		push	{r4, lr}
 1326              	.LCFI21:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 4, -8
 1329              		.cfi_offset 14, -4
 1330 0002 1446     		mov	r4, r2
 372:Src/freertos.c ****      x = x*16 + y;
 1331              		.loc 1 372 0
 1332 0004 0001     		lsls	r0, r0, #4
 1333              	.LVL140:
 1334 0006 C0B2     		uxtb	r0, r0
 1335 0008 0844     		add	r0, r0, r1
 1336              	.LVL141:
 373:Src/freertos.c ****      EnvoiMessage(x);
 1337              		.loc 1 373 0
 1338 000a C0B2     		uxtb	r0, r0
 1339 000c FFF7FEFF 		bl	EnvoiMessage
 1340              	.LVL142:
 374:Src/freertos.c ****      EnvoiMessage(c);
 1341              		.loc 1 374 0
 1342 0010 2046     		mov	r0, r4
 1343 0012 FFF7FEFF 		bl	EnvoiMessage
 1344              	.LVL143:
 1345 0016 10BD     		pop	{r4, pc}
 1346              		.cfi_endproc
 1347              	.LFE148:
 1349              		.section	.text.Traduction,"ax",%progbits
 1350              		.align	2
 1351              		.global	Traduction
 1352              		.thumb
 1353              		.thumb_func
 1355              	Traduction:
 1356              	.LFB149:
 375:Src/freertos.c **** }
 376:Src/freertos.c **** 
 377:Src/freertos.c **** void Traduction(uint8_t msg){
 1357              		.loc 1 377 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 0
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
 1361              	.LVL144:
 1362 0000 10B5     		push	{r4, lr}
 1363              	.LCFI22:
ARM GAS  /tmp/ccXGsRah.s 			page 31


 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 1367 0002 0446     		mov	r4, r0
 378:Src/freertos.c ****     if (msg == 0x05) {
 1368              		.loc 1 378 0
 1369 0004 0528     		cmp	r0, #5
 1370 0006 05D1     		bne	.L143
 379:Src/freertos.c ****        envoipos(robot1.posx, robot1.posy, robot1.orientation);
 1371              		.loc 1 379 0
 1372 0008 174B     		ldr	r3, .L150
 1373 000a 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1374 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1375 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1376              	.LVL145:
 1377 0010 FFF7FEFF 		bl	envoipos
 1378              	.LVL146:
 1379              	.L143:
 380:Src/freertos.c ****     }
 381:Src/freertos.c **** 
 382:Src/freertos.c ****     if (msg == 0x06) {
 383:Src/freertos.c **** 
 384:Src/freertos.c ****     }
 385:Src/freertos.c **** 
 386:Src/freertos.c ****     if (msg == 0x07) {
 1380              		.loc 1 386 0
 1381 0014 072C     		cmp	r4, #7
 1382 0016 02D1     		bne	.L144
 387:Src/freertos.c ****         flag_haut = 1;
 1383              		.loc 1 387 0
 1384 0018 0122     		movs	r2, #1
 1385 001a 144B     		ldr	r3, .L150+4
 1386 001c 1A60     		str	r2, [r3]
 1387              	.L144:
 388:Src/freertos.c ****     }
 389:Src/freertos.c **** 
 390:Src/freertos.c ****     if (msg == 0x08) {
 1388              		.loc 1 390 0
 1389 001e 082C     		cmp	r4, #8
 1390 0020 02D1     		bne	.L145
 391:Src/freertos.c ****         flag_bas = 1;
 1391              		.loc 1 391 0
 1392 0022 0122     		movs	r2, #1
 1393 0024 124B     		ldr	r3, .L150+8
 1394 0026 1A60     		str	r2, [r3]
 1395              	.L145:
 392:Src/freertos.c ****     }
 393:Src/freertos.c **** 
 394:Src/freertos.c ****     if (msg == 0x09) {
 1396              		.loc 1 394 0
 1397 0028 092C     		cmp	r4, #9
 1398 002a 02D1     		bne	.L146
 395:Src/freertos.c ****         flag_droite = 1;
 1399              		.loc 1 395 0
 1400 002c 0122     		movs	r2, #1
 1401 002e 114B     		ldr	r3, .L150+12
 1402 0030 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccXGsRah.s 			page 32


 1403              	.L146:
 396:Src/freertos.c ****     }
 397:Src/freertos.c **** 
 398:Src/freertos.c ****     if (msg == 0x0A) {
 1404              		.loc 1 398 0
 1405 0032 0A2C     		cmp	r4, #10
 1406 0034 02D1     		bne	.L147
 399:Src/freertos.c ****         flag_gauche = 1;
 1407              		.loc 1 399 0
 1408 0036 0122     		movs	r2, #1
 1409 0038 0F4B     		ldr	r3, .L150+16
 1410 003a 1A60     		str	r2, [r3]
 1411              	.L147:
 400:Src/freertos.c ****     }
 401:Src/freertos.c **** 
 402:Src/freertos.c ****     if (msg == 0x0B) {
 403:Src/freertos.c ****     }
 404:Src/freertos.c **** 
 405:Src/freertos.c ****     if (msg == 0x0C) {
 406:Src/freertos.c ****     }
 407:Src/freertos.c **** 
 408:Src/freertos.c ****     if (msg == 0x0D) {
 1412              		.loc 1 408 0
 1413 003c 0D2C     		cmp	r4, #13
 1414 003e 12D1     		bne	.L142
 1415              	.LBB2:
 409:Src/freertos.c ****         uint8_t a;
 410:Src/freertos.c ****         srand(time(NULL));
 1416              		.loc 1 410 0
 1417 0040 0020     		movs	r0, #0
 1418 0042 FFF7FEFF 		bl	time
 1419              	.LVL147:
 1420 0046 FFF7FEFF 		bl	srand
 1421              	.LVL148:
 411:Src/freertos.c ****         a = rand()%100;
 1422              		.loc 1 411 0
 1423 004a FFF7FEFF 		bl	rand
 1424              	.LVL149:
 1425 004e 0B4B     		ldr	r3, .L150+20
 1426 0050 83FB0032 		smull	r3, r2, r3, r0
 1427 0054 C317     		asrs	r3, r0, #31
 1428 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1429 005a 6422     		movs	r2, #100
 1430 005c 02FB1303 		mls	r3, r2, r3, r0
 1431              	.LVL150:
 412:Src/freertos.c ****         EnvoiMessage(a);
 1432              		.loc 1 412 0
 1433 0060 D8B2     		uxtb	r0, r3
 1434 0062 FFF7FEFF 		bl	EnvoiMessage
 1435              	.LVL151:
 1436              	.L142:
 1437 0066 10BD     		pop	{r4, pc}
 1438              	.L151:
 1439              		.align	2
 1440              	.L150:
 1441 0068 00000000 		.word	robot1
 1442 006c 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccXGsRah.s 			page 33


 1443 0070 00000000 		.word	.LANCHOR7
 1444 0074 00000000 		.word	.LANCHOR8
 1445 0078 00000000 		.word	.LANCHOR9
 1446 007c 1F85EB51 		.word	1374389535
 1447              	.LBE2:
 1448              		.cfi_endproc
 1449              	.LFE149:
 1451              		.section	.text.WaitFor,"ax",%progbits
 1452              		.align	2
 1453              		.global	WaitFor
 1454              		.thumb
 1455              		.thumb_func
 1457              	WaitFor:
 1458              	.LFB150:
 413:Src/freertos.c ****     }
 414:Src/freertos.c **** 
 415:Src/freertos.c ****     if (msg == 0x10) {
 416:Src/freertos.c ****     }
 417:Src/freertos.c **** 
 418:Src/freertos.c ****     if (msg == 0x11) {
 419:Src/freertos.c ****     }
 420:Src/freertos.c **** 
 421:Src/freertos.c ****     if (msg == 0x12) {
 422:Src/freertos.c ****     }
 423:Src/freertos.c **** 
 424:Src/freertos.c ****     if (msg == 0x13) {
 425:Src/freertos.c ****     }
 426:Src/freertos.c **** }
 427:Src/freertos.c **** 
 428:Src/freertos.c **** void WaitFor(uint8_t z) {
 1459              		.loc 1 428 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 0
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 1463              	.LVL152:
 1464 0000 10B5     		push	{r4, lr}
 1465              	.LCFI23:
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 4, -8
 1468              		.cfi_offset 14, -4
 1469 0002 0446     		mov	r4, r0
 1470              	.LVL153:
 1471              	.L153:
 429:Src/freertos.c ****     while (z != ReceptionMessage()) ;
 1472              		.loc 1 429 0 discriminator 1
 1473 0004 FFF7FEFF 		bl	ReceptionMessage
 1474              	.LVL154:
 1475 0008 8442     		cmp	r4, r0
 1476 000a FBD1     		bne	.L153
 430:Src/freertos.c **** }
 1477              		.loc 1 430 0
 1478 000c 10BD     		pop	{r4, pc}
 1479              		.cfi_endproc
 1480              	.LFE150:
 1482 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1483              		.align	2
 1484              		.global	TaPosition
ARM GAS  /tmp/ccXGsRah.s 			page 34


 1485              		.thumb
 1486              		.thumb_func
 1488              	TaPosition:
 1489              	.LFB151:
 431:Src/freertos.c **** 
 432:Src/freertos.c **** void TaPosition() {
 1490              		.loc 1 432 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494 0000 08B5     		push	{r3, lr}
 1495              	.LCFI24:
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 3, -8
 1498              		.cfi_offset 14, -4
 433:Src/freertos.c ****     EnvoiMessage(0x05);
 1499              		.loc 1 433 0
 1500 0002 0520     		movs	r0, #5
 1501 0004 FFF7FEFF 		bl	EnvoiMessage
 1502              	.LVL155:
 1503 0008 08BD     		pop	{r3, pc}
 1504              		.cfi_endproc
 1505              	.LFE151:
 1507 000a 00BF     		.section	.text.ok,"ax",%progbits
 1508              		.align	2
 1509              		.global	ok
 1510              		.thumb
 1511              		.thumb_func
 1513              	ok:
 1514              	.LFB152:
 434:Src/freertos.c **** }
 435:Src/freertos.c **** 
 436:Src/freertos.c **** void ok() {
 1515              		.loc 1 436 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519 0000 08B5     		push	{r3, lr}
 1520              	.LCFI25:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 3, -8
 1523              		.cfi_offset 14, -4
 437:Src/freertos.c ****     EnvoiMessage(0x06);
 1524              		.loc 1 437 0
 1525 0002 0620     		movs	r0, #6
 1526 0004 FFF7FEFF 		bl	EnvoiMessage
 1527              	.LVL156:
 1528 0008 08BD     		pop	{r3, pc}
 1529              		.cfi_endproc
 1530              	.LFE152:
 1532 000a 00BF     		.section	.text.Monte,"ax",%progbits
 1533              		.align	2
 1534              		.global	Monte
 1535              		.thumb
 1536              		.thumb_func
 1538              	Monte:
 1539              	.LFB153:
ARM GAS  /tmp/ccXGsRah.s 			page 35


 438:Src/freertos.c **** }
 439:Src/freertos.c **** 
 440:Src/freertos.c **** void Monte() {
 1540              		.loc 1 440 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 0
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544 0000 08B5     		push	{r3, lr}
 1545              	.LCFI26:
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 3, -8
 1548              		.cfi_offset 14, -4
 441:Src/freertos.c ****     EnvoiMessage(0x07);
 1549              		.loc 1 441 0
 1550 0002 0720     		movs	r0, #7
 1551 0004 FFF7FEFF 		bl	EnvoiMessage
 1552              	.LVL157:
 442:Src/freertos.c ****     WaitFor(0x06);
 1553              		.loc 1 442 0
 1554 0008 0620     		movs	r0, #6
 1555 000a FFF7FEFF 		bl	WaitFor
 1556              	.LVL158:
 1557 000e 08BD     		pop	{r3, pc}
 1558              		.cfi_endproc
 1559              	.LFE153:
 1561              		.section	.text.Descend,"ax",%progbits
 1562              		.align	2
 1563              		.global	Descend
 1564              		.thumb
 1565              		.thumb_func
 1567              	Descend:
 1568              	.LFB154:
 443:Src/freertos.c **** }
 444:Src/freertos.c **** 
 445:Src/freertos.c **** void Descend() {
 1569              		.loc 1 445 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573 0000 08B5     		push	{r3, lr}
 1574              	.LCFI27:
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 3, -8
 1577              		.cfi_offset 14, -4
 446:Src/freertos.c ****     EnvoiMessage(0x08);
 1578              		.loc 1 446 0
 1579 0002 0820     		movs	r0, #8
 1580 0004 FFF7FEFF 		bl	EnvoiMessage
 1581              	.LVL159:
 447:Src/freertos.c ****     WaitFor(0x06);
 1582              		.loc 1 447 0
 1583 0008 0620     		movs	r0, #6
 1584 000a FFF7FEFF 		bl	WaitFor
 1585              	.LVL160:
 1586 000e 08BD     		pop	{r3, pc}
 1587              		.cfi_endproc
 1588              	.LFE154:
ARM GAS  /tmp/ccXGsRah.s 			page 36


 1590              		.section	.text.Droite,"ax",%progbits
 1591              		.align	2
 1592              		.global	Droite
 1593              		.thumb
 1594              		.thumb_func
 1596              	Droite:
 1597              	.LFB155:
 448:Src/freertos.c **** }
 449:Src/freertos.c **** 
 450:Src/freertos.c **** void Droite() {
 1598              		.loc 1 450 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602 0000 08B5     		push	{r3, lr}
 1603              	.LCFI28:
 1604              		.cfi_def_cfa_offset 8
 1605              		.cfi_offset 3, -8
 1606              		.cfi_offset 14, -4
 451:Src/freertos.c ****     EnvoiMessage(0x09);
 1607              		.loc 1 451 0
 1608 0002 0920     		movs	r0, #9
 1609 0004 FFF7FEFF 		bl	EnvoiMessage
 1610              	.LVL161:
 452:Src/freertos.c ****     WaitFor(0x06);
 1611              		.loc 1 452 0
 1612 0008 0620     		movs	r0, #6
 1613 000a FFF7FEFF 		bl	WaitFor
 1614              	.LVL162:
 1615 000e 08BD     		pop	{r3, pc}
 1616              		.cfi_endproc
 1617              	.LFE155:
 1619              		.section	.text.Gauche,"ax",%progbits
 1620              		.align	2
 1621              		.global	Gauche
 1622              		.thumb
 1623              		.thumb_func
 1625              	Gauche:
 1626              	.LFB156:
 453:Src/freertos.c **** }
 454:Src/freertos.c **** 
 455:Src/freertos.c **** void Gauche() {
 1627              		.loc 1 455 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 08B5     		push	{r3, lr}
 1632              	.LCFI29:
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 3, -8
 1635              		.cfi_offset 14, -4
 456:Src/freertos.c ****     EnvoiMessage(0x0A);
 1636              		.loc 1 456 0
 1637 0002 0A20     		movs	r0, #10
 1638 0004 FFF7FEFF 		bl	EnvoiMessage
 1639              	.LVL163:
 457:Src/freertos.c ****     WaitFor(0x06);
ARM GAS  /tmp/ccXGsRah.s 			page 37


 1640              		.loc 1 457 0
 1641 0008 0620     		movs	r0, #6
 1642 000a FFF7FEFF 		bl	WaitFor
 1643              	.LVL164:
 1644 000e 08BD     		pop	{r3, pc}
 1645              		.cfi_endproc
 1646              	.LFE156:
 1648              		.section	.text.DansUnCoin,"ax",%progbits
 1649              		.align	2
 1650              		.global	DansUnCoin
 1651              		.thumb
 1652              		.thumb_func
 1654              	DansUnCoin:
 1655              	.LFB157:
 458:Src/freertos.c **** }
 459:Src/freertos.c **** 
 460:Src/freertos.c **** void DansUnCoin() {
 1656              		.loc 1 460 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660 0000 08B5     		push	{r3, lr}
 1661              	.LCFI30:
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 3, -8
 1664              		.cfi_offset 14, -4
 461:Src/freertos.c ****     EnvoiMessage(0x0B);
 1665              		.loc 1 461 0
 1666 0002 0B20     		movs	r0, #11
 1667 0004 FFF7FEFF 		bl	EnvoiMessage
 1668              	.LVL165:
 1669 0008 08BD     		pop	{r3, pc}
 1670              		.cfi_endproc
 1671              	.LFE157:
 1673 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1674              		.align	2
 1675              		.global	Trouve
 1676              		.thumb
 1677              		.thumb_func
 1679              	Trouve:
 1680              	.LFB158:
 462:Src/freertos.c **** }
 463:Src/freertos.c **** 
 464:Src/freertos.c **** void Trouve() {
 1681              		.loc 1 464 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685 0000 08B5     		push	{r3, lr}
 1686              	.LCFI31:
 1687              		.cfi_def_cfa_offset 8
 1688              		.cfi_offset 3, -8
 1689              		.cfi_offset 14, -4
 465:Src/freertos.c ****     EnvoiMessage(0x0C);
 1690              		.loc 1 465 0
 1691 0002 0C20     		movs	r0, #12
 1692 0004 FFF7FEFF 		bl	EnvoiMessage
ARM GAS  /tmp/ccXGsRah.s 			page 38


 1693              	.LVL166:
 1694 0008 08BD     		pop	{r3, pc}
 1695              		.cfi_endproc
 1696              	.LFE158:
 1698 000a 00BF     		.section	.text.Random,"ax",%progbits
 1699              		.align	2
 1700              		.global	Random
 1701              		.thumb
 1702              		.thumb_func
 1704              	Random:
 1705              	.LFB159:
 466:Src/freertos.c **** }
 467:Src/freertos.c **** 
 468:Src/freertos.c **** int Random() {
 1706              		.loc 1 468 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710 0000 10B5     		push	{r4, lr}
 1711              	.LCFI32:
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 4, -8
 1714              		.cfi_offset 14, -4
 469:Src/freertos.c ****     int a, p;
 470:Src/freertos.c ****     EnvoiMessage(0x0D);
 1715              		.loc 1 470 0
 1716 0002 0D20     		movs	r0, #13
 1717 0004 FFF7FEFF 		bl	EnvoiMessage
 1718              	.LVL167:
 471:Src/freertos.c ****     srand(time(NULL));
 1719              		.loc 1 471 0
 1720 0008 0020     		movs	r0, #0
 1721 000a FFF7FEFF 		bl	time
 1722              	.LVL168:
 1723 000e FFF7FEFF 		bl	srand
 1724              	.LVL169:
 472:Src/freertos.c ****     a = rand()%256;
 1725              		.loc 1 472 0
 1726 0012 FFF7FEFF 		bl	rand
 1727              	.LVL170:
 1728 0016 0B4C     		ldr	r4, .L176
 1729 0018 0440     		ands	r4, r4, r0
 1730 001a 002C     		cmp	r4, #0
 1731 001c 03DA     		bge	.L172
 1732 001e 013C     		subs	r4, r4, #1
 1733 0020 64F0FF04 		orn	r4, r4, #255
 1734 0024 0134     		adds	r4, r4, #1
 1735              	.L172:
 1736              	.LVL171:
 473:Src/freertos.c ****     if (ReceptionMessage() < a) {
 1737              		.loc 1 473 0
 1738 0026 FFF7FEFF 		bl	ReceptionMessage
 1739              	.LVL172:
 1740 002a 8442     		cmp	r4, r0
 1741 002c 04DD     		ble	.L173
 1742              	.LVL173:
 474:Src/freertos.c ****         p = 1;
ARM GAS  /tmp/ccXGsRah.s 			page 39


 475:Src/freertos.c ****         EnvoiMessage(0x50);
 1743              		.loc 1 475 0
 1744 002e 5020     		movs	r0, #80
 1745 0030 FFF7FEFF 		bl	EnvoiMessage
 1746              	.LVL174:
 474:Src/freertos.c ****         p = 1;
 1747              		.loc 1 474 0
 1748 0034 0120     		movs	r0, #1
 1749 0036 10BD     		pop	{r4, pc}
 1750              	.LVL175:
 1751              	.L173:
 476:Src/freertos.c ****     }
 477:Src/freertos.c ****     else {
 478:Src/freertos.c ****         p = 0;
 479:Src/freertos.c ****         EnvoiMessage(0x67);
 1752              		.loc 1 479 0
 1753 0038 6720     		movs	r0, #103
 1754 003a FFF7FEFF 		bl	EnvoiMessage
 1755              	.LVL176:
 478:Src/freertos.c ****         EnvoiMessage(0x67);
 1756              		.loc 1 478 0
 1757 003e 0020     		movs	r0, #0
 1758              	.LVL177:
 480:Src/freertos.c ****     }
 481:Src/freertos.c ****     return(p);
 482:Src/freertos.c **** }
 1759              		.loc 1 482 0
 1760 0040 10BD     		pop	{r4, pc}
 1761              	.LVL178:
 1762              	.L177:
 1763 0042 00BF     		.align	2
 1764              	.L176:
 1765 0044 FF000080 		.word	-2147483393
 1766              		.cfi_endproc
 1767              	.LFE159:
 1769              		.section	.text.Non,"ax",%progbits
 1770              		.align	2
 1771              		.global	Non
 1772              		.thumb
 1773              		.thumb_func
 1775              	Non:
 1776              	.LFB160:
 483:Src/freertos.c **** 
 484:Src/freertos.c **** void Non(){
 1777              		.loc 1 484 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781 0000 08B5     		push	{r3, lr}
 1782              	.LCFI33:
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 3, -8
 1785              		.cfi_offset 14, -4
 485:Src/freertos.c ****     EnvoiMessage(0x10);
 1786              		.loc 1 485 0
 1787 0002 1020     		movs	r0, #16
 1788 0004 FFF7FEFF 		bl	EnvoiMessage
ARM GAS  /tmp/ccXGsRah.s 			page 40


 1789              	.LVL179:
 1790 0008 08BD     		pop	{r3, pc}
 1791              		.cfi_endproc
 1792              	.LFE160:
 1794 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1795              		.align	2
 1796              		.global	MemeCase
 1797              		.thumb
 1798              		.thumb_func
 1800              	MemeCase:
 1801              	.LFB161:
 486:Src/freertos.c **** }
 487:Src/freertos.c **** 
 488:Src/freertos.c **** void MemeCase() {
 1802              		.loc 1 488 0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 1806 0000 08B5     		push	{r3, lr}
 1807              	.LCFI34:
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 3, -8
 1810              		.cfi_offset 14, -4
 489:Src/freertos.c ****     EnvoiMessage(0x12);
 1811              		.loc 1 489 0
 1812 0002 1220     		movs	r0, #18
 1813 0004 FFF7FEFF 		bl	EnvoiMessage
 1814              	.LVL180:
 1815 0008 08BD     		pop	{r3, pc}
 1816              		.cfi_endproc
 1817              	.LFE161:
 1819 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1820              		.align	2
 1821              		.global	TuEsCoin
 1822              		.thumb
 1823              		.thumb_func
 1825              	TuEsCoin:
 1826              	.LFB162:
 490:Src/freertos.c **** }
 491:Src/freertos.c **** 
 492:Src/freertos.c **** void TuEsCoin(){
 1827              		.loc 1 492 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831 0000 08B5     		push	{r3, lr}
 1832              	.LCFI35:
 1833              		.cfi_def_cfa_offset 8
 1834              		.cfi_offset 3, -8
 1835              		.cfi_offset 14, -4
 493:Src/freertos.c ****     EnvoiMessage(0x13);
 1836              		.loc 1 493 0
 1837 0002 1320     		movs	r0, #19
 1838 0004 FFF7FEFF 		bl	EnvoiMessage
 1839              	.LVL181:
 1840 0008 08BD     		pop	{r3, pc}
 1841              		.cfi_endproc
ARM GAS  /tmp/ccXGsRah.s 			page 41


 1842              	.LFE162:
 1844 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1845              		.align	2
 1846              		.global	deplacement
 1847              		.thumb
 1848              		.thumb_func
 1850              	deplacement:
 1851              	.LFB163:
 494:Src/freertos.c **** }
 495:Src/freertos.c **** /* END Fonctions UART */
 496:Src/freertos.c **** 
 497:Src/freertos.c **** /* BEGIN Fonctions IA */
 498:Src/freertos.c **** void deplacement(int distance, int cap)
 499:Src/freertos.c **** {
 1852              		.loc 1 499 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              	.LVL182:
 1857 0000 70B5     		push	{r4, r5, r6, lr}
 1858              	.LCFI36:
 1859              		.cfi_def_cfa_offset 16
 1860              		.cfi_offset 4, -16
 1861              		.cfi_offset 5, -12
 1862              		.cfi_offset 6, -8
 1863              		.cfi_offset 14, -4
 1864 0002 0646     		mov	r6, r0
 1865 0004 0D46     		mov	r5, r1
 1866              	.LVL183:
 500:Src/freertos.c ****     int i=0;
 501:Src/freertos.c ****   for(i=0; i< distance +1; i++)
 1867              		.loc 1 501 0
 1868 0006 0024     		movs	r4, #0
 1869 0008 08E0     		b	.L185
 1870              	.LVL184:
 1871              	.L186:
 502:Src/freertos.c ****   {
 503:Src/freertos.c ****       flag_distance++;
 1872              		.loc 1 503 0 discriminator 3
 1873 000a 0D4A     		ldr	r2, .L190
 1874 000c 1368     		ldr	r3, [r2]
 1875 000e 0133     		adds	r3, r3, #1
 1876 0010 1360     		str	r3, [r2]
 504:Src/freertos.c ****       osDelay(500);
 1877              		.loc 1 504 0 discriminator 3
 1878 0012 4FF4FA70 		mov	r0, #500
 1879 0016 FFF7FEFF 		bl	osDelay
 1880              	.LVL185:
 501:Src/freertos.c ****   {
 1881              		.loc 1 501 0 discriminator 3
 1882 001a 0134     		adds	r4, r4, #1
 1883              	.LVL186:
 1884              	.L185:
 501:Src/freertos.c ****   {
 1885              		.loc 1 501 0 is_stmt 0 discriminator 1
 1886 001c 731C     		adds	r3, r6, #1
 1887 001e 9C42     		cmp	r4, r3
ARM GAS  /tmp/ccXGsRah.s 			page 42


 1888 0020 F3DB     		blt	.L186
 1889 0022 0024     		movs	r4, #0
 1890              	.LVL187:
 1891 0024 08E0     		b	.L187
 1892              	.LVL188:
 1893              	.L188:
 505:Src/freertos.c ****   }
 506:Src/freertos.c ****   for(i=0; i< cap +1; i++)
 507:Src/freertos.c ****   {
 508:Src/freertos.c ****       flag_cap++;
 1894              		.loc 1 508 0 is_stmt 1 discriminator 3
 1895 0026 074A     		ldr	r2, .L190+4
 1896 0028 1368     		ldr	r3, [r2]
 1897 002a 0133     		adds	r3, r3, #1
 1898 002c 1360     		str	r3, [r2]
 509:Src/freertos.c ****       osDelay(500);
 1899              		.loc 1 509 0 discriminator 3
 1900 002e 4FF4FA70 		mov	r0, #500
 1901 0032 FFF7FEFF 		bl	osDelay
 1902              	.LVL189:
 506:Src/freertos.c ****   {
 1903              		.loc 1 506 0 discriminator 3
 1904 0036 0134     		adds	r4, r4, #1
 1905              	.LVL190:
 1906              	.L187:
 506:Src/freertos.c ****   {
 1907              		.loc 1 506 0 is_stmt 0 discriminator 1
 1908 0038 6B1C     		adds	r3, r5, #1
 1909 003a 9C42     		cmp	r4, r3
 1910 003c F3DB     		blt	.L188
 510:Src/freertos.c ****   }
 511:Src/freertos.c **** }
 1911              		.loc 1 511 0 is_stmt 1
 1912 003e 70BD     		pop	{r4, r5, r6, pc}
 1913              	.LVL191:
 1914              	.L191:
 1915              		.align	2
 1916              	.L190:
 1917 0040 00000000 		.word	.LANCHOR1
 1918 0044 00000000 		.word	.LANCHOR2
 1919              		.cfi_endproc
 1920              	.LFE163:
 1922              		.section	.text.motor,"ax",%progbits
 1923              		.align	2
 1924              		.global	motor
 1925              		.thumb
 1926              		.thumb_func
 1928              	motor:
 1929              	.LFB164:
 512:Src/freertos.c **** /* END Fonctions IA */
 513:Src/freertos.c **** 
 514:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 515:Src/freertos.c **** 
 516:Src/freertos.c **** /* Hook prototypes */
 517:Src/freertos.c **** 
 518:Src/freertos.c **** /* USER CODE BEGIN Application */
 519:Src/freertos.c **** void motor(void const * argument)
ARM GAS  /tmp/ccXGsRah.s 			page 43


 520:Src/freertos.c **** {
 1930              		.loc 1 520 0
 1931              		.cfi_startproc
 1932              		@ Volatile: function does not return.
 1933              		@ args = 0, pretend = 0, frame = 0
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935              	.LVL192:
 1936 0000 08B5     		push	{r3, lr}
 1937              	.LCFI37:
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 3, -8
 1940              		.cfi_offset 14, -4
 521:Src/freertos.c ****   /* USER CODE BEGIN motor */
 522:Src/freertos.c ****   UNUSED(argument);
 523:Src/freertos.c **** 
 524:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 1941              		.loc 1 524 0
 1942 0002 0122     		movs	r2, #1
 1943 0004 4FF48071 		mov	r1, #256
 1944 0008 4FF09040 		mov	r0, #1207959552
 1945              	.LVL193:
 1946 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1947              	.LVL194:
 525:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 1948              		.loc 1 525 0
 1949 0010 074C     		ldr	r4, .L195
 1950 0012 2046     		mov	r0, r4
 1951 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1952              	.LVL195:
 526:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 1953              		.loc 1 526 0
 1954 0018 0021     		movs	r1, #0
 1955 001a 2046     		mov	r0, r4
 1956 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1957              	.LVL196:
 527:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 1958              		.loc 1 527 0
 1959 0020 0C21     		movs	r1, #12
 1960 0022 2046     		mov	r0, r4
 1961 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1962              	.LVL197:
 1963              	.L193:
 528:Src/freertos.c **** 
 529:Src/freertos.c ****   /* Infinite loop */
 530:Src/freertos.c ****   for(;;)
 531:Src/freertos.c ****   {
 532:Src/freertos.c ****     gestion_moteurs();
 1964              		.loc 1 532 0 discriminator 1
 1965 0028 FFF7FEFF 		bl	gestion_moteurs
 1966              	.LVL198:
 1967 002c FCE7     		b	.L193
 1968              	.L196:
 1969 002e 00BF     		.align	2
 1970              	.L195:
 1971 0030 00000000 		.word	htim3
 1972              		.cfi_endproc
 1973              	.LFE164:
ARM GAS  /tmp/ccXGsRah.s 			page 44


 1975              		.section	.text.adcControl,"ax",%progbits
 1976              		.align	2
 1977              		.global	adcControl
 1978              		.thumb
 1979              		.thumb_func
 1981              	adcControl:
 1982              	.LFB165:
 533:Src/freertos.c ****   }
 534:Src/freertos.c ****   /* USER CODE END motor */
 535:Src/freertos.c **** }
 536:Src/freertos.c **** 
 537:Src/freertos.c **** void adcControl(void const * argument)
 538:Src/freertos.c **** {
 1983              		.loc 1 538 0
 1984              		.cfi_startproc
 1985              		@ Volatile: function does not return.
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 0, uses_anonymous_args = 0
 1988              	.LVL199:
 1989 0000 08B5     		push	{r3, lr}
 1990              	.LCFI38:
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 3, -8
 1993              		.cfi_offset 14, -4
 1994              	.LVL200:
 1995              	.L198:
 539:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 540:Src/freertos.c ****   /* Infinite loop */
 541:Src/freertos.c ****   for(;;)
 542:Src/freertos.c ****   {
 543:Src/freertos.c ****     HAL_ADC_Start_IT(&hadc1);
 1996              		.loc 1 543 0
 1997 0002 0A48     		ldr	r0, .L201
 1998 0004 FFF7FEFF 		bl	HAL_ADC_Start_IT
 1999              	.LVL201:
 544:Src/freertos.c ****     osDelay(1000);
 2000              		.loc 1 544 0
 2001 0008 4FF47A70 		mov	r0, #1000
 2002 000c FFF7FEFF 		bl	osDelay
 2003              	.LVL202:
 545:Src/freertos.c ****     if (flag_adc == 1) {
 2004              		.loc 1 545 0
 2005 0010 074B     		ldr	r3, .L201+4
 2006 0012 1B68     		ldr	r3, [r3]
 2007 0014 012B     		cmp	r3, #1
 2008 0016 F4D1     		bne	.L198
 546:Src/freertos.c ****         printf("Value : %lu\n\r", adcValue);
 2009              		.loc 1 546 0
 2010 0018 064B     		ldr	r3, .L201+8
 2011 001a 1968     		ldr	r1, [r3]
 2012 001c 0648     		ldr	r0, .L201+12
 2013 001e FFF7FEFF 		bl	printf
 2014              	.LVL203:
 547:Src/freertos.c ****         flag_adc = 0;
 2015              		.loc 1 547 0
 2016 0022 0022     		movs	r2, #0
 2017 0024 024B     		ldr	r3, .L201+4
ARM GAS  /tmp/ccXGsRah.s 			page 45


 2018 0026 1A60     		str	r2, [r3]
 2019 0028 EBE7     		b	.L198
 2020              	.L202:
 2021 002a 00BF     		.align	2
 2022              	.L201:
 2023 002c 00000000 		.word	hadc1
 2024 0030 00000000 		.word	.LANCHOR4
 2025 0034 00000000 		.word	.LANCHOR3
 2026 0038 00000000 		.word	.LC0
 2027              		.cfi_endproc
 2028              	.LFE165:
 2030              		.section	.text.uart,"ax",%progbits
 2031              		.align	2
 2032              		.global	uart
 2033              		.thumb
 2034              		.thumb_func
 2036              	uart:
 2037              	.LFB166:
 548:Src/freertos.c ****     }
 549:Src/freertos.c ****   }
 550:Src/freertos.c ****   /* USER CODE END adcControl */
 551:Src/freertos.c **** }
 552:Src/freertos.c **** 
 553:Src/freertos.c **** void uart(void const * argument)
 554:Src/freertos.c **** {
 2038              		.loc 1 554 0
 2039              		.cfi_startproc
 2040              		@ Volatile: function does not return.
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043              	.LVL204:
 2044 0000 08B5     		push	{r3, lr}
 2045              	.LCFI39:
 2046              		.cfi_def_cfa_offset 8
 2047              		.cfi_offset 3, -8
 2048              		.cfi_offset 14, -4
 2049              	.LVL205:
 2050              	.L204:
 555:Src/freertos.c ****   /* USER CODE BEGIN uart */
 556:Src/freertos.c ****   /* Infinite loop */
 557:Src/freertos.c ****   for(;;)
 558:Src/freertos.c ****   {
 559:Src/freertos.c ****       /*deplacement(1,0);
 560:Src/freertos.c ****       osDelay(DELAY);
 561:Src/freertos.c ****       deplacement(0,1);
 562:Src/freertos.c ****       osDelay(DELAY);
 563:Src/freertos.c ****       deplacement(0,1);
 564:Src/freertos.c ****       osDelay(DELAY);
 565:Src/freertos.c ****       deplacement(1,0);
 566:Src/freertos.c ****       osDelay(DELAY);
 567:Src/freertos.c ****       deplacement(0,-1);
 568:Src/freertos.c ****       pivoter_gauche();
 569:Src/freertos.c ****       osDelay(DELAY);
 570:Src/freertos.c ****       deplacement(0,-1);
 571:Src/freertos.c ****       pivoter_gauche();
 572:Src/freertos.c ****       osDelay(DELAY);*/
 573:Src/freertos.c **** 
ARM GAS  /tmp/ccXGsRah.s 			page 46


 574:Src/freertos.c ****       deplacement(1,0);
 2051              		.loc 1 574 0 discriminator 1
 2052 0002 0021     		movs	r1, #0
 2053 0004 0120     		movs	r0, #1
 2054 0006 FFF7FEFF 		bl	deplacement
 2055              	.LVL206:
 575:Src/freertos.c ****       osDelay(5000);
 2056              		.loc 1 575 0 discriminator 1
 2057 000a 41F28830 		movw	r0, #5000
 2058 000e FFF7FEFF 		bl	osDelay
 2059              	.LVL207:
 576:Src/freertos.c ****       deplacement(-1,0);
 2060              		.loc 1 576 0 discriminator 1
 2061 0012 0021     		movs	r1, #0
 2062 0014 4FF0FF30 		mov	r0, #-1
 2063 0018 FFF7FEFF 		bl	deplacement
 2064              	.LVL208:
 2065 001c F1E7     		b	.L204
 2066              		.cfi_endproc
 2067              	.LFE166:
 2069              		.comm	robot2,12,4
 2070              		.comm	robot1,12,4
 2071              		.global	flag_present
 2072              		.global	flag_cap
 2073              		.global	flag_distance
 2074              		.global	flag_gauche
 2075              		.global	flag_droite
 2076              		.global	flag_bas
 2077              		.global	flag_haut
 2078              		.global	deplacement_fini
 2079              		.global	adcValue
 2080              		.global	flag_adc
 2081 001e 00BF     		.section	.bss.flag_present,"aw",%nobits
 2082              		.align	2
 2083              		.set	.LANCHOR5,. + 0
 2086              	flag_present:
 2087 0000 00000000 		.space	4
 2088              		.section	.bss.flag_adc,"aw",%nobits
 2089              		.align	2
 2090              		.set	.LANCHOR4,. + 0
 2093              	flag_adc:
 2094 0000 00000000 		.space	4
 2095              		.section	.bss.flag_gauche,"aw",%nobits
 2096              		.align	2
 2097              		.set	.LANCHOR9,. + 0
 2100              	flag_gauche:
 2101 0000 00000000 		.space	4
 2102              		.section	.bss.flag_droite,"aw",%nobits
 2103              		.align	2
 2104              		.set	.LANCHOR8,. + 0
 2107              	flag_droite:
 2108 0000 00000000 		.space	4
 2109              		.section	.bss.flag_distance,"aw",%nobits
 2110              		.align	2
 2111              		.set	.LANCHOR1,. + 0
 2114              	flag_distance:
 2115 0000 00000000 		.space	4
ARM GAS  /tmp/ccXGsRah.s 			page 47


 2116              		.section	.bss.deplacement_fini,"aw",%nobits
 2117              		.align	2
 2118              		.set	.LANCHOR0,. + 0
 2121              	deplacement_fini:
 2122 0000 00000000 		.space	4
 2123              		.section	.bss.flag_haut,"aw",%nobits
 2124              		.align	2
 2125              		.set	.LANCHOR6,. + 0
 2128              	flag_haut:
 2129 0000 00000000 		.space	4
 2130              		.section	.rodata.str1.4,"aMS",%progbits,1
 2131              		.align	2
 2132              	.LC0:
 2133 0000 56616C75 		.ascii	"Value : %lu\012\015\000"
 2133      65203A20 
 2133      256C750A 
 2133      0D00
 2134              		.section	.bss.flag_cap,"aw",%nobits
 2135              		.align	2
 2136              		.set	.LANCHOR2,. + 0
 2139              	flag_cap:
 2140 0000 00000000 		.space	4
 2141              		.section	.bss.adcValue,"aw",%nobits
 2142              		.align	2
 2143              		.set	.LANCHOR3,. + 0
 2146              	adcValue:
 2147 0000 00000000 		.space	4
 2148              		.section	.bss.flag_bas,"aw",%nobits
 2149              		.align	2
 2150              		.set	.LANCHOR7,. + 0
 2153              	flag_bas:
 2154 0000 00000000 		.space	4
 2155              		.text
 2156              	.Letext0:
 2157              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2158              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2159              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2160              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2161              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2162              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2163              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2164              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2165              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2166              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 2167              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2168              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2169              		.file 14 "/usr/include/newlib/time.h"
 2170              		.file 15 "/usr/include/newlib/stdlib.h"
 2171              		.file 16 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccXGsRah.s 			page 48
>>>>>>> refs/remotes/origin/master


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
<<<<<<< HEAD
     /tmp/cckw9KWo.s:21     .text.alumer_gauche:0000000000000000 $t
     /tmp/cckw9KWo.s:26     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/cckw9KWo.s:62     .text.alumer_gauche:0000000000000020 $d
     /tmp/cckw9KWo.s:67     .text.alumer_droite:0000000000000000 $t
     /tmp/cckw9KWo.s:72     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/cckw9KWo.s:104    .text.alumer_droite:0000000000000024 $d
     /tmp/cckw9KWo.s:109    .text.eteindre_gauche:0000000000000000 $t
     /tmp/cckw9KWo.s:114    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/cckw9KWo.s:142    .text.eteindre_gauche:000000000000001c $d
     /tmp/cckw9KWo.s:147    .text.eteindre_droite:0000000000000000 $t
     /tmp/cckw9KWo.s:152    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/cckw9KWo.s:179    .text.eteindre_droite:000000000000001c $d
     /tmp/cckw9KWo.s:184    .text.pwm_max:0000000000000000 $t
     /tmp/cckw9KWo.s:189    .text.pwm_max:0000000000000000 pwm_max
     /tmp/cckw9KWo.s:207    .text.pwm_max:0000000000000010 $d
     /tmp/cckw9KWo.s:212    .text.accelerer:0000000000000000 $t
     /tmp/cckw9KWo.s:217    .text.accelerer:0000000000000000 accelerer
     /tmp/cckw9KWo.s:258    .text.accelerer:0000000000000020 $d
     /tmp/cckw9KWo.s:263    .text.deccelerer:0000000000000000 $t
     /tmp/cckw9KWo.s:268    .text.deccelerer:0000000000000000 deccelerer
     /tmp/cckw9KWo.s:309    .text.deccelerer:0000000000000020 $d
     /tmp/cckw9KWo.s:314    .text.avancer_robot:0000000000000000 $t
     /tmp/cckw9KWo.s:319    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/cckw9KWo.s:367    .text.avancer_robot:0000000000000038 $d
     /tmp/cckw9KWo.s:373    .text.reculer_robot:0000000000000000 $t
     /tmp/cckw9KWo.s:378    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/cckw9KWo.s:422    .text.reculer_robot:0000000000000030 $d
     /tmp/cckw9KWo.s:427    .text.pivoter_gauche:0000000000000000 $t
     /tmp/cckw9KWo.s:432    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/cckw9KWo.s:475    .text.pivoter_gauche:000000000000002c $d
     /tmp/cckw9KWo.s:480    .text.pivoter_droite:0000000000000000 $t
     /tmp/cckw9KWo.s:485    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/cckw9KWo.s:528    .text.pivoter_droite:000000000000002c $d
     /tmp/cckw9KWo.s:533    .text.gestion_moteurs:0000000000000000 $t
     /tmp/cckw9KWo.s:538    .text.gestion_moteurs:0000000000000000 gestion_moteurs
     /tmp/cckw9KWo.s:571    .text.gestion_moteurs:000000000000001c $d
     /tmp/cckw9KWo.s:576    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cckw9KWo.s:581    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cckw9KWo.s:606    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/cckw9KWo.s:612    .text._write:0000000000000000 $t
     /tmp/cckw9KWo.s:617    .text._write:0000000000000000 _write
     /tmp/cckw9KWo.s:645    .text._write:0000000000000014 $d
     /tmp/cckw9KWo.s:650    .text.EnvoiMessage:0000000000000000 $t
     /tmp/cckw9KWo.s:655    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/cckw9KWo.s:801    .text.EnvoiMessage:00000000000000f8 $d
     /tmp/cckw9KWo.s:806    .text.ReceptionMessage:0000000000000000 $t
     /tmp/cckw9KWo.s:811    .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/cckw9KWo.s:995    .text.ReceptionMessage:000000000000010c $d
     /tmp/cckw9KWo.s:1001   .text.recoitpos:0000000000000000 $t
     /tmp/cckw9KWo.s:1006   .text.recoitpos:0000000000000000 recoitpos
     /tmp/cckw9KWo.s:1046   .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/cckw9KWo.s:1051   .text.envoipos:0000000000000000 $t
     /tmp/cckw9KWo.s:1056   .text.envoipos:0000000000000000 envoipos
     /tmp/cckw9KWo.s:1085   .text.Traduction:0000000000000000 $t
ARM GAS  /tmp/cckw9KWo.s 			page 43


     /tmp/cckw9KWo.s:1090   .text.Traduction:0000000000000000 Traduction
     /tmp/cckw9KWo.s:1176   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
     /tmp/cckw9KWo.s:1187   .text.WaitFor:0000000000000000 $t
     /tmp/cckw9KWo.s:1192   .text.WaitFor:0000000000000000 WaitFor
     /tmp/cckw9KWo.s:1218   .text.TaPosition:0000000000000000 $t
     /tmp/cckw9KWo.s:1223   .text.TaPosition:0000000000000000 TaPosition
     /tmp/cckw9KWo.s:1243   .text.ok:0000000000000000 $t
     /tmp/cckw9KWo.s:1248   .text.ok:0000000000000000 ok
     /tmp/cckw9KWo.s:1268   .text.Monte:0000000000000000 $t
     /tmp/cckw9KWo.s:1273   .text.Monte:0000000000000000 Monte
     /tmp/cckw9KWo.s:1297   .text.Descend:0000000000000000 $t
     /tmp/cckw9KWo.s:1302   .text.Descend:0000000000000000 Descend
     /tmp/cckw9KWo.s:1326   .text.Droite:0000000000000000 $t
     /tmp/cckw9KWo.s:1331   .text.Droite:0000000000000000 Droite
     /tmp/cckw9KWo.s:1355   .text.Gauche:0000000000000000 $t
     /tmp/cckw9KWo.s:1360   .text.Gauche:0000000000000000 Gauche
     /tmp/cckw9KWo.s:1384   .text.DansUnCoin:0000000000000000 $t
     /tmp/cckw9KWo.s:1389   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/cckw9KWo.s:1409   .text.Trouve:0000000000000000 $t
     /tmp/cckw9KWo.s:1414   .text.Trouve:0000000000000000 Trouve
     /tmp/cckw9KWo.s:1434   .text.Random:0000000000000000 $t
     /tmp/cckw9KWo.s:1439   .text.Random:0000000000000000 Random
     /tmp/cckw9KWo.s:1500   .text.Random:0000000000000044 $d
     /tmp/cckw9KWo.s:1505   .text.Non:0000000000000000 $t
     /tmp/cckw9KWo.s:1510   .text.Non:0000000000000000 Non
     /tmp/cckw9KWo.s:1530   .text.MemeCase:0000000000000000 $t
     /tmp/cckw9KWo.s:1535   .text.MemeCase:0000000000000000 MemeCase
     /tmp/cckw9KWo.s:1555   .text.TuEsCoin:0000000000000000 $t
     /tmp/cckw9KWo.s:1560   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/cckw9KWo.s:1580   .text.deplacement:0000000000000000 $t
     /tmp/cckw9KWo.s:1585   .text.deplacement:0000000000000000 deplacement
     /tmp/cckw9KWo.s:1629   .text.deplacement:0000000000000024 $d
     /tmp/cckw9KWo.s:1634   .text.motor:0000000000000000 $t
     /tmp/cckw9KWo.s:1639   .text.motor:0000000000000000 motor
     /tmp/cckw9KWo.s:1683   .text.motor:0000000000000030 $d
     /tmp/cckw9KWo.s:1688   .text.uart:0000000000000000 $t
     /tmp/cckw9KWo.s:1693   .text.uart:0000000000000000 uart
     /tmp/cckw9KWo.s:1709   .text.ia:0000000000000000 $t
     /tmp/cckw9KWo.s:1714   .text.ia:0000000000000000 ia
     /tmp/cckw9KWo.s:1744   .text.ia:0000000000000018 $d
     /tmp/cckw9KWo.s:1810   .bss.flag_cap:0000000000000000 flag_cap
     /tmp/cckw9KWo.s:1786   .bss.flag_distance:0000000000000000 flag_distance
     /tmp/cckw9KWo.s:1772   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/cckw9KWo.s:1779   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/cckw9KWo.s:1824   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/cckw9KWo.s:1800   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/cckw9KWo.s:1793   .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/cckw9KWo.s:1817   .bss.adcValue:0000000000000000 adcValue
     /tmp/cckw9KWo.s:1765   .bss.flag_adc:0000000000000000 flag_adc
     /tmp/cckw9KWo.s:1761   .bss.flag_adc:0000000000000000 $d
     /tmp/cckw9KWo.s:1768   .bss.flag_gauche:0000000000000000 $d
     /tmp/cckw9KWo.s:1775   .bss.flag_droite:0000000000000000 $d
     /tmp/cckw9KWo.s:1782   .bss.flag_distance:0000000000000000 $d
     /tmp/cckw9KWo.s:1789   .bss.deplacement_fini:0000000000000000 $d
     /tmp/cckw9KWo.s:1796   .bss.flag_haut:0000000000000000 $d
     /tmp/cckw9KWo.s:1803   .rodata.str1.4:0000000000000000 $d
ARM GAS  /tmp/cckw9KWo.s 			page 44


     /tmp/cckw9KWo.s:1807   .bss.flag_cap:0000000000000000 $d
     /tmp/cckw9KWo.s:1813   .bss.adcValue:0000000000000000 $d
     /tmp/cckw9KWo.s:1820   .bss.flag_bas:0000000000000000 $d
=======
     /tmp/ccXGsRah.s:22     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccXGsRah.s:27     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccXGsRah.s:63     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccXGsRah.s:68     .text.alumer_droite:0000000000000000 $t
     /tmp/ccXGsRah.s:73     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccXGsRah.s:105    .text.alumer_droite:0000000000000024 $d
     /tmp/ccXGsRah.s:110    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccXGsRah.s:115    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccXGsRah.s:143    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccXGsRah.s:148    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccXGsRah.s:153    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccXGsRah.s:180    .text.eteindre_droite:000000000000001c $d
     /tmp/ccXGsRah.s:185    .text.pwm_max:0000000000000000 $t
     /tmp/ccXGsRah.s:190    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccXGsRah.s:208    .text.pwm_max:0000000000000010 $d
     /tmp/ccXGsRah.s:213    .text.accelerer:0000000000000000 $t
     /tmp/ccXGsRah.s:218    .text.accelerer:0000000000000000 accelerer
     /tmp/ccXGsRah.s:259    .text.accelerer:0000000000000020 $d
     /tmp/ccXGsRah.s:264    .text.deccelerer:0000000000000000 $t
     /tmp/ccXGsRah.s:269    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccXGsRah.s:310    .text.deccelerer:0000000000000020 $d
     /tmp/ccXGsRah.s:315    .text.reculer_robot:0000000000000000 $t
     /tmp/ccXGsRah.s:320    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccXGsRah.s:363    .text.reculer_robot:0000000000000030 $d
     /tmp/ccXGsRah.s:368    .text.avancer_robot:0000000000000000 $t
     /tmp/ccXGsRah.s:373    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccXGsRah.s:416    .text.avancer_robot:0000000000000030 $d
     /tmp/ccXGsRah.s:421    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccXGsRah.s:426    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccXGsRah.s:469    .text.pivoter_gauche:000000000000002c $d
     /tmp/ccXGsRah.s:474    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccXGsRah.s:479    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccXGsRah.s:522    .text.pivoter_droite:000000000000002c $d
     /tmp/ccXGsRah.s:527    .text.gestion_moteurs:0000000000000000 $t
     /tmp/ccXGsRah.s:532    .text.gestion_moteurs:0000000000000000 gestion_moteurs
     /tmp/ccXGsRah.s:639    .text.gestion_moteurs:0000000000000088 $d
     /tmp/ccXGsRah.s:646    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccXGsRah.s:651    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccXGsRah.s:676    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccXGsRah.s:682    .text._write:0000000000000000 $t
     /tmp/ccXGsRah.s:687    .text._write:0000000000000000 _write
     /tmp/ccXGsRah.s:715    .text._write:0000000000000014 $d
     /tmp/ccXGsRah.s:720    .text.distance:0000000000000000 $t
     /tmp/ccXGsRah.s:725    .text.distance:0000000000000000 distance
     /tmp/ccXGsRah.s:864    .text.distance:00000000000000a8 $d
     /tmp/ccXGsRah.s:869    .text.estPresent:0000000000000000 $t
     /tmp/ccXGsRah.s:874    .text.estPresent:0000000000000000 estPresent
     /tmp/ccXGsRah.s:902    .text.estPresent:0000000000000014 $d
     /tmp/ccXGsRah.s:907    .text.EnvoiMessage:0000000000000000 $t
     /tmp/ccXGsRah.s:912    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/ccXGsRah.s:1059   .text.EnvoiMessage:0000000000000100 $d
     /tmp/ccXGsRah.s:1064   .text.ReceptionMessage:0000000000000000 $t
     /tmp/ccXGsRah.s:1069   .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/ccXGsRah.s:1257   .text.ReceptionMessage:000000000000010c $d
     /tmp/ccXGsRah.s:1263   .text.recoitpos:0000000000000000 $t
ARM GAS  /tmp/ccXGsRah.s 			page 49


     /tmp/ccXGsRah.s:1268   .text.recoitpos:0000000000000000 recoitpos
     /tmp/ccXGsRah.s:1308   .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/ccXGsRah.s:1313   .text.envoipos:0000000000000000 $t
     /tmp/ccXGsRah.s:1318   .text.envoipos:0000000000000000 envoipos
     /tmp/ccXGsRah.s:1350   .text.Traduction:0000000000000000 $t
     /tmp/ccXGsRah.s:1355   .text.Traduction:0000000000000000 Traduction
     /tmp/ccXGsRah.s:1441   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
     /tmp/ccXGsRah.s:1452   .text.WaitFor:0000000000000000 $t
     /tmp/ccXGsRah.s:1457   .text.WaitFor:0000000000000000 WaitFor
     /tmp/ccXGsRah.s:1483   .text.TaPosition:0000000000000000 $t
     /tmp/ccXGsRah.s:1488   .text.TaPosition:0000000000000000 TaPosition
     /tmp/ccXGsRah.s:1508   .text.ok:0000000000000000 $t
     /tmp/ccXGsRah.s:1513   .text.ok:0000000000000000 ok
     /tmp/ccXGsRah.s:1533   .text.Monte:0000000000000000 $t
     /tmp/ccXGsRah.s:1538   .text.Monte:0000000000000000 Monte
     /tmp/ccXGsRah.s:1562   .text.Descend:0000000000000000 $t
     /tmp/ccXGsRah.s:1567   .text.Descend:0000000000000000 Descend
     /tmp/ccXGsRah.s:1591   .text.Droite:0000000000000000 $t
     /tmp/ccXGsRah.s:1596   .text.Droite:0000000000000000 Droite
     /tmp/ccXGsRah.s:1620   .text.Gauche:0000000000000000 $t
     /tmp/ccXGsRah.s:1625   .text.Gauche:0000000000000000 Gauche
     /tmp/ccXGsRah.s:1649   .text.DansUnCoin:0000000000000000 $t
     /tmp/ccXGsRah.s:1654   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/ccXGsRah.s:1674   .text.Trouve:0000000000000000 $t
     /tmp/ccXGsRah.s:1679   .text.Trouve:0000000000000000 Trouve
     /tmp/ccXGsRah.s:1699   .text.Random:0000000000000000 $t
     /tmp/ccXGsRah.s:1704   .text.Random:0000000000000000 Random
     /tmp/ccXGsRah.s:1765   .text.Random:0000000000000044 $d
     /tmp/ccXGsRah.s:1770   .text.Non:0000000000000000 $t
     /tmp/ccXGsRah.s:1775   .text.Non:0000000000000000 Non
     /tmp/ccXGsRah.s:1795   .text.MemeCase:0000000000000000 $t
     /tmp/ccXGsRah.s:1800   .text.MemeCase:0000000000000000 MemeCase
     /tmp/ccXGsRah.s:1820   .text.TuEsCoin:0000000000000000 $t
     /tmp/ccXGsRah.s:1825   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/ccXGsRah.s:1845   .text.deplacement:0000000000000000 $t
     /tmp/ccXGsRah.s:1850   .text.deplacement:0000000000000000 deplacement
     /tmp/ccXGsRah.s:1917   .text.deplacement:0000000000000040 $d
     /tmp/ccXGsRah.s:1923   .text.motor:0000000000000000 $t
     /tmp/ccXGsRah.s:1928   .text.motor:0000000000000000 motor
     /tmp/ccXGsRah.s:1971   .text.motor:0000000000000030 $d
     /tmp/ccXGsRah.s:1976   .text.adcControl:0000000000000000 $t
     /tmp/ccXGsRah.s:1981   .text.adcControl:0000000000000000 adcControl
     /tmp/ccXGsRah.s:2023   .text.adcControl:000000000000002c $d
     /tmp/ccXGsRah.s:2031   .text.uart:0000000000000000 $t
     /tmp/ccXGsRah.s:2036   .text.uart:0000000000000000 uart
     /tmp/ccXGsRah.s:2086   .bss.flag_present:0000000000000000 flag_present
     /tmp/ccXGsRah.s:2139   .bss.flag_cap:0000000000000000 flag_cap
     /tmp/ccXGsRah.s:2114   .bss.flag_distance:0000000000000000 flag_distance
     /tmp/ccXGsRah.s:2100   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/ccXGsRah.s:2107   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/ccXGsRah.s:2153   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/ccXGsRah.s:2128   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/ccXGsRah.s:2121   .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccXGsRah.s:2146   .bss.adcValue:0000000000000000 adcValue
     /tmp/ccXGsRah.s:2093   .bss.flag_adc:0000000000000000 flag_adc
ARM GAS  /tmp/ccXGsRah.s 			page 50


     /tmp/ccXGsRah.s:2082   .bss.flag_present:0000000000000000 $d
     /tmp/ccXGsRah.s:2089   .bss.flag_adc:0000000000000000 $d
     /tmp/ccXGsRah.s:2096   .bss.flag_gauche:0000000000000000 $d
     /tmp/ccXGsRah.s:2103   .bss.flag_droite:0000000000000000 $d
     /tmp/ccXGsRah.s:2110   .bss.flag_distance:0000000000000000 $d
     /tmp/ccXGsRah.s:2117   .bss.deplacement_fini:0000000000000000 $d
     /tmp/ccXGsRah.s:2124   .bss.flag_haut:0000000000000000 $d
     /tmp/ccXGsRah.s:2131   .rodata.str1.4:0000000000000000 $d
     /tmp/ccXGsRah.s:2135   .bss.flag_cap:0000000000000000 $d
     /tmp/ccXGsRah.s:2142   .bss.adcValue:0000000000000000 $d
     /tmp/ccXGsRah.s:2149   .bss.flag_bas:0000000000000000 $d
>>>>>>> refs/remotes/origin/master
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
osDelay
HAL_ADC_GetValue
HAL_UART_Transmit
huart2
huart1
HAL_UART_Receive
HAL_GPIO_TogglePin
time
srand
rand
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
printf
