ARM GAS  /tmp/ccFI8abZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"freertos.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.alumer_gauche,"ax",%progbits
  22              		.align	2
  23              		.global	alumer_gauche
  24              		.thumb
  25              		.thumb_func
  27              	alumer_gauche:
  28              	.LFB129:
  29              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  /tmp/ccFI8abZ.s 			page 2


  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #include <time.h>
  59:Src/freertos.c **** #include <stdlib.h>
  60:Src/freertos.c **** 
  61:Src/freertos.c **** #define PWM_MAX 320
  62:Src/freertos.c **** #define DELAY 1000
  63:Src/freertos.c **** #define OK 0x06
  64:Src/freertos.c **** /* USER CODE END Includes */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* USER CODE BEGIN Variables */
  69:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  70:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  71:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  72:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** int flag_adc = 0;
  75:Src/freertos.c **** uint32_t adcValue = 0;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** int deplacement_fini = 0;
  78:Src/freertos.c **** 
  79:Src/freertos.c **** int flag_haut = 0;
  80:Src/freertos.c **** int flag_bas = 0;
  81:Src/freertos.c **** int flag_droite = 0;
  82:Src/freertos.c **** int flag_gauche = 0;
  83:Src/freertos.c **** 
  84:Src/freertos.c **** struct Robot {
  85:Src/freertos.c ****     int posx;
  86:Src/freertos.c ****     int posy;
ARM GAS  /tmp/ccFI8abZ.s 			page 3


  87:Src/freertos.c ****     int orientation;
  88:Src/freertos.c **** };
  89:Src/freertos.c **** 
  90:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  91:Src/freertos.c **** 
  92:Src/freertos.c **** /* USER CODE END Variables */
  93:Src/freertos.c **** 
  94:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  95:Src/freertos.c **** 
  96:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  97:Src/freertos.c **** 
  98:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
  99:Src/freertos.c **** void alumer_gauche(int sens) {
  30              		.loc 1 99 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 100:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  42              		.loc 1 100 0
  43 0002 0546     		mov	r5, r0
  44 0004 064C     		ldr	r4, .L3
  45 0006 B0FA80F2 		clz	r2, r0
  46 000a 5209     		lsrs	r2, r2, #5
  47 000c 0221     		movs	r1, #2
  48 000e 2046     		mov	r0, r4
  49              	.LVL1:
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  51              	.LVL2:
 101:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  52              		.loc 1 101 0
  53 0014 EAB2     		uxtb	r2, r5
  54 0016 0121     		movs	r1, #1
  55 0018 2046     		mov	r0, r4
  56 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58 001e 38BD     		pop	{r3, r4, r5, pc}
  59              	.LVL4:
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00140048 		.word	1207964672
  64              		.cfi_endproc
  65              	.LFE129:
  67              		.section	.text.alumer_droite,"ax",%progbits
  68              		.align	2
  69              		.global	alumer_droite
  70              		.thumb
  71              		.thumb_func
  73              	alumer_droite:
ARM GAS  /tmp/ccFI8abZ.s 			page 4


  74              	.LFB130:
 102:Src/freertos.c **** }
 103:Src/freertos.c **** 
 104:Src/freertos.c **** void alumer_droite(int sens) {
  75              		.loc 1 104 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL5:
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
 105:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  85              		.loc 1 105 0
  86 0002 0446     		mov	r4, r0
  87 0004 B0FA80F2 		clz	r2, r0
  88 0008 5209     		lsrs	r2, r2, #5
  89 000a 4FF40061 		mov	r1, #2048
  90 000e 4FF09040 		mov	r0, #1207959552
  91              	.LVL6:
  92 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL7:
 106:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  94              		.loc 1 106 0
  95 0016 E2B2     		uxtb	r2, r4
  96 0018 2021     		movs	r1, #32
  97 001a 0248     		ldr	r0, .L7
  98 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 100 0020 10BD     		pop	{r4, pc}
 101              	.LVL9:
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 00040048 		.word	1207960576
 106              		.cfi_endproc
 107              	.LFE130:
 109              		.section	.text.eteindre_gauche,"ax",%progbits
 110              		.align	2
 111              		.global	eteindre_gauche
 112              		.thumb
 113              		.thumb_func
 115              	eteindre_gauche:
 116              	.LFB131:
 107:Src/freertos.c **** }
 108:Src/freertos.c **** 
 109:Src/freertos.c **** void eteindre_gauche() {
 117              		.loc 1 109 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
ARM GAS  /tmp/ccFI8abZ.s 			page 5


 125              		.cfi_offset 14, -4
 110:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 126              		.loc 1 110 0
 127 0002 064C     		ldr	r4, .L11
 128 0004 0022     		movs	r2, #0
 129 0006 0221     		movs	r1, #2
 130 0008 2046     		mov	r0, r4
 131 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
 111:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 133              		.loc 1 111 0
 134 000e 0022     		movs	r2, #0
 135 0010 0121     		movs	r1, #1
 136 0012 2046     		mov	r0, r4
 137 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL11:
 139 0018 10BD     		pop	{r4, pc}
 140              	.L12:
 141 001a 00BF     		.align	2
 142              	.L11:
 143 001c 00140048 		.word	1207964672
 144              		.cfi_endproc
 145              	.LFE131:
 147              		.section	.text.eteindre_droite,"ax",%progbits
 148              		.align	2
 149              		.global	eteindre_droite
 150              		.thumb
 151              		.thumb_func
 153              	eteindre_droite:
 154              	.LFB132:
 112:Src/freertos.c **** }
 113:Src/freertos.c **** 
 114:Src/freertos.c **** void eteindre_droite() {
 155              		.loc 1 114 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
 115:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 164              		.loc 1 115 0
 165 0002 0022     		movs	r2, #0
 166 0004 4FF40061 		mov	r1, #2048
 167 0008 4FF09040 		mov	r0, #1207959552
 168 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL12:
 116:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 170              		.loc 1 116 0
 171 0010 0022     		movs	r2, #0
 172 0012 2021     		movs	r1, #32
 173 0014 0148     		ldr	r0, .L15
 174 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL13:
 176 001a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccFI8abZ.s 			page 6


 177              	.L16:
 178              		.align	2
 179              	.L15:
 180 001c 00040048 		.word	1207960576
 181              		.cfi_endproc
 182              	.LFE132:
 184              		.section	.text.pwm_max,"ax",%progbits
 185              		.align	2
 186              		.global	pwm_max
 187              		.thumb
 188              		.thumb_func
 190              	pwm_max:
 191              	.LFB133:
 117:Src/freertos.c **** }
 118:Src/freertos.c **** 
 119:Src/freertos.c **** void pwm_max() {
 192              		.loc 1 119 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 120:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 197              		.loc 1 120 0
 198 0000 034B     		ldr	r3, .L18
 199 0002 1B68     		ldr	r3, [r3]
 200 0004 4FF4A072 		mov	r2, #320
 201 0008 5A63     		str	r2, [r3, #52]
 121:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 202              		.loc 1 121 0
 203 000a 1A64     		str	r2, [r3, #64]
 204 000c 7047     		bx	lr
 205              	.L19:
 206 000e 00BF     		.align	2
 207              	.L18:
 208 0010 00000000 		.word	htim3
 209              		.cfi_endproc
 210              	.LFE133:
 212              		.section	.text.accelerer,"ax",%progbits
 213              		.align	2
 214              		.global	accelerer
 215              		.thumb
 216              		.thumb_func
 218              	accelerer:
 219              	.LFB134:
 122:Src/freertos.c **** }
 123:Src/freertos.c **** 
 124:Src/freertos.c **** void accelerer() {
 220              		.loc 1 124 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229              	.LVL14:
ARM GAS  /tmp/ccFI8abZ.s 			page 7


 125:Src/freertos.c ****     int pwm = 0;
 230              		.loc 1 125 0
 231 0002 0024     		movs	r4, #0
 126:Src/freertos.c ****     while (pwm != PWM_MAX) {
 232              		.loc 1 126 0
 233 0004 07E0     		b	.L21
 234              	.LVL15:
 235              	.L22:
 127:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 236              		.loc 1 127 0
 237 0006 064B     		ldr	r3, .L24
 238 0008 1B68     		ldr	r3, [r3]
 239 000a 5C63     		str	r4, [r3, #52]
 128:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 240              		.loc 1 128 0
 241 000c 1C64     		str	r4, [r3, #64]
 129:Src/freertos.c ****         pwm += 20;
 242              		.loc 1 129 0
 243 000e 1434     		adds	r4, r4, #20
 244              	.LVL16:
 130:Src/freertos.c ****         osDelay(50);
 245              		.loc 1 130 0
 246 0010 3220     		movs	r0, #50
 247 0012 FFF7FEFF 		bl	osDelay
 248              	.LVL17:
 249              	.L21:
 126:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 250              		.loc 1 126 0
 251 0016 B4F5A07F 		cmp	r4, #320
 252 001a F4D1     		bne	.L22
 131:Src/freertos.c ****     }
 132:Src/freertos.c **** }
 253              		.loc 1 132 0
 254 001c 10BD     		pop	{r4, pc}
 255              	.LVL18:
 256              	.L25:
 257 001e 00BF     		.align	2
 258              	.L24:
 259 0020 00000000 		.word	htim3
 260              		.cfi_endproc
 261              	.LFE134:
 263              		.section	.text.deccelerer,"ax",%progbits
 264              		.align	2
 265              		.global	deccelerer
 266              		.thumb
 267              		.thumb_func
 269              	deccelerer:
 270              	.LFB135:
 133:Src/freertos.c **** 
 134:Src/freertos.c **** void deccelerer() {
 271              		.loc 1 134 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFI8abZ.s 			page 8


 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280              	.LVL19:
 135:Src/freertos.c ****     int pwm = PWM_MAX;
 281              		.loc 1 135 0
 282 0002 4FF4A074 		mov	r4, #320
 136:Src/freertos.c ****     while (pwm != 0) {
 283              		.loc 1 136 0
 284 0006 07E0     		b	.L27
 285              	.LVL20:
 286              	.L28:
 137:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 287              		.loc 1 137 0
 288 0008 054B     		ldr	r3, .L30
 289 000a 1B68     		ldr	r3, [r3]
 290 000c 5C63     		str	r4, [r3, #52]
 138:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 291              		.loc 1 138 0
 292 000e 1C64     		str	r4, [r3, #64]
 139:Src/freertos.c ****         pwm -= 20;
 293              		.loc 1 139 0
 294 0010 143C     		subs	r4, r4, #20
 295              	.LVL21:
 140:Src/freertos.c ****         osDelay(50);
 296              		.loc 1 140 0
 297 0012 3220     		movs	r0, #50
 298 0014 FFF7FEFF 		bl	osDelay
 299              	.LVL22:
 300              	.L27:
 136:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 301              		.loc 1 136 0
 302 0018 002C     		cmp	r4, #0
 303 001a F5D1     		bne	.L28
 141:Src/freertos.c ****     }
 142:Src/freertos.c **** }
 304              		.loc 1 142 0
 305 001c 10BD     		pop	{r4, pc}
 306              	.LVL23:
 307              	.L31:
 308 001e 00BF     		.align	2
 309              	.L30:
 310 0020 00000000 		.word	htim3
 311              		.cfi_endproc
 312              	.LFE135:
 314              		.section	.text.reculer_robot,"ax",%progbits
 315              		.align	2
 316              		.global	reculer_robot
 317              		.thumb
 318              		.thumb_func
 320              	reculer_robot:
 321              	.LFB136:
 143:Src/freertos.c **** 
 144:Src/freertos.c **** void reculer_robot() {
 322              		.loc 1 144 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFI8abZ.s 			page 9


 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 145:Src/freertos.c ****     alumer_droite(1);
 331              		.loc 1 145 0
 332 0002 0120     		movs	r0, #1
 333 0004 FFF7FEFF 		bl	alumer_droite
 334              	.LVL24:
 146:Src/freertos.c ****     alumer_gauche(1);
 335              		.loc 1 146 0
 336 0008 0120     		movs	r0, #1
 337 000a FFF7FEFF 		bl	alumer_gauche
 338              	.LVL25:
 147:Src/freertos.c ****     accelerer();
 339              		.loc 1 147 0
 340 000e FFF7FEFF 		bl	accelerer
 341              	.LVL26:
 148:Src/freertos.c ****     osDelay(1000);
 342              		.loc 1 148 0
 343 0012 4FF47A70 		mov	r0, #1000
 344 0016 FFF7FEFF 		bl	osDelay
 345              	.LVL27:
 149:Src/freertos.c ****     deccelerer();
 346              		.loc 1 149 0
 347 001a FFF7FEFF 		bl	deccelerer
 348              	.LVL28:
 150:Src/freertos.c ****     eteindre_droite();
 349              		.loc 1 150 0
 350 001e FFF7FEFF 		bl	eteindre_droite
 351              	.LVL29:
 151:Src/freertos.c ****     eteindre_gauche();
 352              		.loc 1 151 0
 353 0022 FFF7FEFF 		bl	eteindre_gauche
 354              	.LVL30:
 152:Src/freertos.c ****     deplacement_fini = 1;
 355              		.loc 1 152 0
 356 0026 0122     		movs	r2, #1
 357 0028 014B     		ldr	r3, .L34
 358 002a 1A60     		str	r2, [r3]
 359 002c 08BD     		pop	{r3, pc}
 360              	.L35:
 361 002e 00BF     		.align	2
 362              	.L34:
 363 0030 00000000 		.word	.LANCHOR0
 364              		.cfi_endproc
 365              	.LFE136:
 367              		.section	.text.avancer_robot,"ax",%progbits
 368              		.align	2
 369              		.global	avancer_robot
 370              		.thumb
 371              		.thumb_func
 373              	avancer_robot:
 374              	.LFB137:
 153:Src/freertos.c **** }
 154:Src/freertos.c **** 
ARM GAS  /tmp/ccFI8abZ.s 			page 10


 155:Src/freertos.c **** void avancer_robot() {
 375              		.loc 1 155 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI7:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 156:Src/freertos.c ****     alumer_droite(0);
 384              		.loc 1 156 0
 385 0002 0020     		movs	r0, #0
 386 0004 FFF7FEFF 		bl	alumer_droite
 387              	.LVL31:
 157:Src/freertos.c ****     alumer_gauche(0);
 388              		.loc 1 157 0
 389 0008 0020     		movs	r0, #0
 390 000a FFF7FEFF 		bl	alumer_gauche
 391              	.LVL32:
 158:Src/freertos.c ****     accelerer();
 392              		.loc 1 158 0
 393 000e FFF7FEFF 		bl	accelerer
 394              	.LVL33:
 159:Src/freertos.c ****     osDelay(1000);
 395              		.loc 1 159 0
 396 0012 4FF47A70 		mov	r0, #1000
 397 0016 FFF7FEFF 		bl	osDelay
 398              	.LVL34:
 160:Src/freertos.c ****     deccelerer();
 399              		.loc 1 160 0
 400 001a FFF7FEFF 		bl	deccelerer
 401              	.LVL35:
 161:Src/freertos.c ****     eteindre_droite();
 402              		.loc 1 161 0
 403 001e FFF7FEFF 		bl	eteindre_droite
 404              	.LVL36:
 162:Src/freertos.c ****     eteindre_gauche();
 405              		.loc 1 162 0
 406 0022 FFF7FEFF 		bl	eteindre_gauche
 407              	.LVL37:
 163:Src/freertos.c ****     deplacement_fini = 1;
 408              		.loc 1 163 0
 409 0026 0122     		movs	r2, #1
 410 0028 014B     		ldr	r3, .L38
 411 002a 1A60     		str	r2, [r3]
 412 002c 08BD     		pop	{r3, pc}
 413              	.L39:
 414 002e 00BF     		.align	2
 415              	.L38:
 416 0030 00000000 		.word	.LANCHOR0
 417              		.cfi_endproc
 418              	.LFE137:
 420              		.section	.text.pivoter_gauche,"ax",%progbits
 421              		.align	2
 422              		.global	pivoter_gauche
 423              		.thumb
ARM GAS  /tmp/ccFI8abZ.s 			page 11


 424              		.thumb_func
 426              	pivoter_gauche:
 427              	.LFB138:
 164:Src/freertos.c **** 
 165:Src/freertos.c **** }
 166:Src/freertos.c **** 
 167:Src/freertos.c **** void pivoter_gauche() {
 428              		.loc 1 167 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 08B5     		push	{r3, lr}
 433              	.LCFI8:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 168:Src/freertos.c ****     pwm_max();
 437              		.loc 1 168 0
 438 0002 FFF7FEFF 		bl	pwm_max
 439              	.LVL38:
 169:Src/freertos.c ****     alumer_gauche(1);
 440              		.loc 1 169 0
 441 0006 0120     		movs	r0, #1
 442 0008 FFF7FEFF 		bl	alumer_gauche
 443              	.LVL39:
 170:Src/freertos.c ****     alumer_droite(0);
 444              		.loc 1 170 0
 445 000c 0020     		movs	r0, #0
 446 000e FFF7FEFF 		bl	alumer_droite
 447              	.LVL40:
 171:Src/freertos.c ****     osDelay(230);
 448              		.loc 1 171 0
 449 0012 E620     		movs	r0, #230
 450 0014 FFF7FEFF 		bl	osDelay
 451              	.LVL41:
 172:Src/freertos.c ****     deccelerer();
 452              		.loc 1 172 0
 453 0018 FFF7FEFF 		bl	deccelerer
 454              	.LVL42:
 173:Src/freertos.c ****     eteindre_droite();
 455              		.loc 1 173 0
 456 001c FFF7FEFF 		bl	eteindre_droite
 457              	.LVL43:
 174:Src/freertos.c ****     eteindre_gauche();
 458              		.loc 1 174 0
 459 0020 FFF7FEFF 		bl	eteindre_gauche
 460              	.LVL44:
 175:Src/freertos.c ****     deplacement_fini = 1;
 461              		.loc 1 175 0
 462 0024 0122     		movs	r2, #1
 463 0026 014B     		ldr	r3, .L42
 464 0028 1A60     		str	r2, [r3]
 465 002a 08BD     		pop	{r3, pc}
 466              	.L43:
 467              		.align	2
 468              	.L42:
 469 002c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccFI8abZ.s 			page 12


 470              		.cfi_endproc
 471              	.LFE138:
 473              		.section	.text.pivoter_droite,"ax",%progbits
 474              		.align	2
 475              		.global	pivoter_droite
 476              		.thumb
 477              		.thumb_func
 479              	pivoter_droite:
 480              	.LFB139:
 176:Src/freertos.c **** }
 177:Src/freertos.c **** 
 178:Src/freertos.c **** void pivoter_droite() {
 481              		.loc 1 178 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 179:Src/freertos.c ****     pwm_max();
 490              		.loc 1 179 0
 491 0002 FFF7FEFF 		bl	pwm_max
 492              	.LVL45:
 180:Src/freertos.c ****     alumer_droite(1);
 493              		.loc 1 180 0
 494 0006 0120     		movs	r0, #1
 495 0008 FFF7FEFF 		bl	alumer_droite
 496              	.LVL46:
 181:Src/freertos.c ****     alumer_gauche(0);
 497              		.loc 1 181 0
 498 000c 0020     		movs	r0, #0
 499 000e FFF7FEFF 		bl	alumer_gauche
 500              	.LVL47:
 182:Src/freertos.c ****     osDelay(220);
 501              		.loc 1 182 0
 502 0012 DC20     		movs	r0, #220
 503 0014 FFF7FEFF 		bl	osDelay
 504              	.LVL48:
 183:Src/freertos.c ****     deccelerer();
 505              		.loc 1 183 0
 506 0018 FFF7FEFF 		bl	deccelerer
 507              	.LVL49:
 184:Src/freertos.c ****     eteindre_droite();
 508              		.loc 1 184 0
 509 001c FFF7FEFF 		bl	eteindre_droite
 510              	.LVL50:
 185:Src/freertos.c ****     eteindre_gauche();
 511              		.loc 1 185 0
 512 0020 FFF7FEFF 		bl	eteindre_gauche
 513              	.LVL51:
 186:Src/freertos.c ****     deplacement_fini = 1;
 514              		.loc 1 186 0
 515 0024 0122     		movs	r2, #1
 516 0026 014B     		ldr	r3, .L46
 517 0028 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccFI8abZ.s 			page 13


 518 002a 08BD     		pop	{r3, pc}
 519              	.L47:
 520              		.align	2
 521              	.L46:
 522 002c 00000000 		.word	.LANCHOR0
 523              		.cfi_endproc
 524              	.LFE139:
 526              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 527              		.align	2
 528              		.global	HAL_ADC_ConvCpltCallback
 529              		.thumb
 530              		.thumb_func
 532              	HAL_ADC_ConvCpltCallback:
 533              	.LFB140:
 187:Src/freertos.c **** }
 188:Src/freertos.c **** /* END Fonctions pour les moteurs */
 189:Src/freertos.c **** 
 190:Src/freertos.c **** /* BEGIN Fonctions ADC */
 191:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 534              		.loc 1 191 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL52:
 539 0000 08B5     		push	{r3, lr}
 540              	.LCFI10:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 192:Src/freertos.c ****     UNUSED(hadc);
 193:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 544              		.loc 1 193 0
 545 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 546              	.LVL53:
 547 0006 034B     		ldr	r3, .L50
 548 0008 1860     		str	r0, [r3]
 194:Src/freertos.c ****     flag_adc = 1;
 549              		.loc 1 194 0
 550 000a 0122     		movs	r2, #1
 551 000c 024B     		ldr	r3, .L50+4
 552 000e 1A60     		str	r2, [r3]
 553 0010 08BD     		pop	{r3, pc}
 554              	.L51:
 555 0012 00BF     		.align	2
 556              	.L50:
 557 0014 00000000 		.word	.LANCHOR1
 558 0018 00000000 		.word	.LANCHOR2
 559              		.cfi_endproc
 560              	.LFE140:
 562              		.section	.text._write,"ax",%progbits
 563              		.align	2
 564              		.global	_write
 565              		.thumb
 566              		.thumb_func
 568              	_write:
 569              	.LFB141:
 195:Src/freertos.c **** }
ARM GAS  /tmp/ccFI8abZ.s 			page 14


 196:Src/freertos.c **** 
 197:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 570              		.loc 1 197 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              	.LVL54:
 575 0000 10B5     		push	{r4, lr}
 576              	.LCFI11:
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 4, -8
 579              		.cfi_offset 14, -4
 580 0002 1446     		mov	r4, r2
 198:Src/freertos.c ****     UNUSED(file);
 199:Src/freertos.c **** 
 200:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 581              		.loc 1 200 0
 582 0004 42F21073 		movw	r3, #10000
 583 0008 92B2     		uxth	r2, r2
 584              	.LVL55:
 585 000a 0248     		ldr	r0, .L54
 586              	.LVL56:
 587 000c FFF7FEFF 		bl	HAL_UART_Transmit
 588              	.LVL57:
 201:Src/freertos.c ****     return len;
 202:Src/freertos.c **** }
 589              		.loc 1 202 0
 590 0010 2046     		mov	r0, r4
 591 0012 10BD     		pop	{r4, pc}
 592              	.LVL58:
 593              	.L55:
 594              		.align	2
 595              	.L54:
 596 0014 00000000 		.word	huart2
 597              		.cfi_endproc
 598              	.LFE141:
 600              		.section	.text.EnvoiMessage,"ax",%progbits
 601              		.align	2
 602              		.global	EnvoiMessage
 603              		.thumb
 604              		.thumb_func
 606              	EnvoiMessage:
 607              	.LFB142:
 203:Src/freertos.c **** /* END Fonctions ADC */
 204:Src/freertos.c **** 
 205:Src/freertos.c **** /* BEGIN Fonctions UART */
 206:Src/freertos.c **** void EnvoiMessage(uint8_t data){
 608              		.loc 1 206 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 8
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL59:
 613 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 614              	.LCFI12:
 615              		.cfi_def_cfa_offset 32
 616              		.cfi_offset 4, -32
 617              		.cfi_offset 5, -28
ARM GAS  /tmp/ccFI8abZ.s 			page 15


 618              		.cfi_offset 6, -24
 619              		.cfi_offset 7, -20
 620              		.cfi_offset 8, -16
 621              		.cfi_offset 9, -12
 622              		.cfi_offset 10, -8
 623              		.cfi_offset 14, -4
 624 0004 82B0     		sub	sp, sp, #8
 625              	.LCFI13:
 626              		.cfi_def_cfa_offset 40
 207:Src/freertos.c ****     uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit, k, 
 208:Src/freertos.c **** 
 209:Src/freertos.c ****     eun = (data & 0x01);
 627              		.loc 1 209 0
 628 0006 00F00107 		and	r7, r0, #1
 629              	.LVL60:
 210:Src/freertos.c ****     edeux = (data & 0x02)/2;
 630              		.loc 1 210 0
 631 000a C0F34005 		ubfx	r5, r0, #1, #1
 632              	.LVL61:
 211:Src/freertos.c ****     equatre =(data & 0x04)/4;
 633              		.loc 1 211 0
 634 000e 00F00403 		and	r3, r0, #4
 635 0012 DBB2     		uxtb	r3, r3
 636 0014 0033     		adds	r3, r3, #0
 637 0016 18BF     		it	ne
 638 0018 0123     		movne	r3, #1
 639              	.LVL62:
 212:Src/freertos.c ****     ehuit = (data & 0x08)/8;
 640              		.loc 1 212 0
 641 001a 00F00801 		and	r1, r0, #8
 642 001e C9B2     		uxtb	r1, r1
 643 0020 C910     		asrs	r1, r1, #3
 644 0022 CEB2     		uxtb	r6, r1
 645              	.LVL63:
 213:Src/freertos.c ****     eseize = (data & 0x10)/16;
 646              		.loc 1 213 0
 647 0024 00F01004 		and	r4, r0, #16
 648 0028 E4B2     		uxtb	r4, r4
 649 002a 2411     		asrs	r4, r4, #4
 650 002c 5FFA84F8 		uxtb	r8, r4
 651              	.LVL64:
 214:Src/freertos.c ****     etrentedeux = (data & 0x20)/32;
 652              		.loc 1 214 0
 653 0030 00F02002 		and	r2, r0, #32
 654 0034 D2B2     		uxtb	r2, r2
 655 0036 0032     		adds	r2, r2, #0
 656 0038 18BF     		it	ne
 657 003a 0122     		movne	r2, #1
 658              	.LVL65:
 215:Src/freertos.c ****     esoixantequatre = (data & 0x40)/64;
 659              		.loc 1 215 0
 660 003c 00F04009 		and	r9, r0, #64
 661 0040 5FFA89F9 		uxtb	r9, r9
 662 0044 4FEAA919 		asr	r9, r9, #6
 663 0048 5FFA89FC 		uxtb	ip, r9
 664              	.LVL66:
 216:Src/freertos.c ****     ecentvingthuit = (data & 0x80)/128;
ARM GAS  /tmp/ccFI8abZ.s 			page 16


 665              		.loc 1 216 0
 666 004c 00F08000 		and	r0, r0, #128
 667              	.LVL67:
 668 0050 0030     		adds	r0, r0, #0
 669 0052 18BF     		it	ne
 670 0054 0120     		movne	r0, #1
 671              	.LVL68:
 217:Src/freertos.c **** 
 218:Src/freertos.c ****     b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequatre^e
 672              		.loc 1 218 0
 673 0056 82EA000A 		eor	r10, r2, r0
 674 005a 8CEA000E 		eor	lr, ip, r0
 675 005e 0EEB4A0E 		add	lr, lr, r10, lsl #1
 676 0062 82EA0C0C 		eor	ip, r2, ip
 677              	.LVL69:
 678 0066 0CEB4E0E 		add	lr, ip, lr, lsl #1
 679 006a 00EB4E00 		add	r0, r0, lr, lsl #1
 680              	.LVL70:
 681 006e 09EB4000 		add	r0, r9, r0, lsl #1
 682 0072 02EB4000 		add	r0, r2, r0, lsl #1
 683 0076 8DF80700 		strb	r0, [sp, #7]
 219:Src/freertos.c ****     k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + equatr
 684              		.loc 1 219 0
 685 007a 83EA0800 		eor	r0, r3, r8
 686 007e 86EA0802 		eor	r2, r6, r8
 687              	.LVL71:
 688 0082 02EB4002 		add	r2, r2, r0, lsl #1
 689 0086 5E40     		eors	r6, r6, r3
 690              	.LVL72:
 691 0088 06EB4206 		add	r6, r6, r2, lsl #1
 692 008c 04EB4606 		add	r6, r4, r6, lsl #1
 693 0090 01EB4601 		add	r1, r1, r6, lsl #1
 694              	.LVL73:
 695 0094 03EB4103 		add	r3, r3, r1, lsl #1
 696              	.LVL74:
 697 0098 8DF80630 		strb	r3, [sp, #6]
 698 009c EBB2     		uxtb	r3, r5
 220:Src/freertos.c ****     z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 699              		.loc 1 220 0
 700 009e 03EB4702 		add	r2, r3, r7, lsl #1
 701 00a2 7D40     		eors	r5, r5, r7
 702              	.LVL75:
 703 00a4 05EB4205 		add	r5, r5, r2, lsl #1
 704 00a8 03EB8505 		add	r5, r3, r5, lsl #2
 705 00ac 07EB4507 		add	r7, r7, r5, lsl #1
 706              	.LVL76:
 707 00b0 8DF80570 		strb	r7, [sp, #5]
 221:Src/freertos.c **** 
 222:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 708              		.loc 1 222 0
 709 00b4 124C     		ldr	r4, .L64
 710 00b6 4EF6EE63 		movw	r3, #61166
 711              	.LVL77:
 712 00ba 0122     		movs	r2, #1
 713 00bc 0DF10701 		add	r1, sp, #7
 714 00c0 2046     		mov	r0, r4
 715 00c2 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccFI8abZ.s 			page 17


 716              	.LVL78:
 223:Src/freertos.c ****     osDelay(2);
 717              		.loc 1 223 0
 718 00c6 0220     		movs	r0, #2
 719 00c8 FFF7FEFF 		bl	osDelay
 720              	.LVL79:
 224:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 721              		.loc 1 224 0
 722 00cc 4EF6EE63 		movw	r3, #61166
 723 00d0 0122     		movs	r2, #1
 724 00d2 0DF10601 		add	r1, sp, #6
 725 00d6 2046     		mov	r0, r4
 726 00d8 FFF7FEFF 		bl	HAL_UART_Transmit
 727              	.LVL80:
 225:Src/freertos.c ****     osDelay(2);
 728              		.loc 1 225 0
 729 00dc 0220     		movs	r0, #2
 730 00de FFF7FEFF 		bl	osDelay
 731              	.LVL81:
 226:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 732              		.loc 1 226 0
 733 00e2 4EF6EE63 		movw	r3, #61166
 734 00e6 0122     		movs	r2, #1
 735 00e8 0DF10501 		add	r1, sp, #5
 736 00ec 2046     		mov	r0, r4
 737 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 738              	.LVL82:
 227:Src/freertos.c ****     osDelay(2);
 739              		.loc 1 227 0
 740 00f2 0220     		movs	r0, #2
 741 00f4 FFF7FEFF 		bl	osDelay
 742              	.LVL83:
 228:Src/freertos.c **** }
 743              		.loc 1 228 0
 744 00f8 02B0     		add	sp, sp, #8
 745              	.LCFI14:
 746              		.cfi_def_cfa_offset 32
 747              		@ sp needed
 748 00fa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 749              	.LVL84:
 750              	.L65:
 751 00fe 00BF     		.align	2
 752              	.L64:
 753 0100 00000000 		.word	huart1
 754              		.cfi_endproc
 755              	.LFE142:
 757              		.section	.text.ReceptionMessage,"ax",%progbits
 758              		.align	2
 759              		.global	ReceptionMessage
 760              		.thumb
 761              		.thumb_func
 763              	ReceptionMessage:
 764              	.LFB143:
 229:Src/freertos.c **** 
 230:Src/freertos.c **** int ReceptionMessage(){
 765              		.loc 1 230 0
 766              		.cfi_startproc
ARM GAS  /tmp/ccFI8abZ.s 			page 18


 767              		@ args = 0, pretend = 0, frame = 8
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 770              	.LCFI15:
 771              		.cfi_def_cfa_offset 28
 772              		.cfi_offset 4, -28
 773              		.cfi_offset 5, -24
 774              		.cfi_offset 6, -20
 775              		.cfi_offset 7, -16
 776              		.cfi_offset 8, -12
 777              		.cfi_offset 9, -8
 778              		.cfi_offset 14, -4
 779 0004 83B0     		sub	sp, sp, #12
 780              	.LCFI16:
 781              		.cfi_def_cfa_offset 40
 231:Src/freertos.c ****     uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 232:Src/freertos.c ****     uint8_t rec[3];
 233:Src/freertos.c ****     HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 782              		.loc 1 233 0
 783 0006 404C     		ldr	r4, .L84
 784 0008 4EF6EE63 		movw	r3, #61166
 785 000c 0122     		movs	r2, #1
 786 000e 0DF10701 		add	r1, sp, #7
 787 0012 2046     		mov	r0, r4
 788 0014 FFF7FEFF 		bl	HAL_UART_Receive
 789              	.LVL85:
 234:Src/freertos.c ****     HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
 790              		.loc 1 234 0
 791 0018 4EF6EE63 		movw	r3, #61166
 792 001c 0122     		movs	r2, #1
 793 001e 0DF10601 		add	r1, sp, #6
 794 0022 2046     		mov	r0, r4
 795 0024 FFF7FEFF 		bl	HAL_UART_Receive
 796              	.LVL86:
 235:Src/freertos.c ****     HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 797              		.loc 1 235 0
 798 0028 4EF6EE63 		movw	r3, #61166
 799 002c 0122     		movs	r2, #1
 800 002e 0DF10501 		add	r1, sp, #5
 801 0032 2046     		mov	r0, r4
 802 0034 FFF7FEFF 		bl	HAL_UART_Receive
 803              	.LVL87:
 236:Src/freertos.c **** 
 237:Src/freertos.c ****     rec[0] = r;
 804              		.loc 1 237 0
 805 0038 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 806 003c 8DF800C0 		strb	ip, [sp]
 238:Src/freertos.c ****     rec[1] = m;
 807              		.loc 1 238 0
 808 0040 9DF80660 		ldrb	r6, [sp, #6]	@ zero_extendqisi2
 809 0044 8DF80160 		strb	r6, [sp, #1]
 239:Src/freertos.c ****     rec[2] = n;
 810              		.loc 1 239 0
 811 0048 9DF80570 		ldrb	r7, [sp, #5]	@ zero_extendqisi2
 812 004c 8DF80270 		strb	r7, [sp, #2]
 813              	.LVL88:
 240:Src/freertos.c ****     ok = 1;
ARM GAS  /tmp/ccFI8abZ.s 			page 19


 241:Src/freertos.c ****     for (i =0; i<3; i++) {
 814              		.loc 1 241 0
 815 0050 0024     		movs	r4, #0
 240:Src/freertos.c ****     ok = 1;
 816              		.loc 1 240 0
 817 0052 0125     		movs	r5, #1
 818              		.loc 1 241 0
 819 0054 30E0     		b	.L67
 820              	.LVL89:
 821              	.L75:
 242:Src/freertos.c ****         run = (rec[i] & 0x01);
 822              		.loc 1 242 0
 823 0056 02AB     		add	r3, sp, #8
 824 0058 2344     		add	r3, r3, r4
 825 005a 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 826 005e 03F00108 		and	r8, r3, #1
 827              	.LVL90:
 243:Src/freertos.c ****         rdeux = (rec[i] & 0x02)/2;
 828              		.loc 1 243 0
 829 0062 C3F3400E 		ubfx	lr, r3, #1, #1
 830              	.LVL91:
 244:Src/freertos.c ****         rquatre =(rec[i] & 0x04)/4;
 831              		.loc 1 244 0
 832 0066 03F00402 		and	r2, r3, #4
 833 006a D2B2     		uxtb	r2, r2
 834 006c 0032     		adds	r2, r2, #0
 835 006e 18BF     		it	ne
 836 0070 0122     		movne	r2, #1
 837              	.LVL92:
 245:Src/freertos.c ****         rhuit = (rec[i] & 0x08)/8;
 838              		.loc 1 245 0
 839 0072 03F00801 		and	r1, r3, #8
 840 0076 C9B2     		uxtb	r1, r1
 841 0078 0031     		adds	r1, r1, #0
 842 007a 18BF     		it	ne
 843 007c 0121     		movne	r1, #1
 844              	.LVL93:
 246:Src/freertos.c ****         rseize = (rec[i] & 0x10)/16;
 845              		.loc 1 246 0
 846 007e 03F01000 		and	r0, r3, #16
 847 0082 C0B2     		uxtb	r0, r0
 848 0084 0030     		adds	r0, r0, #0
 849 0086 18BF     		it	ne
 850 0088 0120     		movne	r0, #1
 851              	.LVL94:
 247:Src/freertos.c ****         rtrentedeux = (rec[i] & 0x20)/32;
 852              		.loc 1 247 0
 853 008a 03F02003 		and	r3, r3, #32
 854 008e DBB2     		uxtb	r3, r3
 855 0090 0033     		adds	r3, r3, #0
 856 0092 18BF     		it	ne
 857 0094 0123     		movne	r3, #1
 858              	.LVL95:
 248:Src/freertos.c ****         if ((run^rdeux) != rhuit) ok =0;
 859              		.loc 1 248 0
 860 0096 88EA0E09 		eor	r9, r8, lr
 861 009a 4945     		cmp	r1, r9
ARM GAS  /tmp/ccFI8abZ.s 			page 20


 862 009c 00D0     		beq	.L72
 863 009e 0025     		movs	r5, #0
 864              	.LVL96:
 865              	.L72:
 249:Src/freertos.c ****         if ((rdeux^rquatre) != rseize) ok =0;
 866              		.loc 1 249 0
 867 00a0 8EEA020E 		eor	lr, lr, r2
 868              	.LVL97:
 869 00a4 7045     		cmp	r0, lr
 870 00a6 00D0     		beq	.L73
 871 00a8 0025     		movs	r5, #0
 872              	.LVL98:
 873              	.L73:
 250:Src/freertos.c ****         if ((rquatre^run) != rtrentedeux) ok = 0;
 874              		.loc 1 250 0
 875 00aa 88EA0202 		eor	r2, r8, r2
 876              	.LVL99:
 877 00ae 9342     		cmp	r3, r2
 878 00b0 00D0     		beq	.L74
 879 00b2 0025     		movs	r5, #0
 880              	.LVL100:
 881              	.L74:
 241:Src/freertos.c ****         run = (rec[i] & 0x01);
 882              		.loc 1 241 0 discriminator 2
 883 00b4 0134     		adds	r4, r4, #1
 884              	.LVL101:
 885 00b6 E4B2     		uxtb	r4, r4
 886              	.LVL102:
 887              	.L67:
 241:Src/freertos.c ****         run = (rec[i] & 0x01);
 888              		.loc 1 241 0 is_stmt 0 discriminator 1
 889 00b8 022C     		cmp	r4, #2
 890 00ba CCD9     		bls	.L75
 251:Src/freertos.c ****     }
 252:Src/freertos.c ****     r =  (r & 0x07)*32;
 891              		.loc 1 252 0 is_stmt 1
 892 00bc 0CF0070C 		and	ip, ip, #7
 893 00c0 4FEA4C1C 		lsl	ip, ip, #5
 894 00c4 8DF807C0 		strb	ip, [sp, #7]
 253:Src/freertos.c ****     m =  (m & 0x07)*4;
 895              		.loc 1 253 0
 896 00c8 06F00702 		and	r2, r6, #7
 897 00cc 9300     		lsls	r3, r2, #2
 898 00ce 8DF80630 		strb	r3, [sp, #6]
 254:Src/freertos.c ****     n =  (n & 0x07);
 899              		.loc 1 254 0
 900 00d2 07F00707 		and	r7, r7, #7
 901 00d6 8DF80570 		strb	r7, [sp, #5]
 255:Src/freertos.c ****     v =  r + m + n;
 902              		.loc 1 255 0
 903 00da 6344     		add	r3, r3, ip
 904 00dc 3B44     		add	r3, r3, r7
 905 00de DCB2     		uxtb	r4, r3
 906              	.LVL103:
 256:Src/freertos.c ****     if (ok == 1) {
 907              		.loc 1 256 0
 908 00e0 5DB9     		cbnz	r5, .L82
ARM GAS  /tmp/ccFI8abZ.s 			page 21


 257:Src/freertos.c ****         for (int i = 0; i<5; i++) {
 258:Src/freertos.c ****             HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 259:Src/freertos.c ****             osDelay(500);
 260:Src/freertos.c ****         }
 261:Src/freertos.c ****         return(v);
 262:Src/freertos.c ****     }
 263:Src/freertos.c ****     else return(0);
 909              		.loc 1 263 0
 910 00e2 0020     		movs	r0, #0
 911 00e4 0DE0     		b	.L77
 912              	.LVL104:
 913              	.L78:
 914              	.LBB2:
 258:Src/freertos.c ****             osDelay(500);
 915              		.loc 1 258 0 discriminator 3
 916 00e6 4021     		movs	r1, #64
 917 00e8 0848     		ldr	r0, .L84+4
 918 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 919              	.LVL105:
 259:Src/freertos.c ****         }
 920              		.loc 1 259 0 discriminator 3
 921 00ee 4FF4FA70 		mov	r0, #500
 922 00f2 FFF7FEFF 		bl	osDelay
 923              	.LVL106:
 257:Src/freertos.c ****         for (int i = 0; i<5; i++) {
 924              		.loc 1 257 0 discriminator 3
 925 00f6 0135     		adds	r5, r5, #1
 926              	.LVL107:
 927 00f8 00E0     		b	.L76
 928              	.LVL108:
 929              	.L82:
 930              	.LBE2:
 931 00fa 0025     		movs	r5, #0
 932              	.LVL109:
 933              	.L76:
 934              	.LBB3:
 257:Src/freertos.c ****         for (int i = 0; i<5; i++) {
 935              		.loc 1 257 0 is_stmt 0 discriminator 1
 936 00fc 042D     		cmp	r5, #4
 937 00fe F2DD     		ble	.L78
 938              	.LBE3:
 261:Src/freertos.c ****     }
 939              		.loc 1 261 0 is_stmt 1
 940 0100 2046     		mov	r0, r4
 941              	.LVL110:
 942              	.L77:
 264:Src/freertos.c **** }
 943              		.loc 1 264 0
 944 0102 03B0     		add	sp, sp, #12
 945              	.LCFI17:
 946              		.cfi_def_cfa_offset 28
 947              		@ sp needed
 948 0104 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 949              	.LVL111:
 950              	.L85:
 951              		.align	2
 952              	.L84:
ARM GAS  /tmp/ccFI8abZ.s 			page 22


 953 0108 00000000 		.word	huart1
 954 010c 00040048 		.word	1207960576
 955              		.cfi_endproc
 956              	.LFE143:
 958              		.section	.text.recoitpos,"ax",%progbits
 959              		.align	2
 960              		.global	recoitpos
 961              		.thumb
 962              		.thumb_func
 964              	recoitpos:
 965              	.LFB144:
 265:Src/freertos.c **** 
 266:Src/freertos.c **** void recoitpos(){
 966              		.loc 1 266 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970 0000 38B5     		push	{r3, r4, r5, lr}
 971              	.LCFI18:
 972              		.cfi_def_cfa_offset 16
 973              		.cfi_offset 3, -16
 974              		.cfi_offset 4, -12
 975              		.cfi_offset 5, -8
 976              		.cfi_offset 14, -4
 267:Src/freertos.c ****     uint8_t a, x, y, c;
 268:Src/freertos.c ****     a = ReceptionMessage();
 977              		.loc 1 268 0
 978 0002 FFF7FEFF 		bl	ReceptionMessage
 979              	.LVL112:
 980 0006 C0B2     		uxtb	r0, r0
 981              	.LVL113:
 269:Src/freertos.c ****     x = a & 0xF0;
 982              		.loc 1 269 0
 983 0008 00F0F005 		and	r5, r0, #240
 984              	.LVL114:
 270:Src/freertos.c ****     y = a & 0x0F;
 985              		.loc 1 270 0
 986 000c 00F00F04 		and	r4, r0, #15
 987              	.LVL115:
 271:Src/freertos.c ****     c = ReceptionMessage();
 988              		.loc 1 271 0
 989 0010 FFF7FEFF 		bl	ReceptionMessage
 990              	.LVL116:
 272:Src/freertos.c ****     robot2.posx = x;
 991              		.loc 1 272 0
 992 0014 024B     		ldr	r3, .L88
 993 0016 1D60     		str	r5, [r3]
 273:Src/freertos.c ****     robot2.posy = y;
 994              		.loc 1 273 0
 995 0018 5C60     		str	r4, [r3, #4]
 274:Src/freertos.c ****     robot2.orientation = c;
 996              		.loc 1 274 0
 997 001a C0B2     		uxtb	r0, r0
 998 001c 9860     		str	r0, [r3, #8]
 999 001e 38BD     		pop	{r3, r4, r5, pc}
 1000              	.LVL117:
 1001              	.L89:
ARM GAS  /tmp/ccFI8abZ.s 			page 23


 1002              		.align	2
 1003              	.L88:
 1004 0020 00000000 		.word	robot2
 1005              		.cfi_endproc
 1006              	.LFE144:
 1008              		.section	.text.envoipos,"ax",%progbits
 1009              		.align	2
 1010              		.global	envoipos
 1011              		.thumb
 1012              		.thumb_func
 1014              	envoipos:
 1015              	.LFB145:
 275:Src/freertos.c **** }
 276:Src/freertos.c **** 
 277:Src/freertos.c **** void envoipos(uint8_t x, uint8_t y , uint8_t c){
 1016              		.loc 1 277 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              	.LVL118:
 1021 0000 10B5     		push	{r4, lr}
 1022              	.LCFI19:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 4, -8
 1025              		.cfi_offset 14, -4
 1026 0002 1446     		mov	r4, r2
 278:Src/freertos.c ****      x = x*16 + y;
 1027              		.loc 1 278 0
 1028 0004 0001     		lsls	r0, r0, #4
 1029              	.LVL119:
 1030 0006 C0B2     		uxtb	r0, r0
 1031 0008 0844     		add	r0, r0, r1
 1032              	.LVL120:
 279:Src/freertos.c ****      EnvoiMessage(x);
 1033              		.loc 1 279 0
 1034 000a C0B2     		uxtb	r0, r0
 1035 000c FFF7FEFF 		bl	EnvoiMessage
 1036              	.LVL121:
 280:Src/freertos.c ****      EnvoiMessage(c);
 1037              		.loc 1 280 0
 1038 0010 2046     		mov	r0, r4
 1039 0012 FFF7FEFF 		bl	EnvoiMessage
 1040              	.LVL122:
 1041 0016 10BD     		pop	{r4, pc}
 1042              		.cfi_endproc
 1043              	.LFE145:
 1045              		.section	.text.Traduction,"ax",%progbits
 1046              		.align	2
 1047              		.global	Traduction
 1048              		.thumb
 1049              		.thumb_func
 1051              	Traduction:
 1052              	.LFB146:
 281:Src/freertos.c **** }
 282:Src/freertos.c **** 
 283:Src/freertos.c **** void Traduction(uint8_t msg){
 1053              		.loc 1 283 0
ARM GAS  /tmp/ccFI8abZ.s 			page 24


 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              	.LVL123:
 1058 0000 10B5     		push	{r4, lr}
 1059              	.LCFI20:
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 4, -8
 1062              		.cfi_offset 14, -4
 1063 0002 0446     		mov	r4, r0
 284:Src/freertos.c ****     if (msg == 0x05) {
 1064              		.loc 1 284 0
 1065 0004 0528     		cmp	r0, #5
 1066 0006 05D1     		bne	.L93
 285:Src/freertos.c ****        envoipos(robot1.posx, robot1.posy, robot1.orientation);
 1067              		.loc 1 285 0
 1068 0008 174B     		ldr	r3, .L100
 1069 000a 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1070 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1071 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1072              	.LVL124:
 1073 0010 FFF7FEFF 		bl	envoipos
 1074              	.LVL125:
 1075              	.L93:
 286:Src/freertos.c ****     }
 287:Src/freertos.c **** 
 288:Src/freertos.c ****     if (msg == 0x06) {
 289:Src/freertos.c **** 
 290:Src/freertos.c ****     }
 291:Src/freertos.c **** 
 292:Src/freertos.c ****     if (msg == 0x07) {
 1076              		.loc 1 292 0
 1077 0014 072C     		cmp	r4, #7
 1078 0016 02D1     		bne	.L94
 293:Src/freertos.c ****         flag_haut = 1;
 1079              		.loc 1 293 0
 1080 0018 0122     		movs	r2, #1
 1081 001a 144B     		ldr	r3, .L100+4
 1082 001c 1A60     		str	r2, [r3]
 1083              	.L94:
 294:Src/freertos.c ****     }
 295:Src/freertos.c **** 
 296:Src/freertos.c ****     if (msg == 0x08) {
 1084              		.loc 1 296 0
 1085 001e 082C     		cmp	r4, #8
 1086 0020 02D1     		bne	.L95
 297:Src/freertos.c ****         flag_bas = 1;
 1087              		.loc 1 297 0
 1088 0022 0122     		movs	r2, #1
 1089 0024 124B     		ldr	r3, .L100+8
 1090 0026 1A60     		str	r2, [r3]
 1091              	.L95:
 298:Src/freertos.c ****     }
 299:Src/freertos.c **** 
 300:Src/freertos.c ****     if (msg == 0x09) {
 1092              		.loc 1 300 0
 1093 0028 092C     		cmp	r4, #9
ARM GAS  /tmp/ccFI8abZ.s 			page 25


 1094 002a 02D1     		bne	.L96
 301:Src/freertos.c ****         flag_droite = 1;
 1095              		.loc 1 301 0
 1096 002c 0122     		movs	r2, #1
 1097 002e 114B     		ldr	r3, .L100+12
 1098 0030 1A60     		str	r2, [r3]
 1099              	.L96:
 302:Src/freertos.c ****     }
 303:Src/freertos.c **** 
 304:Src/freertos.c ****     if (msg == 0x0A) {
 1100              		.loc 1 304 0
 1101 0032 0A2C     		cmp	r4, #10
 1102 0034 02D1     		bne	.L97
 305:Src/freertos.c ****         flag_gauche = 1;
 1103              		.loc 1 305 0
 1104 0036 0122     		movs	r2, #1
 1105 0038 0F4B     		ldr	r3, .L100+16
 1106 003a 1A60     		str	r2, [r3]
 1107              	.L97:
 306:Src/freertos.c ****     }
 307:Src/freertos.c **** 
 308:Src/freertos.c ****     if (msg == 0x0B) {
 309:Src/freertos.c ****     }
 310:Src/freertos.c **** 
 311:Src/freertos.c ****     if (msg == 0x0C) {
 312:Src/freertos.c ****     }
 313:Src/freertos.c **** 
 314:Src/freertos.c ****     if (msg == 0x0D) {
 1108              		.loc 1 314 0
 1109 003c 0D2C     		cmp	r4, #13
 1110 003e 12D1     		bne	.L92
 1111              	.LBB4:
 315:Src/freertos.c ****         uint8_t a;
 316:Src/freertos.c ****         srand(time(NULL));
 1112              		.loc 1 316 0
 1113 0040 0020     		movs	r0, #0
 1114 0042 FFF7FEFF 		bl	time
 1115              	.LVL126:
 1116 0046 FFF7FEFF 		bl	srand
 1117              	.LVL127:
 317:Src/freertos.c ****         a = rand()%100;
 1118              		.loc 1 317 0
 1119 004a FFF7FEFF 		bl	rand
 1120              	.LVL128:
 1121 004e 0B4B     		ldr	r3, .L100+20
 1122 0050 83FB0032 		smull	r3, r2, r3, r0
 1123 0054 C317     		asrs	r3, r0, #31
 1124 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1125 005a 6422     		movs	r2, #100
 1126 005c 02FB1303 		mls	r3, r2, r3, r0
 1127              	.LVL129:
 318:Src/freertos.c ****         EnvoiMessage(a);
 1128              		.loc 1 318 0
 1129 0060 D8B2     		uxtb	r0, r3
 1130 0062 FFF7FEFF 		bl	EnvoiMessage
 1131              	.LVL130:
 1132              	.L92:
ARM GAS  /tmp/ccFI8abZ.s 			page 26


 1133 0066 10BD     		pop	{r4, pc}
 1134              	.L101:
 1135              		.align	2
 1136              	.L100:
 1137 0068 00000000 		.word	robot1
 1138 006c 00000000 		.word	.LANCHOR3
 1139 0070 00000000 		.word	.LANCHOR4
 1140 0074 00000000 		.word	.LANCHOR5
 1141 0078 00000000 		.word	.LANCHOR6
 1142 007c 1F85EB51 		.word	1374389535
 1143              	.LBE4:
 1144              		.cfi_endproc
 1145              	.LFE146:
 1147              		.section	.text.WaitFor,"ax",%progbits
 1148              		.align	2
 1149              		.global	WaitFor
 1150              		.thumb
 1151              		.thumb_func
 1153              	WaitFor:
 1154              	.LFB147:
 319:Src/freertos.c ****     }
 320:Src/freertos.c **** 
 321:Src/freertos.c ****     if (msg == 0x10) {
 322:Src/freertos.c ****     }
 323:Src/freertos.c **** 
 324:Src/freertos.c ****     if (msg == 0x11) {
 325:Src/freertos.c ****     }
 326:Src/freertos.c **** 
 327:Src/freertos.c ****     if (msg == 0x12) {
 328:Src/freertos.c ****     }
 329:Src/freertos.c **** 
 330:Src/freertos.c ****     if (msg == 0x13) {
 331:Src/freertos.c ****     }
 332:Src/freertos.c **** }
 333:Src/freertos.c **** 
 334:Src/freertos.c **** void WaitFor(uint8_t z) {
 1155              		.loc 1 334 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              	.LVL131:
 1160 0000 10B5     		push	{r4, lr}
 1161              	.LCFI21:
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 4, -8
 1164              		.cfi_offset 14, -4
 1165 0002 0446     		mov	r4, r0
 1166              	.LVL132:
 1167              	.L103:
 335:Src/freertos.c ****     while (z != ReceptionMessage()) ;
 1168              		.loc 1 335 0 discriminator 1
 1169 0004 FFF7FEFF 		bl	ReceptionMessage
 1170              	.LVL133:
 1171 0008 8442     		cmp	r4, r0
 1172 000a FBD1     		bne	.L103
 336:Src/freertos.c **** }
 1173              		.loc 1 336 0
ARM GAS  /tmp/ccFI8abZ.s 			page 27


 1174 000c 10BD     		pop	{r4, pc}
 1175              		.cfi_endproc
 1176              	.LFE147:
 1178 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1179              		.align	2
 1180              		.global	TaPosition
 1181              		.thumb
 1182              		.thumb_func
 1184              	TaPosition:
 1185              	.LFB148:
 337:Src/freertos.c **** 
 338:Src/freertos.c **** void TaPosition() {
 1186              		.loc 1 338 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190 0000 08B5     		push	{r3, lr}
 1191              	.LCFI22:
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 3, -8
 1194              		.cfi_offset 14, -4
 339:Src/freertos.c ****     EnvoiMessage(0x05);
 1195              		.loc 1 339 0
 1196 0002 0520     		movs	r0, #5
 1197 0004 FFF7FEFF 		bl	EnvoiMessage
 1198              	.LVL134:
 1199 0008 08BD     		pop	{r3, pc}
 1200              		.cfi_endproc
 1201              	.LFE148:
 1203 000a 00BF     		.section	.text.ok,"ax",%progbits
 1204              		.align	2
 1205              		.global	ok
 1206              		.thumb
 1207              		.thumb_func
 1209              	ok:
 1210              	.LFB149:
 340:Src/freertos.c **** }
 341:Src/freertos.c **** 
 342:Src/freertos.c **** void ok() {
 1211              		.loc 1 342 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215 0000 08B5     		push	{r3, lr}
 1216              	.LCFI23:
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 3, -8
 1219              		.cfi_offset 14, -4
 343:Src/freertos.c ****     EnvoiMessage(0x06);
 1220              		.loc 1 343 0
 1221 0002 0620     		movs	r0, #6
 1222 0004 FFF7FEFF 		bl	EnvoiMessage
 1223              	.LVL135:
 1224 0008 08BD     		pop	{r3, pc}
 1225              		.cfi_endproc
 1226              	.LFE149:
 1228 000a 00BF     		.section	.text.Monte,"ax",%progbits
ARM GAS  /tmp/ccFI8abZ.s 			page 28


 1229              		.align	2
 1230              		.global	Monte
 1231              		.thumb
 1232              		.thumb_func
 1234              	Monte:
 1235              	.LFB150:
 344:Src/freertos.c **** }
 345:Src/freertos.c **** 
 346:Src/freertos.c **** void Monte() {
 1236              		.loc 1 346 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240 0000 08B5     		push	{r3, lr}
 1241              	.LCFI24:
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 3, -8
 1244              		.cfi_offset 14, -4
 347:Src/freertos.c ****     EnvoiMessage(0x07);
 1245              		.loc 1 347 0
 1246 0002 0720     		movs	r0, #7
 1247 0004 FFF7FEFF 		bl	EnvoiMessage
 1248              	.LVL136:
 348:Src/freertos.c ****     WaitFor(0x06);
 1249              		.loc 1 348 0
 1250 0008 0620     		movs	r0, #6
 1251 000a FFF7FEFF 		bl	WaitFor
 1252              	.LVL137:
 1253 000e 08BD     		pop	{r3, pc}
 1254              		.cfi_endproc
 1255              	.LFE150:
 1257              		.section	.text.Descend,"ax",%progbits
 1258              		.align	2
 1259              		.global	Descend
 1260              		.thumb
 1261              		.thumb_func
 1263              	Descend:
 1264              	.LFB151:
 349:Src/freertos.c **** }
 350:Src/freertos.c **** 
 351:Src/freertos.c **** void Descend() {
 1265              		.loc 1 351 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269 0000 08B5     		push	{r3, lr}
 1270              	.LCFI25:
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 3, -8
 1273              		.cfi_offset 14, -4
 352:Src/freertos.c ****     EnvoiMessage(0x08);
 1274              		.loc 1 352 0
 1275 0002 0820     		movs	r0, #8
 1276 0004 FFF7FEFF 		bl	EnvoiMessage
 1277              	.LVL138:
 353:Src/freertos.c ****     WaitFor(0x06);
 1278              		.loc 1 353 0
ARM GAS  /tmp/ccFI8abZ.s 			page 29


 1279 0008 0620     		movs	r0, #6
 1280 000a FFF7FEFF 		bl	WaitFor
 1281              	.LVL139:
 1282 000e 08BD     		pop	{r3, pc}
 1283              		.cfi_endproc
 1284              	.LFE151:
 1286              		.section	.text.Droite,"ax",%progbits
 1287              		.align	2
 1288              		.global	Droite
 1289              		.thumb
 1290              		.thumb_func
 1292              	Droite:
 1293              	.LFB152:
 354:Src/freertos.c **** }
 355:Src/freertos.c **** 
 356:Src/freertos.c **** void Droite() {
 1294              		.loc 1 356 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298 0000 08B5     		push	{r3, lr}
 1299              	.LCFI26:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 3, -8
 1302              		.cfi_offset 14, -4
 357:Src/freertos.c ****     EnvoiMessage(0x09);
 1303              		.loc 1 357 0
 1304 0002 0920     		movs	r0, #9
 1305 0004 FFF7FEFF 		bl	EnvoiMessage
 1306              	.LVL140:
 358:Src/freertos.c ****     WaitFor(0x06);
 1307              		.loc 1 358 0
 1308 0008 0620     		movs	r0, #6
 1309 000a FFF7FEFF 		bl	WaitFor
 1310              	.LVL141:
 1311 000e 08BD     		pop	{r3, pc}
 1312              		.cfi_endproc
 1313              	.LFE152:
 1315              		.section	.text.Gauche,"ax",%progbits
 1316              		.align	2
 1317              		.global	Gauche
 1318              		.thumb
 1319              		.thumb_func
 1321              	Gauche:
 1322              	.LFB153:
 359:Src/freertos.c **** }
 360:Src/freertos.c **** 
 361:Src/freertos.c **** void Gauche() {
 1323              		.loc 1 361 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327 0000 08B5     		push	{r3, lr}
 1328              	.LCFI27:
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 3, -8
 1331              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFI8abZ.s 			page 30


 362:Src/freertos.c ****     EnvoiMessage(0x0A);
 1332              		.loc 1 362 0
 1333 0002 0A20     		movs	r0, #10
 1334 0004 FFF7FEFF 		bl	EnvoiMessage
 1335              	.LVL142:
 363:Src/freertos.c ****     WaitFor(0x06);
 1336              		.loc 1 363 0
 1337 0008 0620     		movs	r0, #6
 1338 000a FFF7FEFF 		bl	WaitFor
 1339              	.LVL143:
 1340 000e 08BD     		pop	{r3, pc}
 1341              		.cfi_endproc
 1342              	.LFE153:
 1344              		.section	.text.DansUnCoin,"ax",%progbits
 1345              		.align	2
 1346              		.global	DansUnCoin
 1347              		.thumb
 1348              		.thumb_func
 1350              	DansUnCoin:
 1351              	.LFB154:
 364:Src/freertos.c **** }
 365:Src/freertos.c **** 
 366:Src/freertos.c **** void DansUnCoin() {
 1352              		.loc 1 366 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356 0000 08B5     		push	{r3, lr}
 1357              	.LCFI28:
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 3, -8
 1360              		.cfi_offset 14, -4
 367:Src/freertos.c ****     EnvoiMessage(0x0B);
 1361              		.loc 1 367 0
 1362 0002 0B20     		movs	r0, #11
 1363 0004 FFF7FEFF 		bl	EnvoiMessage
 1364              	.LVL144:
 1365 0008 08BD     		pop	{r3, pc}
 1366              		.cfi_endproc
 1367              	.LFE154:
 1369 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1370              		.align	2
 1371              		.global	Trouve
 1372              		.thumb
 1373              		.thumb_func
 1375              	Trouve:
 1376              	.LFB155:
 368:Src/freertos.c **** }
 369:Src/freertos.c **** 
 370:Src/freertos.c **** void Trouve() {
 1377              		.loc 1 370 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381 0000 08B5     		push	{r3, lr}
 1382              	.LCFI29:
 1383              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFI8abZ.s 			page 31


 1384              		.cfi_offset 3, -8
 1385              		.cfi_offset 14, -4
 371:Src/freertos.c ****     EnvoiMessage(0x0C);
 1386              		.loc 1 371 0
 1387 0002 0C20     		movs	r0, #12
 1388 0004 FFF7FEFF 		bl	EnvoiMessage
 1389              	.LVL145:
 1390 0008 08BD     		pop	{r3, pc}
 1391              		.cfi_endproc
 1392              	.LFE155:
 1394 000a 00BF     		.section	.text.Random,"ax",%progbits
 1395              		.align	2
 1396              		.global	Random
 1397              		.thumb
 1398              		.thumb_func
 1400              	Random:
 1401              	.LFB156:
 372:Src/freertos.c **** }
 373:Src/freertos.c **** 
 374:Src/freertos.c **** int Random() {
 1402              		.loc 1 374 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 0, uses_anonymous_args = 0
 1406 0000 10B5     		push	{r4, lr}
 1407              	.LCFI30:
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 4, -8
 1410              		.cfi_offset 14, -4
 375:Src/freertos.c ****     int a, p;
 376:Src/freertos.c ****     EnvoiMessage(0x0D);
 1411              		.loc 1 376 0
 1412 0002 0D20     		movs	r0, #13
 1413 0004 FFF7FEFF 		bl	EnvoiMessage
 1414              	.LVL146:
 377:Src/freertos.c ****     srand(time(NULL));
 1415              		.loc 1 377 0
 1416 0008 0020     		movs	r0, #0
 1417 000a FFF7FEFF 		bl	time
 1418              	.LVL147:
 1419 000e FFF7FEFF 		bl	srand
 1420              	.LVL148:
 378:Src/freertos.c ****     a = rand()%256;
 1421              		.loc 1 378 0
 1422 0012 FFF7FEFF 		bl	rand
 1423              	.LVL149:
 1424 0016 0B4C     		ldr	r4, .L126
 1425 0018 0440     		ands	r4, r4, r0
 1426 001a 002C     		cmp	r4, #0
 1427 001c 03DA     		bge	.L122
 1428 001e 013C     		subs	r4, r4, #1
 1429 0020 64F0FF04 		orn	r4, r4, #255
 1430 0024 0134     		adds	r4, r4, #1
 1431              	.L122:
 1432              	.LVL150:
 379:Src/freertos.c ****     if (ReceptionMessage() < a) {
 1433              		.loc 1 379 0
ARM GAS  /tmp/ccFI8abZ.s 			page 32


 1434 0026 FFF7FEFF 		bl	ReceptionMessage
 1435              	.LVL151:
 1436 002a 8442     		cmp	r4, r0
 1437 002c 04DD     		ble	.L123
 1438              	.LVL152:
 380:Src/freertos.c ****         p = 1;
 381:Src/freertos.c ****         EnvoiMessage(0x50);
 1439              		.loc 1 381 0
 1440 002e 5020     		movs	r0, #80
 1441 0030 FFF7FEFF 		bl	EnvoiMessage
 1442              	.LVL153:
 380:Src/freertos.c ****         p = 1;
 1443              		.loc 1 380 0
 1444 0034 0120     		movs	r0, #1
 1445 0036 10BD     		pop	{r4, pc}
 1446              	.LVL154:
 1447              	.L123:
 382:Src/freertos.c ****     }
 383:Src/freertos.c ****     else {
 384:Src/freertos.c ****         p = 0;
 385:Src/freertos.c ****         EnvoiMessage(0x67);
 1448              		.loc 1 385 0
 1449 0038 6720     		movs	r0, #103
 1450 003a FFF7FEFF 		bl	EnvoiMessage
 1451              	.LVL155:
 384:Src/freertos.c ****         EnvoiMessage(0x67);
 1452              		.loc 1 384 0
 1453 003e 0020     		movs	r0, #0
 1454              	.LVL156:
 386:Src/freertos.c ****     }
 387:Src/freertos.c ****     return(p);
 388:Src/freertos.c **** }
 1455              		.loc 1 388 0
 1456 0040 10BD     		pop	{r4, pc}
 1457              	.LVL157:
 1458              	.L127:
 1459 0042 00BF     		.align	2
 1460              	.L126:
 1461 0044 FF000080 		.word	-2147483393
 1462              		.cfi_endproc
 1463              	.LFE156:
 1465              		.section	.text.Non,"ax",%progbits
 1466              		.align	2
 1467              		.global	Non
 1468              		.thumb
 1469              		.thumb_func
 1471              	Non:
 1472              	.LFB157:
 389:Src/freertos.c **** 
 390:Src/freertos.c **** void Non(){
 1473              		.loc 1 390 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477 0000 08B5     		push	{r3, lr}
 1478              	.LCFI31:
 1479              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFI8abZ.s 			page 33


 1480              		.cfi_offset 3, -8
 1481              		.cfi_offset 14, -4
 391:Src/freertos.c ****     EnvoiMessage(0x10);
 1482              		.loc 1 391 0
 1483 0002 1020     		movs	r0, #16
 1484 0004 FFF7FEFF 		bl	EnvoiMessage
 1485              	.LVL158:
 1486 0008 08BD     		pop	{r3, pc}
 1487              		.cfi_endproc
 1488              	.LFE157:
 1490 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1491              		.align	2
 1492              		.global	MemeCase
 1493              		.thumb
 1494              		.thumb_func
 1496              	MemeCase:
 1497              	.LFB158:
 392:Src/freertos.c **** }
 393:Src/freertos.c **** 
 394:Src/freertos.c **** void MemeCase() {
 1498              		.loc 1 394 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502 0000 08B5     		push	{r3, lr}
 1503              	.LCFI32:
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 3, -8
 1506              		.cfi_offset 14, -4
 395:Src/freertos.c ****     EnvoiMessage(0x12);
 1507              		.loc 1 395 0
 1508 0002 1220     		movs	r0, #18
 1509 0004 FFF7FEFF 		bl	EnvoiMessage
 1510              	.LVL159:
 1511 0008 08BD     		pop	{r3, pc}
 1512              		.cfi_endproc
 1513              	.LFE158:
 1515 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1516              		.align	2
 1517              		.global	TuEsCoin
 1518              		.thumb
 1519              		.thumb_func
 1521              	TuEsCoin:
 1522              	.LFB159:
 396:Src/freertos.c **** }
 397:Src/freertos.c **** 
 398:Src/freertos.c **** void TuEsCoin(){
 1523              		.loc 1 398 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 1527 0000 08B5     		push	{r3, lr}
 1528              	.LCFI33:
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 3, -8
 1531              		.cfi_offset 14, -4
 399:Src/freertos.c ****     EnvoiMessage(0x13);
ARM GAS  /tmp/ccFI8abZ.s 			page 34


 1532              		.loc 1 399 0
 1533 0002 1320     		movs	r0, #19
 1534 0004 FFF7FEFF 		bl	EnvoiMessage
 1535              	.LVL160:
 1536 0008 08BD     		pop	{r3, pc}
 1537              		.cfi_endproc
 1538              	.LFE159:
 1540 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1541              		.align	2
 1542              		.global	deplacement
 1543              		.thumb
 1544              		.thumb_func
 1546              	deplacement:
 1547              	.LFB160:
 400:Src/freertos.c **** }
 401:Src/freertos.c **** /* END Fonctions UART */
 402:Src/freertos.c **** 
 403:Src/freertos.c **** /* BEGIN Fonctions IA */
 404:Src/freertos.c **** void deplacement(int distance)
 405:Src/freertos.c **** {
 1548              		.loc 1 405 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              	.LVL161:
 1553 0000 38B5     		push	{r3, r4, r5, lr}
 1554              	.LCFI34:
 1555              		.cfi_def_cfa_offset 16
 1556              		.cfi_offset 3, -16
 1557              		.cfi_offset 4, -12
 1558              		.cfi_offset 5, -8
 1559              		.cfi_offset 14, -4
 1560              	.LVL162:
 406:Src/freertos.c ****   int i =0;
 407:Src/freertos.c ****   if (distance > 0)
 1561              		.loc 1 407 0
 1562 0002 051E     		subs	r5, r0, #0
 1563 0004 05DC     		bgt	.L140
 1564 0006 0024     		movs	r4, #0
 1565 0008 0AE0     		b	.L136
 1566              	.LVL163:
 1567              	.L137:
 408:Src/freertos.c ****   {
 409:Src/freertos.c ****     for (i = 0; i < distance; i++)
 410:Src/freertos.c ****     {
 411:Src/freertos.c ****       avancer_robot();
 1568              		.loc 1 411 0 discriminator 3
 1569 000a FFF7FEFF 		bl	avancer_robot
 1570              	.LVL164:
 409:Src/freertos.c ****     {
 1571              		.loc 1 409 0 discriminator 3
 1572 000e 0134     		adds	r4, r4, #1
 1573              	.LVL165:
 1574 0010 00E0     		b	.L135
 1575              	.LVL166:
 1576              	.L140:
 1577 0012 0024     		movs	r4, #0
ARM GAS  /tmp/ccFI8abZ.s 			page 35


 1578              	.LVL167:
 1579              	.L135:
 409:Src/freertos.c ****     {
 1580              		.loc 1 409 0 is_stmt 0 discriminator 1
 1581 0014 AC42     		cmp	r4, r5
 1582 0016 F8DB     		blt	.L137
 1583 0018 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL168:
 1585              	.L139:
 412:Src/freertos.c ****     }
 413:Src/freertos.c ****   }
 414:Src/freertos.c ****   else
 415:Src/freertos.c ****   {
 416:Src/freertos.c ****     for (i = 0; i < -distance; i++)
 417:Src/freertos.c ****     {
 418:Src/freertos.c ****       reculer_robot();
 1586              		.loc 1 418 0 is_stmt 1 discriminator 3
 1587 001a FFF7FEFF 		bl	reculer_robot
 1588              	.LVL169:
 416:Src/freertos.c ****     {
 1589              		.loc 1 416 0 discriminator 3
 1590 001e 0134     		adds	r4, r4, #1
 1591              	.LVL170:
 1592              	.L136:
 416:Src/freertos.c ****     {
 1593              		.loc 1 416 0 is_stmt 0 discriminator 1
 1594 0020 6B42     		negs	r3, r5
 1595 0022 9C42     		cmp	r4, r3
 1596 0024 F9DB     		blt	.L139
 1597 0026 38BD     		pop	{r3, r4, r5, pc}
 1598              		.cfi_endproc
 1599              	.LFE160:
 1601              		.section	.text.motor,"ax",%progbits
 1602              		.align	2
 1603              		.global	motor
 1604              		.thumb
 1605              		.thumb_func
 1607              	motor:
 1608              	.LFB161:
 419:Src/freertos.c ****     }
 420:Src/freertos.c ****   }
 421:Src/freertos.c **** }
 422:Src/freertos.c **** /* END Fonctions IA */
 423:Src/freertos.c **** 
 424:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 425:Src/freertos.c **** 
 426:Src/freertos.c **** /* Hook prototypes */
 427:Src/freertos.c **** 
 428:Src/freertos.c **** /* USER CODE BEGIN Application */
 429:Src/freertos.c **** void motor(void const * argument)
 430:Src/freertos.c **** {
 1609              		.loc 1 430 0 is_stmt 1
 1610              		.cfi_startproc
 1611              		@ Volatile: function does not return.
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              	.LVL171:
ARM GAS  /tmp/ccFI8abZ.s 			page 36


 1615 0000 08B5     		push	{r3, lr}
 1616              	.LCFI35:
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 3, -8
 1619              		.cfi_offset 14, -4
 431:Src/freertos.c ****   /* USER CODE BEGIN motor */
 432:Src/freertos.c ****   UNUSED(argument);
 433:Src/freertos.c **** 
 434:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 1620              		.loc 1 434 0
 1621 0002 0122     		movs	r2, #1
 1622 0004 4FF48071 		mov	r1, #256
 1623 0008 4FF09040 		mov	r0, #1207959552
 1624              	.LVL172:
 1625 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1626              	.LVL173:
 435:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 1627              		.loc 1 435 0
 1628 0010 064C     		ldr	r4, .L145
 1629 0012 2046     		mov	r0, r4
 1630 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1631              	.LVL174:
 436:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 1632              		.loc 1 436 0
 1633 0018 0021     		movs	r1, #0
 1634 001a 2046     		mov	r0, r4
 1635 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1636              	.LVL175:
 437:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 1637              		.loc 1 437 0
 1638 0020 0C21     		movs	r1, #12
 1639 0022 2046     		mov	r0, r4
 1640 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1641              	.LVL176:
 1642              	.L143:
 1643 0028 FEE7     		b	.L143
 1644              	.L146:
 1645 002a 00BF     		.align	2
 1646              	.L145:
 1647 002c 00000000 		.word	htim3
 1648              		.cfi_endproc
 1649              	.LFE161:
 1651              		.section	.text.adcControl,"ax",%progbits
 1652              		.align	2
 1653              		.global	adcControl
 1654              		.thumb
 1655              		.thumb_func
 1657              	adcControl:
 1658              	.LFB162:
 438:Src/freertos.c **** 
 439:Src/freertos.c ****   /* Infinite loop */
 440:Src/freertos.c ****   for(;;)
 441:Src/freertos.c ****   {
 442:Src/freertos.c ****     /*deplacement(1);
 443:Src/freertos.c ****     osDelay(DELAY);
 444:Src/freertos.c ****     pivoter_droite();
 445:Src/freertos.c ****     osDelay(DELAY);
ARM GAS  /tmp/ccFI8abZ.s 			page 37


 446:Src/freertos.c ****     pivoter_droite();
 447:Src/freertos.c ****     osDelay(DELAY);
 448:Src/freertos.c ****     deplacement(1);
 449:Src/freertos.c ****     osDelay(DELAY);
 450:Src/freertos.c ****     pivoter_gauche();
 451:Src/freertos.c ****     osDelay(DELAY);
 452:Src/freertos.c ****     pivoter_gauche();
 453:Src/freertos.c ****     osDelay(DELAY);
 454:Src/freertos.c ****     deplacement(1);
 455:Src/freertos.c ****     osDelay(DELAY);
 456:Src/freertos.c ****     deplacement(-1);
 457:Src/freertos.c ****     osDelay(DELAY); */
 458:Src/freertos.c ****   }
 459:Src/freertos.c ****   /* USER CODE END motor */
 460:Src/freertos.c **** }
 461:Src/freertos.c **** 
 462:Src/freertos.c **** void adcControl(void const * argument)
 463:Src/freertos.c **** {
 1659              		.loc 1 463 0
 1660              		.cfi_startproc
 1661              		@ Volatile: function does not return.
 1662              		@ args = 0, pretend = 0, frame = 0
 1663              		@ frame_needed = 0, uses_anonymous_args = 0
 1664              	.LVL177:
 1665 0000 08B5     		push	{r3, lr}
 1666              	.LCFI36:
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 3, -8
 1669              		.cfi_offset 14, -4
 1670              	.LVL178:
 1671              	.L148:
 464:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 465:Src/freertos.c ****   /* Infinite loop */
 466:Src/freertos.c ****   for(;;)
 467:Src/freertos.c ****   {
 468:Src/freertos.c ****     HAL_ADC_Start_IT(&hadc1);
 1672              		.loc 1 468 0
 1673 0002 0A48     		ldr	r0, .L151
 1674 0004 FFF7FEFF 		bl	HAL_ADC_Start_IT
 1675              	.LVL179:
 469:Src/freertos.c ****     osDelay(1000);
 1676              		.loc 1 469 0
 1677 0008 4FF47A70 		mov	r0, #1000
 1678 000c FFF7FEFF 		bl	osDelay
 1679              	.LVL180:
 470:Src/freertos.c ****     if (flag_adc == 1) {
 1680              		.loc 1 470 0
 1681 0010 074B     		ldr	r3, .L151+4
 1682 0012 1B68     		ldr	r3, [r3]
 1683 0014 012B     		cmp	r3, #1
 1684 0016 F4D1     		bne	.L148
 471:Src/freertos.c ****         printf("Value : %lu\n\r", adcValue);
 1685              		.loc 1 471 0
 1686 0018 064B     		ldr	r3, .L151+8
 1687 001a 1968     		ldr	r1, [r3]
 1688 001c 0648     		ldr	r0, .L151+12
 1689 001e FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccFI8abZ.s 			page 38


 1690              	.LVL181:
 472:Src/freertos.c ****         flag_adc = 0;
 1691              		.loc 1 472 0
 1692 0022 0022     		movs	r2, #0
 1693 0024 024B     		ldr	r3, .L151+4
 1694 0026 1A60     		str	r2, [r3]
 1695 0028 EBE7     		b	.L148
 1696              	.L152:
 1697 002a 00BF     		.align	2
 1698              	.L151:
 1699 002c 00000000 		.word	hadc1
 1700 0030 00000000 		.word	.LANCHOR2
 1701 0034 00000000 		.word	.LANCHOR1
 1702 0038 00000000 		.word	.LC0
 1703              		.cfi_endproc
 1704              	.LFE162:
 1706              		.section	.text.uart,"ax",%progbits
 1707              		.align	2
 1708              		.global	uart
 1709              		.thumb
 1710              		.thumb_func
 1712              	uart:
 1713              	.LFB163:
 473:Src/freertos.c ****     }
 474:Src/freertos.c ****   }
 475:Src/freertos.c ****   /* USER CODE END adcControl */
 476:Src/freertos.c **** }
 477:Src/freertos.c **** 
 478:Src/freertos.c **** void uart(void const * argument)
 479:Src/freertos.c **** {
 1714              		.loc 1 479 0
 1715              		.cfi_startproc
 1716              		@ Volatile: function does not return.
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              	.LVL182:
 1720 0000 08B5     		push	{r3, lr}
 1721              	.LCFI37:
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 3, -8
 1724              		.cfi_offset 14, -4
 1725              	.LVL183:
 1726              	.L154:
 480:Src/freertos.c ****   /* USER CODE BEGIN uart */
 481:Src/freertos.c ****   /* Infinite loop */
 482:Src/freertos.c ****   for(;;)
 483:Src/freertos.c ****   {
 484:Src/freertos.c ****     //pivoter_droite();
 485:Src/freertos.c ****     //ok();
 486:Src/freertos.c ****     //WaitFor(OK);
 487:Src/freertos.c **** 
 488:Src/freertos.c ****     WaitFor(OK);
 1727              		.loc 1 488 0 discriminator 1
 1728 0002 0620     		movs	r0, #6
 1729 0004 FFF7FEFF 		bl	WaitFor
 1730              	.LVL184:
 489:Src/freertos.c ****     pivoter_droite();
ARM GAS  /tmp/ccFI8abZ.s 			page 39


 1731              		.loc 1 489 0 discriminator 1
 1732 0008 FFF7FEFF 		bl	pivoter_droite
 1733              	.LVL185:
 490:Src/freertos.c ****     ok();
 1734              		.loc 1 490 0 discriminator 1
 1735 000c FFF7FEFF 		bl	ok
 1736              	.LVL186:
 491:Src/freertos.c **** 
 492:Src/freertos.c ****     osDelay(1);
 1737              		.loc 1 492 0 discriminator 1
 1738 0010 0120     		movs	r0, #1
 1739 0012 FFF7FEFF 		bl	osDelay
 1740              	.LVL187:
 1741 0016 F4E7     		b	.L154
 1742              		.cfi_endproc
 1743              	.LFE163:
 1745              		.comm	robot2,12,4
 1746              		.comm	robot1,12,4
 1747              		.global	flag_gauche
 1748              		.global	flag_droite
 1749              		.global	flag_bas
 1750              		.global	flag_haut
 1751              		.global	deplacement_fini
 1752              		.global	adcValue
 1753              		.global	flag_adc
 1754              		.section	.bss.flag_adc,"aw",%nobits
 1755              		.align	2
 1756              		.set	.LANCHOR2,. + 0
 1759              	flag_adc:
 1760 0000 00000000 		.space	4
 1761              		.section	.bss.flag_gauche,"aw",%nobits
 1762              		.align	2
 1763              		.set	.LANCHOR6,. + 0
 1766              	flag_gauche:
 1767 0000 00000000 		.space	4
 1768              		.section	.bss.flag_droite,"aw",%nobits
 1769              		.align	2
 1770              		.set	.LANCHOR5,. + 0
 1773              	flag_droite:
 1774 0000 00000000 		.space	4
 1775              		.section	.bss.deplacement_fini,"aw",%nobits
 1776              		.align	2
 1777              		.set	.LANCHOR0,. + 0
 1780              	deplacement_fini:
 1781 0000 00000000 		.space	4
 1782              		.section	.bss.flag_haut,"aw",%nobits
 1783              		.align	2
 1784              		.set	.LANCHOR3,. + 0
 1787              	flag_haut:
 1788 0000 00000000 		.space	4
 1789              		.section	.rodata.str1.4,"aMS",%progbits,1
 1790              		.align	2
 1791              	.LC0:
 1792 0000 56616C75 		.ascii	"Value : %lu\012\015\000"
 1792      65203A20 
 1792      256C750A 
 1792      0D00
ARM GAS  /tmp/ccFI8abZ.s 			page 40


 1793              		.section	.bss.adcValue,"aw",%nobits
 1794              		.align	2
 1795              		.set	.LANCHOR1,. + 0
 1798              	adcValue:
 1799 0000 00000000 		.space	4
 1800              		.section	.bss.flag_bas,"aw",%nobits
 1801              		.align	2
 1802              		.set	.LANCHOR4,. + 0
 1805              	flag_bas:
 1806 0000 00000000 		.space	4
 1807              		.text
 1808              	.Letext0:
 1809              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1810              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1811              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1812              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1813              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1814              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1815              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1816              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1817              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1818              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 1819              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1820              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1821              		.file 14 "/usr/include/newlib/time.h"
 1822              		.file 15 "/usr/include/newlib/stdlib.h"
 1823              		.file 16 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccFI8abZ.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccFI8abZ.s:22     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccFI8abZ.s:27     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccFI8abZ.s:63     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccFI8abZ.s:68     .text.alumer_droite:0000000000000000 $t
     /tmp/ccFI8abZ.s:73     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccFI8abZ.s:105    .text.alumer_droite:0000000000000024 $d
     /tmp/ccFI8abZ.s:110    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccFI8abZ.s:115    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccFI8abZ.s:143    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccFI8abZ.s:148    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccFI8abZ.s:153    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccFI8abZ.s:180    .text.eteindre_droite:000000000000001c $d
     /tmp/ccFI8abZ.s:185    .text.pwm_max:0000000000000000 $t
     /tmp/ccFI8abZ.s:190    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccFI8abZ.s:208    .text.pwm_max:0000000000000010 $d
     /tmp/ccFI8abZ.s:213    .text.accelerer:0000000000000000 $t
     /tmp/ccFI8abZ.s:218    .text.accelerer:0000000000000000 accelerer
     /tmp/ccFI8abZ.s:259    .text.accelerer:0000000000000020 $d
     /tmp/ccFI8abZ.s:264    .text.deccelerer:0000000000000000 $t
     /tmp/ccFI8abZ.s:269    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccFI8abZ.s:310    .text.deccelerer:0000000000000020 $d
     /tmp/ccFI8abZ.s:315    .text.reculer_robot:0000000000000000 $t
     /tmp/ccFI8abZ.s:320    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccFI8abZ.s:363    .text.reculer_robot:0000000000000030 $d
     /tmp/ccFI8abZ.s:368    .text.avancer_robot:0000000000000000 $t
     /tmp/ccFI8abZ.s:373    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccFI8abZ.s:416    .text.avancer_robot:0000000000000030 $d
     /tmp/ccFI8abZ.s:421    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccFI8abZ.s:426    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccFI8abZ.s:469    .text.pivoter_gauche:000000000000002c $d
     /tmp/ccFI8abZ.s:474    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccFI8abZ.s:479    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccFI8abZ.s:522    .text.pivoter_droite:000000000000002c $d
     /tmp/ccFI8abZ.s:527    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccFI8abZ.s:532    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccFI8abZ.s:557    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccFI8abZ.s:563    .text._write:0000000000000000 $t
     /tmp/ccFI8abZ.s:568    .text._write:0000000000000000 _write
     /tmp/ccFI8abZ.s:596    .text._write:0000000000000014 $d
     /tmp/ccFI8abZ.s:601    .text.EnvoiMessage:0000000000000000 $t
     /tmp/ccFI8abZ.s:606    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/ccFI8abZ.s:753    .text.EnvoiMessage:0000000000000100 $d
     /tmp/ccFI8abZ.s:758    .text.ReceptionMessage:0000000000000000 $t
     /tmp/ccFI8abZ.s:763    .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/ccFI8abZ.s:953    .text.ReceptionMessage:0000000000000108 $d
     /tmp/ccFI8abZ.s:959    .text.recoitpos:0000000000000000 $t
     /tmp/ccFI8abZ.s:964    .text.recoitpos:0000000000000000 recoitpos
     /tmp/ccFI8abZ.s:1004   .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/ccFI8abZ.s:1009   .text.envoipos:0000000000000000 $t
     /tmp/ccFI8abZ.s:1014   .text.envoipos:0000000000000000 envoipos
     /tmp/ccFI8abZ.s:1046   .text.Traduction:0000000000000000 $t
     /tmp/ccFI8abZ.s:1051   .text.Traduction:0000000000000000 Traduction
     /tmp/ccFI8abZ.s:1137   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
ARM GAS  /tmp/ccFI8abZ.s 			page 42


     /tmp/ccFI8abZ.s:1148   .text.WaitFor:0000000000000000 $t
     /tmp/ccFI8abZ.s:1153   .text.WaitFor:0000000000000000 WaitFor
     /tmp/ccFI8abZ.s:1179   .text.TaPosition:0000000000000000 $t
     /tmp/ccFI8abZ.s:1184   .text.TaPosition:0000000000000000 TaPosition
     /tmp/ccFI8abZ.s:1204   .text.ok:0000000000000000 $t
     /tmp/ccFI8abZ.s:1209   .text.ok:0000000000000000 ok
     /tmp/ccFI8abZ.s:1229   .text.Monte:0000000000000000 $t
     /tmp/ccFI8abZ.s:1234   .text.Monte:0000000000000000 Monte
     /tmp/ccFI8abZ.s:1258   .text.Descend:0000000000000000 $t
     /tmp/ccFI8abZ.s:1263   .text.Descend:0000000000000000 Descend
     /tmp/ccFI8abZ.s:1287   .text.Droite:0000000000000000 $t
     /tmp/ccFI8abZ.s:1292   .text.Droite:0000000000000000 Droite
     /tmp/ccFI8abZ.s:1316   .text.Gauche:0000000000000000 $t
     /tmp/ccFI8abZ.s:1321   .text.Gauche:0000000000000000 Gauche
     /tmp/ccFI8abZ.s:1345   .text.DansUnCoin:0000000000000000 $t
     /tmp/ccFI8abZ.s:1350   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/ccFI8abZ.s:1370   .text.Trouve:0000000000000000 $t
     /tmp/ccFI8abZ.s:1375   .text.Trouve:0000000000000000 Trouve
     /tmp/ccFI8abZ.s:1395   .text.Random:0000000000000000 $t
     /tmp/ccFI8abZ.s:1400   .text.Random:0000000000000000 Random
     /tmp/ccFI8abZ.s:1461   .text.Random:0000000000000044 $d
     /tmp/ccFI8abZ.s:1466   .text.Non:0000000000000000 $t
     /tmp/ccFI8abZ.s:1471   .text.Non:0000000000000000 Non
     /tmp/ccFI8abZ.s:1491   .text.MemeCase:0000000000000000 $t
     /tmp/ccFI8abZ.s:1496   .text.MemeCase:0000000000000000 MemeCase
     /tmp/ccFI8abZ.s:1516   .text.TuEsCoin:0000000000000000 $t
     /tmp/ccFI8abZ.s:1521   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/ccFI8abZ.s:1541   .text.deplacement:0000000000000000 $t
     /tmp/ccFI8abZ.s:1546   .text.deplacement:0000000000000000 deplacement
     /tmp/ccFI8abZ.s:1602   .text.motor:0000000000000000 $t
     /tmp/ccFI8abZ.s:1607   .text.motor:0000000000000000 motor
     /tmp/ccFI8abZ.s:1647   .text.motor:000000000000002c $d
     /tmp/ccFI8abZ.s:1652   .text.adcControl:0000000000000000 $t
     /tmp/ccFI8abZ.s:1657   .text.adcControl:0000000000000000 adcControl
     /tmp/ccFI8abZ.s:1699   .text.adcControl:000000000000002c $d
     /tmp/ccFI8abZ.s:1707   .text.uart:0000000000000000 $t
     /tmp/ccFI8abZ.s:1712   .text.uart:0000000000000000 uart
     /tmp/ccFI8abZ.s:1766   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/ccFI8abZ.s:1773   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/ccFI8abZ.s:1805   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/ccFI8abZ.s:1787   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/ccFI8abZ.s:1780   .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccFI8abZ.s:1798   .bss.adcValue:0000000000000000 adcValue
     /tmp/ccFI8abZ.s:1759   .bss.flag_adc:0000000000000000 flag_adc
     /tmp/ccFI8abZ.s:1755   .bss.flag_adc:0000000000000000 $d
     /tmp/ccFI8abZ.s:1762   .bss.flag_gauche:0000000000000000 $d
     /tmp/ccFI8abZ.s:1769   .bss.flag_droite:0000000000000000 $d
     /tmp/ccFI8abZ.s:1776   .bss.deplacement_fini:0000000000000000 $d
     /tmp/ccFI8abZ.s:1783   .bss.flag_haut:0000000000000000 $d
     /tmp/ccFI8abZ.s:1790   .rodata.str1.4:0000000000000000 $d
     /tmp/ccFI8abZ.s:1794   .bss.adcValue:0000000000000000 $d
     /tmp/ccFI8abZ.s:1801   .bss.flag_bas:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
ARM GAS  /tmp/ccFI8abZ.s 			page 43


osDelay
HAL_ADC_GetValue
HAL_UART_Transmit
huart2
huart1
HAL_UART_Receive
HAL_GPIO_TogglePin
time
srand
rand
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
HAL_ADC_Start_IT
printf
hadc1
