ARM GAS  /tmp/ccEdngC8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"freertos.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.alumer_gauche,"ax",%progbits
  21              		.align	2
  22              		.global	alumer_gauche
  23              		.thumb
  24              		.thumb_func
  26              	alumer_gauche:
  27              	.LFB128:
  28              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccEdngC8.s 			page 2


  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #include <time.h>
  59:Src/freertos.c **** #include <stdlib.h>
  60:Src/freertos.c **** 
  61:Src/freertos.c **** #define PWM_MAX 320
  62:Src/freertos.c **** #define DELAY 1000
  63:Src/freertos.c **** #define OK 0x06
  64:Src/freertos.c **** /* USER CODE END Includes */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* USER CODE BEGIN Variables */
  69:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  70:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  71:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  72:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** int flag_adc = 0;
  75:Src/freertos.c **** uint32_t adcValue = 0;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** int deplacement_fini = 0;
  78:Src/freertos.c **** 
  79:Src/freertos.c **** int flag_haut = 0;
  80:Src/freertos.c **** int flag_bas = 0;
  81:Src/freertos.c **** int flag_droite = 0;
  82:Src/freertos.c **** int flag_gauche = 0;
  83:Src/freertos.c **** int flag_distance = 0;
  84:Src/freertos.c **** int flag_cap =0;
  85:Src/freertos.c **** int flag_present = 0;
  86:Src/freertos.c **** 
  87:Src/freertos.c **** struct Robot {
ARM GAS  /tmp/ccEdngC8.s 			page 3


  88:Src/freertos.c ****     int posx;
  89:Src/freertos.c ****     int posy;
  90:Src/freertos.c ****     int orientation;
  91:Src/freertos.c **** };
  92:Src/freertos.c **** 
  93:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  94:Src/freertos.c **** 
  95:Src/freertos.c **** /* USER CODE END Variables */
  96:Src/freertos.c **** 
  97:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  98:Src/freertos.c **** 
  99:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 100:Src/freertos.c **** 
 101:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
 102:Src/freertos.c **** void alumer_gauche(int sens) {
  29              		.loc 1 102 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 103:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  41              		.loc 1 103 0
  42 0002 074C     		ldr	r4, .L3
  43 0004 0546     		mov	r5, r0
  44 0006 B0FA80F2 		clz	r2, r0
  45 000a 5209     		lsrs	r2, r2, #5
  46 000c 2046     		mov	r0, r4
  47              	.LVL1:
  48 000e 0221     		movs	r1, #2
  49 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL2:
 104:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  51              		.loc 1 104 0
  52 0014 2046     		mov	r0, r4
  53 0016 0121     		movs	r1, #1
  54 0018 EAB2     		uxtb	r2, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL3:
  57 001e 38BD     		pop	{r3, r4, r5, pc}
  58              	.LVL4:
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0020 00140048 		.word	1207964672
  63              		.cfi_endproc
  64              	.LFE128:
  66              		.section	.text.alumer_droite,"ax",%progbits
  67              		.align	2
  68              		.global	alumer_droite
  69              		.thumb
ARM GAS  /tmp/ccEdngC8.s 			page 4


  70              		.thumb_func
  72              	alumer_droite:
  73              	.LFB129:
 105:Src/freertos.c **** }
 106:Src/freertos.c **** 
 107:Src/freertos.c **** void alumer_droite(int sens) {
  74              		.loc 1 107 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL5:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
 108:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  84              		.loc 1 108 0
  85 0002 0446     		mov	r4, r0
  86 0004 B0FA80F2 		clz	r2, r0
  87 0008 5209     		lsrs	r2, r2, #5
  88 000a 4FF09040 		mov	r0, #1207959552
  89              	.LVL6:
  90 000e 4FF40061 		mov	r1, #2048
  91 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL7:
 109:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  93              		.loc 1 109 0
  94 0016 0348     		ldr	r0, .L7
  95 0018 2021     		movs	r1, #32
  96 001a E2B2     		uxtb	r2, r4
  97 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL8:
  99 0020 10BD     		pop	{r4, pc}
 100              	.LVL9:
 101              	.L8:
 102 0022 00BF     		.align	2
 103              	.L7:
 104 0024 00040048 		.word	1207960576
 105              		.cfi_endproc
 106              	.LFE129:
 108              		.section	.text.eteindre_gauche,"ax",%progbits
 109              		.align	2
 110              		.global	eteindre_gauche
 111              		.thumb
 112              		.thumb_func
 114              	eteindre_gauche:
 115              	.LFB130:
 110:Src/freertos.c **** }
 111:Src/freertos.c **** 
 112:Src/freertos.c **** void eteindre_gauche() {
 116              		.loc 1 112 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI2:
ARM GAS  /tmp/ccEdngC8.s 			page 5


 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 113:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 125              		.loc 1 113 0
 126 0002 064C     		ldr	r4, .L11
 127 0004 2046     		mov	r0, r4
 128 0006 0221     		movs	r1, #2
 129 0008 0022     		movs	r2, #0
 130 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL10:
 114:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 132              		.loc 1 114 0
 133 000e 2046     		mov	r0, r4
 134 0010 0121     		movs	r1, #1
 135 0012 0022     		movs	r2, #0
 136 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL11:
 138 0018 10BD     		pop	{r4, pc}
 139              	.L12:
 140 001a 00BF     		.align	2
 141              	.L11:
 142 001c 00140048 		.word	1207964672
 143              		.cfi_endproc
 144              	.LFE130:
 146              		.section	.text.eteindre_droite,"ax",%progbits
 147              		.align	2
 148              		.global	eteindre_droite
 149              		.thumb
 150              		.thumb_func
 152              	eteindre_droite:
 153              	.LFB131:
 115:Src/freertos.c **** }
 116:Src/freertos.c **** 
 117:Src/freertos.c **** void eteindre_droite() {
 154              		.loc 1 117 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
 118:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 163              		.loc 1 118 0
 164 0002 4FF09040 		mov	r0, #1207959552
 165 0006 4FF40061 		mov	r1, #2048
 166 000a 0022     		movs	r2, #0
 167 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL12:
 119:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 169              		.loc 1 119 0
 170 0010 0248     		ldr	r0, .L15
 171 0012 2021     		movs	r1, #32
 172 0014 0022     		movs	r2, #0
 173 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccEdngC8.s 			page 6


 174              	.LVL13:
 175 001a 08BD     		pop	{r3, pc}
 176              	.L16:
 177              		.align	2
 178              	.L15:
 179 001c 00040048 		.word	1207960576
 180              		.cfi_endproc
 181              	.LFE131:
 183              		.section	.text.pwm_max,"ax",%progbits
 184              		.align	2
 185              		.global	pwm_max
 186              		.thumb
 187              		.thumb_func
 189              	pwm_max:
 190              	.LFB132:
 120:Src/freertos.c **** }
 121:Src/freertos.c **** 
 122:Src/freertos.c **** void pwm_max() {
 191              		.loc 1 122 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 123:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 196              		.loc 1 123 0
 197 0000 034B     		ldr	r3, .L18
 198 0002 1B68     		ldr	r3, [r3]
 199 0004 4FF4A072 		mov	r2, #320
 200 0008 5A63     		str	r2, [r3, #52]
 124:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 201              		.loc 1 124 0
 202 000a 1A64     		str	r2, [r3, #64]
 203 000c 7047     		bx	lr
 204              	.L19:
 205 000e 00BF     		.align	2
 206              	.L18:
 207 0010 00000000 		.word	htim3
 208              		.cfi_endproc
 209              	.LFE132:
 211              		.section	.text.accelerer,"ax",%progbits
 212              		.align	2
 213              		.global	accelerer
 214              		.thumb
 215              		.thumb_func
 217              	accelerer:
 218              	.LFB133:
 125:Src/freertos.c **** }
 126:Src/freertos.c **** 
 127:Src/freertos.c **** void accelerer() {
 219              		.loc 1 127 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
ARM GAS  /tmp/ccEdngC8.s 			page 7


 227              		.cfi_offset 14, -4
 228              	.LVL14:
 128:Src/freertos.c ****     int pwm = 0;
 229              		.loc 1 128 0
 230 0002 0024     		movs	r4, #0
 129:Src/freertos.c ****     while (pwm != PWM_MAX) {
 231              		.loc 1 129 0
 232 0004 07E0     		b	.L21
 233              	.LVL15:
 234              	.L22:
 130:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 235              		.loc 1 130 0
 236 0006 064B     		ldr	r3, .L24
 237 0008 1B68     		ldr	r3, [r3]
 238 000a 5C63     		str	r4, [r3, #52]
 131:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 239              		.loc 1 131 0
 240 000c 1C64     		str	r4, [r3, #64]
 132:Src/freertos.c ****         pwm += 20;
 241              		.loc 1 132 0
 242 000e 1434     		adds	r4, r4, #20
 243              	.LVL16:
 133:Src/freertos.c ****         osDelay(50);
 244              		.loc 1 133 0
 245 0010 3220     		movs	r0, #50
 246 0012 FFF7FEFF 		bl	osDelay
 247              	.LVL17:
 248              	.L21:
 129:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 249              		.loc 1 129 0
 250 0016 B4F5A07F 		cmp	r4, #320
 251 001a F4D1     		bne	.L22
 134:Src/freertos.c ****     }
 135:Src/freertos.c **** }
 252              		.loc 1 135 0
 253 001c 10BD     		pop	{r4, pc}
 254              	.LVL18:
 255              	.L25:
 256 001e 00BF     		.align	2
 257              	.L24:
 258 0020 00000000 		.word	htim3
 259              		.cfi_endproc
 260              	.LFE133:
 262              		.section	.text.deccelerer,"ax",%progbits
 263              		.align	2
 264              		.global	deccelerer
 265              		.thumb
 266              		.thumb_func
 268              	deccelerer:
 269              	.LFB134:
 136:Src/freertos.c **** 
 137:Src/freertos.c **** void deccelerer() {
 270              		.loc 1 137 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccEdngC8.s 			page 8


 275              	.LCFI5:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279              	.LVL19:
 138:Src/freertos.c ****     int pwm = PWM_MAX;
 280              		.loc 1 138 0
 281 0002 4FF4A074 		mov	r4, #320
 139:Src/freertos.c ****     while (pwm != 0) {
 282              		.loc 1 139 0
 283 0006 07E0     		b	.L27
 284              	.LVL20:
 285              	.L28:
 140:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 286              		.loc 1 140 0
 287 0008 054B     		ldr	r3, .L30
 288 000a 1B68     		ldr	r3, [r3]
 289 000c 5C63     		str	r4, [r3, #52]
 141:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 290              		.loc 1 141 0
 291 000e 1C64     		str	r4, [r3, #64]
 142:Src/freertos.c ****         pwm -= 20;
 292              		.loc 1 142 0
 293 0010 143C     		subs	r4, r4, #20
 294              	.LVL21:
 143:Src/freertos.c ****         osDelay(50);
 295              		.loc 1 143 0
 296 0012 3220     		movs	r0, #50
 297 0014 FFF7FEFF 		bl	osDelay
 298              	.LVL22:
 299              	.L27:
 139:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 300              		.loc 1 139 0
 301 0018 002C     		cmp	r4, #0
 302 001a F5D1     		bne	.L28
 144:Src/freertos.c ****     }
 145:Src/freertos.c **** }
 303              		.loc 1 145 0
 304 001c 10BD     		pop	{r4, pc}
 305              	.LVL23:
 306              	.L31:
 307 001e 00BF     		.align	2
 308              	.L30:
 309 0020 00000000 		.word	htim3
 310              		.cfi_endproc
 311              	.LFE134:
 313              		.section	.text.avancer_robot,"ax",%progbits
 314              		.align	2
 315              		.global	avancer_robot
 316              		.thumb
 317              		.thumb_func
 319              	avancer_robot:
 320              	.LFB135:
 146:Src/freertos.c **** 
 147:Src/freertos.c **** void avancer_robot() {
 321              		.loc 1 147 0
 322              		.cfi_startproc
ARM GAS  /tmp/ccEdngC8.s 			page 9


 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI6:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 148:Src/freertos.c ****     alumer_droite(0);
 330              		.loc 1 148 0
 331 0002 0020     		movs	r0, #0
 332 0004 FFF7FEFF 		bl	alumer_droite
 333              	.LVL24:
 149:Src/freertos.c ****     alumer_gauche(0);
 334              		.loc 1 149 0
 335 0008 0020     		movs	r0, #0
 336 000a FFF7FEFF 		bl	alumer_gauche
 337              	.LVL25:
 150:Src/freertos.c ****     accelerer();
 338              		.loc 1 150 0
 339 000e FFF7FEFF 		bl	accelerer
 340              	.LVL26:
 151:Src/freertos.c ****     osDelay(850);//robot2 : 470 robot1 : 850
 341              		.loc 1 151 0
 342 0012 40F25230 		movw	r0, #850
 343 0016 FFF7FEFF 		bl	osDelay
 344              	.LVL27:
 152:Src/freertos.c ****     deccelerer();
 345              		.loc 1 152 0
 346 001a FFF7FEFF 		bl	deccelerer
 347              	.LVL28:
 153:Src/freertos.c ****     osDelay(850);
 348              		.loc 1 153 0
 349 001e 40F25230 		movw	r0, #850
 350 0022 FFF7FEFF 		bl	osDelay
 351              	.LVL29:
 154:Src/freertos.c ****     deccelerer();
 352              		.loc 1 154 0
 353 0026 FFF7FEFF 		bl	deccelerer
 354              	.LVL30:
 155:Src/freertos.c ****     eteindre_droite();
 355              		.loc 1 155 0
 356 002a FFF7FEFF 		bl	eteindre_droite
 357              	.LVL31:
 156:Src/freertos.c ****     eteindre_gauche();
 358              		.loc 1 156 0
 359 002e FFF7FEFF 		bl	eteindre_gauche
 360              	.LVL32:
 157:Src/freertos.c ****     deplacement_fini = 1;
 361              		.loc 1 157 0
 362 0032 0122     		movs	r2, #1
 363 0034 034B     		ldr	r3, .L34
 364 0036 1A60     		str	r2, [r3]
 158:Src/freertos.c ****     flag_distance -= 2;
 365              		.loc 1 158 0
 366 0038 034A     		ldr	r2, .L34+4
 367 003a 1368     		ldr	r3, [r2]
 368 003c 023B     		subs	r3, r3, #2
ARM GAS  /tmp/ccEdngC8.s 			page 10


 369 003e 1360     		str	r3, [r2]
 370 0040 08BD     		pop	{r3, pc}
 371              	.L35:
 372 0042 00BF     		.align	2
 373              	.L34:
 374 0044 00000000 		.word	.LANCHOR0
 375 0048 00000000 		.word	.LANCHOR1
 376              		.cfi_endproc
 377              	.LFE135:
 379              		.section	.text.reculer_robot,"ax",%progbits
 380              		.align	2
 381              		.global	reculer_robot
 382              		.thumb
 383              		.thumb_func
 385              	reculer_robot:
 386              	.LFB136:
 159:Src/freertos.c **** }
 160:Src/freertos.c **** 
 161:Src/freertos.c **** void reculer_robot() {
 387              		.loc 1 161 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391 0000 08B5     		push	{r3, lr}
 392              	.LCFI7:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 162:Src/freertos.c ****     alumer_droite(1);
 396              		.loc 1 162 0
 397 0002 0120     		movs	r0, #1
 398 0004 FFF7FEFF 		bl	alumer_droite
 399              	.LVL33:
 163:Src/freertos.c ****     alumer_gauche(1);
 400              		.loc 1 163 0
 401 0008 0120     		movs	r0, #1
 402 000a FFF7FEFF 		bl	alumer_gauche
 403              	.LVL34:
 164:Src/freertos.c ****     accelerer();
 404              		.loc 1 164 0
 405 000e FFF7FEFF 		bl	accelerer
 406              	.LVL35:
 165:Src/freertos.c ****     osDelay(850);
 407              		.loc 1 165 0
 408 0012 40F25230 		movw	r0, #850
 409 0016 FFF7FEFF 		bl	osDelay
 410              	.LVL36:
 166:Src/freertos.c ****     deccelerer();
 411              		.loc 1 166 0
 412 001a FFF7FEFF 		bl	deccelerer
 413              	.LVL37:
 167:Src/freertos.c ****     osDelay(850);//robot2 : 470 robot1 : 850
 414              		.loc 1 167 0
 415 001e 40F25230 		movw	r0, #850
 416 0022 FFF7FEFF 		bl	osDelay
 417              	.LVL38:
 168:Src/freertos.c ****     deccelerer();
ARM GAS  /tmp/ccEdngC8.s 			page 11


 418              		.loc 1 168 0
 419 0026 FFF7FEFF 		bl	deccelerer
 420              	.LVL39:
 169:Src/freertos.c ****     eteindre_droite();
 421              		.loc 1 169 0
 422 002a FFF7FEFF 		bl	eteindre_droite
 423              	.LVL40:
 170:Src/freertos.c ****     eteindre_gauche();
 424              		.loc 1 170 0
 425 002e FFF7FEFF 		bl	eteindre_gauche
 426              	.LVL41:
 171:Src/freertos.c ****     flag_distance += 1;
 427              		.loc 1 171 0
 428 0032 024A     		ldr	r2, .L38
 429 0034 1368     		ldr	r3, [r2]
 430 0036 0133     		adds	r3, r3, #1
 431 0038 1360     		str	r3, [r2]
 432 003a 08BD     		pop	{r3, pc}
 433              	.L39:
 434              		.align	2
 435              	.L38:
 436 003c 00000000 		.word	.LANCHOR1
 437              		.cfi_endproc
 438              	.LFE136:
 440              		.section	.text.pivoter_gauche,"ax",%progbits
 441              		.align	2
 442              		.global	pivoter_gauche
 443              		.thumb
 444              		.thumb_func
 446              	pivoter_gauche:
 447              	.LFB137:
 172:Src/freertos.c **** }
 173:Src/freertos.c **** 
 174:Src/freertos.c **** 
 175:Src/freertos.c **** void pivoter_gauche() {
 448              		.loc 1 175 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 08B5     		push	{r3, lr}
 453              	.LCFI8:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 3, -8
 456              		.cfi_offset 14, -4
 176:Src/freertos.c ****     pwm_max();
 457              		.loc 1 176 0
 458 0002 FFF7FEFF 		bl	pwm_max
 459              	.LVL42:
 177:Src/freertos.c ****     alumer_gauche(1);
 460              		.loc 1 177 0
 461 0006 0120     		movs	r0, #1
 462 0008 FFF7FEFF 		bl	alumer_gauche
 463              	.LVL43:
 178:Src/freertos.c ****     alumer_droite(0);
 464              		.loc 1 178 0
 465 000c 0020     		movs	r0, #0
 466 000e FFF7FEFF 		bl	alumer_droite
ARM GAS  /tmp/ccEdngC8.s 			page 12


 467              	.LVL44:
 179:Src/freertos.c ****     osDelay(115);//robot 2 : 40 robot1 : 115
 468              		.loc 1 179 0
 469 0012 7320     		movs	r0, #115
 470 0014 FFF7FEFF 		bl	osDelay
 471              	.LVL45:
 180:Src/freertos.c ****     deccelerer();
 472              		.loc 1 180 0
 473 0018 FFF7FEFF 		bl	deccelerer
 474              	.LVL46:
 181:Src/freertos.c ****     eteindre_droite();
 475              		.loc 1 181 0
 476 001c FFF7FEFF 		bl	eteindre_droite
 477              	.LVL47:
 182:Src/freertos.c ****     eteindre_gauche();
 478              		.loc 1 182 0
 479 0020 FFF7FEFF 		bl	eteindre_gauche
 480              	.LVL48:
 183:Src/freertos.c ****     deplacement_fini = 1;
 481              		.loc 1 183 0
 482 0024 0122     		movs	r2, #1
 483 0026 014B     		ldr	r3, .L42
 484 0028 1A60     		str	r2, [r3]
 485 002a 08BD     		pop	{r3, pc}
 486              	.L43:
 487              		.align	2
 488              	.L42:
 489 002c 00000000 		.word	.LANCHOR0
 490              		.cfi_endproc
 491              	.LFE137:
 493              		.section	.text.pivoter_droite,"ax",%progbits
 494              		.align	2
 495              		.global	pivoter_droite
 496              		.thumb
 497              		.thumb_func
 499              	pivoter_droite:
 500              	.LFB138:
 184:Src/freertos.c **** }
 185:Src/freertos.c **** 
 186:Src/freertos.c **** void pivoter_droite() {
 501              		.loc 1 186 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI9:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 187:Src/freertos.c ****     pwm_max();
 510              		.loc 1 187 0
 511 0002 FFF7FEFF 		bl	pwm_max
 512              	.LVL49:
 188:Src/freertos.c ****     alumer_droite(1);
 513              		.loc 1 188 0
 514 0006 0120     		movs	r0, #1
 515 0008 FFF7FEFF 		bl	alumer_droite
ARM GAS  /tmp/ccEdngC8.s 			page 13


 516              	.LVL50:
 189:Src/freertos.c ****     alumer_gauche(0);
 517              		.loc 1 189 0
 518 000c 0020     		movs	r0, #0
 519 000e FFF7FEFF 		bl	alumer_gauche
 520              	.LVL51:
 190:Src/freertos.c ****     osDelay(115);
 521              		.loc 1 190 0
 522 0012 7320     		movs	r0, #115
 523 0014 FFF7FEFF 		bl	osDelay
 524              	.LVL52:
 191:Src/freertos.c ****     decelerer();
 525              		.loc 1 191 0
 526 0018 FFF7FEFF 		bl	decelerer
 527              	.LVL53:
 192:Src/freertos.c ****     eteindre_droite();
 528              		.loc 1 192 0
 529 001c FFF7FEFF 		bl	eteindre_droite
 530              	.LVL54:
 193:Src/freertos.c ****     eteindre_gauche();
 531              		.loc 1 193 0
 532 0020 FFF7FEFF 		bl	eteindre_gauche
 533              	.LVL55:
 194:Src/freertos.c ****     deplacement_fini = 1;
 534              		.loc 1 194 0
 535 0024 0122     		movs	r2, #1
 536 0026 014B     		ldr	r3, .L46
 537 0028 1A60     		str	r2, [r3]
 538 002a 08BD     		pop	{r3, pc}
 539              	.L47:
 540              		.align	2
 541              	.L46:
 542 002c 00000000 		.word	.LANCHOR0
 543              		.cfi_endproc
 544              	.LFE138:
 546              		.section	.text.gestion_moteurs,"ax",%progbits
 547              		.align	2
 548              		.global	gestion_moteurs
 549              		.thumb
 550              		.thumb_func
 552              	gestion_moteurs:
 553              	.LFB139:
 195:Src/freertos.c **** }
 196:Src/freertos.c **** 
 197:Src/freertos.c **** void gestion_moteurs()
 198:Src/freertos.c **** {
 554              		.loc 1 198 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 08B5     		push	{r3, lr}
 559              	.LCFI10:
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 3, -8
 562              		.cfi_offset 14, -4
 199:Src/freertos.c ****     if (flag_distance > 0) {
 563              		.loc 1 199 0
ARM GAS  /tmp/ccEdngC8.s 			page 14


 564 0002 064B     		ldr	r3, .L52
 565 0004 1B68     		ldr	r3, [r3]
 566 0006 002B     		cmp	r3, #0
 567 0008 01DD     		ble	.L49
 200:Src/freertos.c ****       avancer_robot();
 568              		.loc 1 200 0
 569 000a FFF7FEFF 		bl	avancer_robot
 570              	.LVL56:
 571              	.L49:
 201:Src/freertos.c ****     }
 202:Src/freertos.c **** 
 203:Src/freertos.c ****     if (flag_distance < 0) {
 572              		.loc 1 203 0
 573 000e 034B     		ldr	r3, .L52
 574 0010 1B68     		ldr	r3, [r3]
 575 0012 002B     		cmp	r3, #0
 576 0014 01DA     		bge	.L48
 204:Src/freertos.c ****       reculer_robot();
 577              		.loc 1 204 0
 578 0016 FFF7FEFF 		bl	reculer_robot
 579              	.LVL57:
 580              	.L48:
 581 001a 08BD     		pop	{r3, pc}
 582              	.L53:
 583              		.align	2
 584              	.L52:
 585 001c 00000000 		.word	.LANCHOR1
 586              		.cfi_endproc
 587              	.LFE139:
 589              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 590              		.align	2
 591              		.global	HAL_ADC_ConvCpltCallback
 592              		.thumb
 593              		.thumb_func
 595              	HAL_ADC_ConvCpltCallback:
 596              	.LFB140:
 205:Src/freertos.c ****     }
 206:Src/freertos.c **** 
 207:Src/freertos.c ****     /*
 208:Src/freertos.c ****     if (flag_cap < 0) {
 209:Src/freertos.c ****       pivoter_gauche();
 210:Src/freertos.c ****       flag_cap ++;
 211:Src/freertos.c ****       while(!deplacement_fini);
 212:Src/freertos.c ****       deplacement_fini = 0;
 213:Src/freertos.c ****     }
 214:Src/freertos.c **** 
 215:Src/freertos.c ****     if (flag_cap > 0) {
 216:Src/freertos.c ****       flag_cap --;
 217:Src/freertos.c ****       while(!deplacement_fini);
 218:Src/freertos.c ****       deplacement_fini = 0;
 219:Src/freertos.c ****     }
 220:Src/freertos.c ****     */
 221:Src/freertos.c **** }
 222:Src/freertos.c **** 
 223:Src/freertos.c **** /* END Fonctions pour les moteurs */
 224:Src/freertos.c **** 
 225:Src/freertos.c **** /* BEGIN Fonctions ADC */
ARM GAS  /tmp/ccEdngC8.s 			page 15


 226:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 597              		.loc 1 226 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL58:
 602 0000 08B5     		push	{r3, lr}
 603              	.LCFI11:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 3, -8
 606              		.cfi_offset 14, -4
 227:Src/freertos.c ****     UNUSED(hadc);
 228:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 607              		.loc 1 228 0
 608 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 609              	.LVL59:
 610 0006 034B     		ldr	r3, .L56
 611 0008 1860     		str	r0, [r3]
 229:Src/freertos.c ****     flag_adc = 1;
 612              		.loc 1 229 0
 613 000a 0122     		movs	r2, #1
 614 000c 024B     		ldr	r3, .L56+4
 615 000e 1A60     		str	r2, [r3]
 616 0010 08BD     		pop	{r3, pc}
 617              	.L57:
 618 0012 00BF     		.align	2
 619              	.L56:
 620 0014 00000000 		.word	.LANCHOR2
 621 0018 00000000 		.word	.LANCHOR3
 622              		.cfi_endproc
 623              	.LFE140:
 625              		.section	.text._write,"ax",%progbits
 626              		.align	2
 627              		.global	_write
 628              		.thumb
 629              		.thumb_func
 631              	_write:
 632              	.LFB141:
 230:Src/freertos.c **** }
 231:Src/freertos.c **** 
 232:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 633              		.loc 1 232 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              	.LVL60:
 638 0000 10B5     		push	{r4, lr}
 639              	.LCFI12:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 4, -8
 642              		.cfi_offset 14, -4
 643 0002 1446     		mov	r4, r2
 233:Src/freertos.c ****     UNUSED(file);
 234:Src/freertos.c **** 
 235:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 644              		.loc 1 235 0
 645 0004 0348     		ldr	r0, .L60
ARM GAS  /tmp/ccEdngC8.s 			page 16


 646              	.LVL61:
 647 0006 92B2     		uxth	r2, r2
 648              	.LVL62:
 649 0008 42F21073 		movw	r3, #10000
 650 000c FFF7FEFF 		bl	HAL_UART_Transmit
 651              	.LVL63:
 236:Src/freertos.c ****     return len;
 237:Src/freertos.c **** }
 652              		.loc 1 237 0
 653 0010 2046     		mov	r0, r4
 654 0012 10BD     		pop	{r4, pc}
 655              	.LVL64:
 656              	.L61:
 657              		.align	2
 658              	.L60:
 659 0014 00000000 		.word	huart2
 660              		.cfi_endproc
 661              	.LFE141:
 663              		.section	.text.distance,"ax",%progbits
 664              		.align	2
 665              		.global	distance
 666              		.thumb
 667              		.thumb_func
 669              	distance:
 670              	.LFB142:
 238:Src/freertos.c **** 
 239:Src/freertos.c **** int distance() {
 671              		.loc 1 239 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 676              	.LVL65:
 240:Src/freertos.c ****     int value = 0;
 241:Src/freertos.c ****     if (adcValue >= 3800) {
 677              		.loc 1 241 0
 678 0000 294B     		ldr	r3, .L93
 679 0002 1B68     		ldr	r3, [r3]
 680 0004 40F6D762 		movw	r2, #3799
 681 0008 9342     		cmp	r3, r2
 682 000a 01D8     		bhi	.L78
 240:Src/freertos.c ****     int value = 0;
 683              		.loc 1 240 0
 684 000c 0020     		movs	r0, #0
 685 000e 00E0     		b	.L63
 686              	.L78:
 242:Src/freertos.c ****         value = 6;
 687              		.loc 1 242 0
 688 0010 0620     		movs	r0, #6
 689              	.L63:
 690              	.LVL66:
 243:Src/freertos.c ****     }
 244:Src/freertos.c ****     if (adcValue >= 3750 && adcValue < 3800) {
 691              		.loc 1 244 0
 692 0012 A3F6A662 		subw	r2, r3, #3750
 693 0016 312A     		cmp	r2, #49
 694 0018 00D8     		bhi	.L64
ARM GAS  /tmp/ccEdngC8.s 			page 17


 245:Src/freertos.c ****         value = 7;
 695              		.loc 1 245 0
 696 001a 0720     		movs	r0, #7
 697              	.LVL67:
 698              	.L64:
 246:Src/freertos.c ****     }
 247:Src/freertos.c ****     if (adcValue >= 3430 && adcValue < 3750) {
 699              		.loc 1 247 0
 700 001c A3F66652 		subw	r2, r3, #3430
 701 0020 B2F5A07F 		cmp	r2, #320
 702 0024 00D2     		bcs	.L65
 248:Src/freertos.c ****         value = 8;
 703              		.loc 1 248 0
 704 0026 0820     		movs	r0, #8
 705              	.LVL68:
 706              	.L65:
 249:Src/freertos.c ****     }
 250:Src/freertos.c ****     if (adcValue >= 3140 && adcValue < 3420) {
 707              		.loc 1 250 0
 708 0028 A3F64442 		subw	r2, r3, #3140
 709 002c B2F58C7F 		cmp	r2, #280
 710 0030 00D2     		bcs	.L66
 251:Src/freertos.c ****         value = 9;
 711              		.loc 1 251 0
 712 0032 0920     		movs	r0, #9
 713              	.LVL69:
 714              	.L66:
 252:Src/freertos.c ****     }
 253:Src/freertos.c ****     if (adcValue >= 2880 && adcValue < 3140) {
 715              		.loc 1 253 0
 716 0034 A3F53462 		sub	r2, r3, #2880
 717 0038 B2F5827F 		cmp	r2, #260
 718 003c 00D2     		bcs	.L67
 254:Src/freertos.c ****         value = 10;
 719              		.loc 1 254 0
 720 003e 0A20     		movs	r0, #10
 721              	.LVL70:
 722              	.L67:
 255:Src/freertos.c ****     }
 256:Src/freertos.c ****     if (adcValue >= 2690 && adcValue < 2880) {
 723              		.loc 1 256 0
 724 0040 A3F68222 		subw	r2, r3, #2690
 725 0044 BD2A     		cmp	r2, #189
 726 0046 00D8     		bhi	.L68
 257:Src/freertos.c ****         value = 11;
 727              		.loc 1 257 0
 728 0048 0B20     		movs	r0, #11
 729              	.LVL71:
 730              	.L68:
 258:Src/freertos.c ****     }
 259:Src/freertos.c ****     if (adcValue >= 2510 && adcValue < 2690) {
 731              		.loc 1 259 0
 732 004a A3F6CE12 		subw	r2, r3, #2510
 733 004e B32A     		cmp	r2, #179
 734 0050 00D8     		bhi	.L69
 260:Src/freertos.c ****         value = 12;
 735              		.loc 1 260 0
ARM GAS  /tmp/ccEdngC8.s 			page 18


 736 0052 0C20     		movs	r0, #12
 737              	.LVL72:
 738              	.L69:
 261:Src/freertos.c ****     }
 262:Src/freertos.c ****     if (adcValue >= 2460 && adcValue < 2510) {
 739              		.loc 1 262 0
 740 0054 A3F69C12 		subw	r2, r3, #2460
 741 0058 312A     		cmp	r2, #49
 742 005a 00D8     		bhi	.L70
 263:Src/freertos.c ****         value = 13;
 743              		.loc 1 263 0
 744 005c 0D20     		movs	r0, #13
 745              	.LVL73:
 746              	.L70:
 264:Src/freertos.c ****     }
 265:Src/freertos.c ****     if (adcValue >= 2250 && adcValue < 2460) {
 747              		.loc 1 265 0
 748 005e A3F6CA02 		subw	r2, r3, #2250
 749 0062 D12A     		cmp	r2, #209
 750 0064 00D8     		bhi	.L71
 266:Src/freertos.c ****         value = 14;
 751              		.loc 1 266 0
 752 0066 0E20     		movs	r0, #14
 753              	.LVL74:
 754              	.L71:
 267:Src/freertos.c ****     }
 268:Src/freertos.c ****     if (adcValue >= 2140 && adcValue < 2250) {
 755              		.loc 1 268 0
 756 0068 A3F65C02 		subw	r2, r3, #2140
 757 006c 6D2A     		cmp	r2, #109
 758 006e 00D8     		bhi	.L72
 269:Src/freertos.c ****         value = 15;
 759              		.loc 1 269 0
 760 0070 0F20     		movs	r0, #15
 761              	.LVL75:
 762              	.L72:
 270:Src/freertos.c ****     }
 271:Src/freertos.c ****     if (adcValue >= 2070 && adcValue < 2140) {
 763              		.loc 1 271 0
 764 0072 A3F61602 		subw	r2, r3, #2070
 765 0076 452A     		cmp	r2, #69
 766 0078 00D8     		bhi	.L73
 272:Src/freertos.c ****         value = 16;
 767              		.loc 1 272 0
 768 007a 1020     		movs	r0, #16
 769              	.LVL76:
 770              	.L73:
 273:Src/freertos.c ****     }
 274:Src/freertos.c ****     if (adcValue >= 1970 && adcValue < 2070) {
 771              		.loc 1 274 0
 772 007c A3F2B272 		subw	r2, r3, #1970
 773 0080 632A     		cmp	r2, #99
 774 0082 00D8     		bhi	.L74
 275:Src/freertos.c ****         value = 17;
 775              		.loc 1 275 0
 776 0084 1120     		movs	r0, #17
 777              	.LVL77:
ARM GAS  /tmp/ccEdngC8.s 			page 19


 778              	.L74:
 276:Src/freertos.c ****     }
 277:Src/freertos.c ****     if (adcValue >= 1910 && adcValue < 1970) {
 779              		.loc 1 277 0
 780 0086 A3F27672 		subw	r2, r3, #1910
 781 008a 3B2A     		cmp	r2, #59
 782 008c 00D8     		bhi	.L75
 278:Src/freertos.c ****         value = 18;
 783              		.loc 1 278 0
 784 008e 1220     		movs	r0, #18
 785              	.LVL78:
 786              	.L75:
 279:Src/freertos.c ****     }
 280:Src/freertos.c ****     if (adcValue >= 1850 && adcValue < 1910) {
 787              		.loc 1 280 0
 788 0090 A3F23A72 		subw	r2, r3, #1850
 789 0094 3B2A     		cmp	r2, #59
 790 0096 00D8     		bhi	.L76
 281:Src/freertos.c ****         value = 19;
 791              		.loc 1 281 0
 792 0098 1320     		movs	r0, #19
 793              	.LVL79:
 794              	.L76:
 282:Src/freertos.c ****     }
 283:Src/freertos.c ****     if (adcValue >= 1780 && adcValue < 1850) {
 795              		.loc 1 283 0
 796 009a A3F2F463 		subw	r3, r3, #1780
 797 009e 452B     		cmp	r3, #69
 798 00a0 00D8     		bhi	.L77
 284:Src/freertos.c ****         value = 20;
 799              		.loc 1 284 0
 800 00a2 1420     		movs	r0, #20
 801              	.LVL80:
 802              	.L77:
 285:Src/freertos.c ****     }
 286:Src/freertos.c ****     return(value);
 287:Src/freertos.c **** }
 803              		.loc 1 287 0
 804 00a4 7047     		bx	lr
 805              	.L94:
 806 00a6 00BF     		.align	2
 807              	.L93:
 808 00a8 00000000 		.word	.LANCHOR2
 809              		.cfi_endproc
 810              	.LFE142:
 812              		.section	.text.estPresent,"ax",%progbits
 813              		.align	2
 814              		.global	estPresent
 815              		.thumb
 816              		.thumb_func
 818              	estPresent:
 819              	.LFB143:
 288:Src/freertos.c **** 
 289:Src/freertos.c **** void estPresent() {
 820              		.loc 1 289 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEdngC8.s 			page 20


 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824 0000 08B5     		push	{r3, lr}
 825              	.LCFI13:
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 3, -8
 828              		.cfi_offset 14, -4
 290:Src/freertos.c ****     int value;
 291:Src/freertos.c ****     value = distance();
 829              		.loc 1 291 0
 830 0002 FFF7FEFF 		bl	distance
 831              	.LVL81:
 292:Src/freertos.c ****     if (value != 0 && value <= 20) {
 832              		.loc 1 292 0
 833 0006 20B1     		cbz	r0, .L95
 834              		.loc 1 292 0 is_stmt 0 discriminator 1
 835 0008 1428     		cmp	r0, #20
 836 000a 02DC     		bgt	.L95
 293:Src/freertos.c ****         flag_present = 1;
 837              		.loc 1 293 0 is_stmt 1
 838 000c 0122     		movs	r2, #1
 839 000e 014B     		ldr	r3, .L98
 840 0010 1A60     		str	r2, [r3]
 841              	.L95:
 842 0012 08BD     		pop	{r3, pc}
 843              	.L99:
 844              		.align	2
 845              	.L98:
 846 0014 00000000 		.word	.LANCHOR4
 847              		.cfi_endproc
 848              	.LFE143:
 850              		.section	.text.EnvoiMessage,"ax",%progbits
 851              		.align	2
 852              		.global	EnvoiMessage
 853              		.thumb
 854              		.thumb_func
 856              	EnvoiMessage:
 857              	.LFB144:
 294:Src/freertos.c ****     }
 295:Src/freertos.c **** }
 296:Src/freertos.c **** 
 297:Src/freertos.c **** /* END Fonctions ADC */
 298:Src/freertos.c **** 
 299:Src/freertos.c **** /* BEGIN Fonctions UART */
 300:Src/freertos.c ****     void EnvoiMessage(uint8_t data){
 858              		.loc 1 300 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 8
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              	.LVL82:
 863 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 864              	.LCFI14:
 865              		.cfi_def_cfa_offset 32
 866              		.cfi_offset 4, -32
 867              		.cfi_offset 5, -28
 868              		.cfi_offset 6, -24
 869              		.cfi_offset 7, -20
 870              		.cfi_offset 8, -16
ARM GAS  /tmp/ccEdngC8.s 			page 21


 871              		.cfi_offset 9, -12
 872              		.cfi_offset 10, -8
 873              		.cfi_offset 14, -4
 874 0004 82B0     		sub	sp, sp, #8
 875              	.LCFI15:
 876              		.cfi_def_cfa_offset 40
 301:Src/freertos.c ****         uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit,
 302:Src/freertos.c **** 
 303:Src/freertos.c ****         eun = (data & 0x01);
 877              		.loc 1 303 0
 878 0006 00F0010E 		and	lr, r0, #1
 879              	.LVL83:
 304:Src/freertos.c ****         edeux = (data & 0x02)/2;
 880              		.loc 1 304 0
 881 000a C0F34006 		ubfx	r6, r0, #1, #1
 882              	.LVL84:
 305:Src/freertos.c ****         equatre =(data & 0x04)/4;
 883              		.loc 1 305 0
 884 000e 00F00403 		and	r3, r0, #4
 885 0012 DBB2     		uxtb	r3, r3
 886 0014 9B10     		asrs	r3, r3, #2
 887 0016 DBB2     		uxtb	r3, r3
 888              	.LVL85:
 306:Src/freertos.c ****         ehuit = (data & 0x08)/8;
 889              		.loc 1 306 0
 890 0018 00F00801 		and	r1, r0, #8
 891 001c C9B2     		uxtb	r1, r1
 892 001e C910     		asrs	r1, r1, #3
 893 0020 CFB2     		uxtb	r7, r1
 894              	.LVL86:
 307:Src/freertos.c ****         eseize = (data & 0x10)/16;
 895              		.loc 1 307 0
 896 0022 00F01004 		and	r4, r0, #16
 897 0026 E4B2     		uxtb	r4, r4
 898 0028 2411     		asrs	r4, r4, #4
 899 002a 5FFA84FC 		uxtb	ip, r4
 900              	.LVL87:
 308:Src/freertos.c ****         etrentedeux = (data & 0x20)/32;
 901              		.loc 1 308 0
 902 002e 00F02002 		and	r2, r0, #32
 903 0032 D2B2     		uxtb	r2, r2
 904 0034 5211     		asrs	r2, r2, #5
 905 0036 D2B2     		uxtb	r2, r2
 906              	.LVL88:
 309:Src/freertos.c ****         esoixantequatre = (data & 0x40)/64;
 907              		.loc 1 309 0
 908 0038 00F04005 		and	r5, r0, #64
 909 003c EDB2     		uxtb	r5, r5
 910 003e AD11     		asrs	r5, r5, #6
 911 0040 5FFA85F8 		uxtb	r8, r5
 912              	.LVL89:
 310:Src/freertos.c ****         ecentvingthuit = (data & 0x80)/128;
 913              		.loc 1 310 0
 914 0044 00F08000 		and	r0, r0, #128
 915              	.LVL90:
 916 0048 C011     		asrs	r0, r0, #7
 917 004a C0B2     		uxtb	r0, r0
ARM GAS  /tmp/ccEdngC8.s 			page 22


 918              	.LVL91:
 311:Src/freertos.c **** 
 312:Src/freertos.c ****         b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequat
 919              		.loc 1 312 0
 920 004c 80EA020A 		eor	r10, r0, r2
 921 0050 80EA0809 		eor	r9, r0, r8
 922 0054 09EB4A09 		add	r9, r9, r10, lsl #1
 923 0058 88EA0208 		eor	r8, r8, r2
 924              	.LVL92:
 925 005c 08EB4908 		add	r8, r8, r9, lsl #1
 926 0060 00EB4800 		add	r0, r0, r8, lsl #1
 927              	.LVL93:
 928 0064 05EB4000 		add	r0, r5, r0, lsl #1
 929 0068 02EB4002 		add	r2, r2, r0, lsl #1
 930              	.LVL94:
 931 006c 8DF80720 		strb	r2, [sp, #7]
 313:Src/freertos.c ****         k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + eq
 932              		.loc 1 313 0
 933 0070 8CEA0302 		eor	r2, ip, r3
 934 0074 8CEA070C 		eor	ip, ip, r7
 935              	.LVL95:
 936 0078 0CEB420C 		add	ip, ip, r2, lsl #1
 937 007c 5F40     		eors	r7, r7, r3
 938              	.LVL96:
 939 007e 07EB4C07 		add	r7, r7, ip, lsl #1
 940 0082 04EB4707 		add	r7, r4, r7, lsl #1
 941 0086 01EB4701 		add	r1, r1, r7, lsl #1
 942              	.LVL97:
 943 008a 03EB4103 		add	r3, r3, r1, lsl #1
 944              	.LVL98:
 945 008e 8DF80630 		strb	r3, [sp, #6]
 314:Src/freertos.c ****         z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 946              		.loc 1 314 0
 947 0092 F3B2     		uxtb	r3, r6
 948 0094 03EB4E02 		add	r2, r3, lr, lsl #1
 949 0098 86EA0E06 		eor	r6, r6, lr
 950              	.LVL99:
 951 009c 06EB4206 		add	r6, r6, r2, lsl #1
 952 00a0 03EB8606 		add	r6, r3, r6, lsl #2
 953 00a4 0EEB460E 		add	lr, lr, r6, lsl #1
 954              	.LVL100:
 955 00a8 8DF805E0 		strb	lr, [sp, #5]
 315:Src/freertos.c **** 
 316:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 956              		.loc 1 316 0
 957 00ac 124C     		ldr	r4, .L108
 958              	.LVL101:
 959 00ae 2046     		mov	r0, r4
 960 00b0 0DF10701 		add	r1, sp, #7
 961 00b4 0122     		movs	r2, #1
 962 00b6 4EF6EE63 		movw	r3, #61166
 963              	.LVL102:
 964 00ba FFF7FEFF 		bl	HAL_UART_Transmit
 965              	.LVL103:
 317:Src/freertos.c ****         osDelay(2);
 966              		.loc 1 317 0
 967 00be 0220     		movs	r0, #2
ARM GAS  /tmp/ccEdngC8.s 			page 23


 968 00c0 FFF7FEFF 		bl	osDelay
 969              	.LVL104:
 318:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 970              		.loc 1 318 0
 971 00c4 2046     		mov	r0, r4
 972 00c6 0DF10601 		add	r1, sp, #6
 973 00ca 0122     		movs	r2, #1
 974 00cc 4EF6EE63 		movw	r3, #61166
 975 00d0 FFF7FEFF 		bl	HAL_UART_Transmit
 976              	.LVL105:
 319:Src/freertos.c ****         osDelay(2);
 977              		.loc 1 319 0
 978 00d4 0220     		movs	r0, #2
 979 00d6 FFF7FEFF 		bl	osDelay
 980              	.LVL106:
 320:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 981              		.loc 1 320 0
 982 00da 2046     		mov	r0, r4
 983 00dc 0DF10501 		add	r1, sp, #5
 984 00e0 0122     		movs	r2, #1
 985 00e2 4EF6EE63 		movw	r3, #61166
 986 00e6 FFF7FEFF 		bl	HAL_UART_Transmit
 987              	.LVL107:
 321:Src/freertos.c ****         osDelay(2);
 988              		.loc 1 321 0
 989 00ea 0220     		movs	r0, #2
 990 00ec FFF7FEFF 		bl	osDelay
 991              	.LVL108:
 322:Src/freertos.c ****     }
 992              		.loc 1 322 0
 993 00f0 02B0     		add	sp, sp, #8
 994              	.LCFI16:
 995              		.cfi_def_cfa_offset 32
 996              		@ sp needed
 997 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 998              	.LVL109:
 999              	.L109:
 1000 00f6 00BF     		.align	2
 1001              	.L108:
 1002 00f8 00000000 		.word	huart1
 1003              		.cfi_endproc
 1004              	.LFE144:
 1006              		.section	.text.ReceptionMessage,"ax",%progbits
 1007              		.align	2
 1008              		.global	ReceptionMessage
 1009              		.thumb
 1010              		.thumb_func
 1012              	ReceptionMessage:
 1013              	.LFB145:
 323:Src/freertos.c **** 
 324:Src/freertos.c ****     int ReceptionMessage(){
 1014              		.loc 1 324 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 8
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1019              	.LCFI17:
ARM GAS  /tmp/ccEdngC8.s 			page 24


 1020              		.cfi_def_cfa_offset 28
 1021              		.cfi_offset 4, -28
 1022              		.cfi_offset 5, -24
 1023              		.cfi_offset 6, -20
 1024              		.cfi_offset 7, -16
 1025              		.cfi_offset 8, -12
 1026              		.cfi_offset 9, -8
 1027              		.cfi_offset 14, -4
 1028 0004 83B0     		sub	sp, sp, #12
 1029              	.LCFI18:
 1030              		.cfi_def_cfa_offset 40
 325:Src/freertos.c ****         uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 326:Src/freertos.c ****         uint8_t rec[3];
 327:Src/freertos.c ****         HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 1031              		.loc 1 327 0
 1032 0006 414C     		ldr	r4, .L128
 1033 0008 2046     		mov	r0, r4
 1034 000a 0DF10701 		add	r1, sp, #7
 1035 000e 0122     		movs	r2, #1
 1036 0010 4EF6EE63 		movw	r3, #61166
 1037 0014 FFF7FEFF 		bl	HAL_UART_Receive
 1038              	.LVL110:
 328:Src/freertos.c ****         HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
 1039              		.loc 1 328 0
 1040 0018 2046     		mov	r0, r4
 1041 001a 0DF10601 		add	r1, sp, #6
 1042 001e 0122     		movs	r2, #1
 1043 0020 4EF6EE63 		movw	r3, #61166
 1044 0024 FFF7FEFF 		bl	HAL_UART_Receive
 1045              	.LVL111:
 329:Src/freertos.c ****         HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 1046              		.loc 1 329 0
 1047 0028 2046     		mov	r0, r4
 1048 002a 0DF10501 		add	r1, sp, #5
 1049 002e 0122     		movs	r2, #1
 1050 0030 4EF6EE63 		movw	r3, #61166
 1051 0034 FFF7FEFF 		bl	HAL_UART_Receive
 1052              	.LVL112:
 330:Src/freertos.c **** 
 331:Src/freertos.c ****         rec[0] = r;
 1053              		.loc 1 331 0
 1054 0038 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 1055 003c 8DF800C0 		strb	ip, [sp]
 332:Src/freertos.c ****         rec[1] = m;
 1056              		.loc 1 332 0
 1057 0040 9DF80650 		ldrb	r5, [sp, #6]	@ zero_extendqisi2
 1058 0044 8DF80150 		strb	r5, [sp, #1]
 333:Src/freertos.c ****         rec[2] = n;
 1059              		.loc 1 333 0
 1060 0048 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
 1061 004c 8DF80280 		strb	r8, [sp, #2]
 1062              	.LVL113:
 334:Src/freertos.c ****         ok = 1;
 335:Src/freertos.c ****         for (i =0; i<3; i++) {
 1063              		.loc 1 335 0
 1064 0050 0024     		movs	r4, #0
 334:Src/freertos.c ****         ok = 1;
ARM GAS  /tmp/ccEdngC8.s 			page 25


 1065              		.loc 1 334 0
 1066 0052 4FF0010E 		mov	lr, #1
 1067              		.loc 1 335 0
 1068 0056 2DE0     		b	.L111
 1069              	.LVL114:
 1070              	.L119:
 336:Src/freertos.c ****             run = (rec[i] & 0x01);
 1071              		.loc 1 336 0
 1072 0058 02AB     		add	r3, sp, #8
 1073 005a 2344     		add	r3, r3, r4
 1074 005c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1075 0060 03F00106 		and	r6, r3, #1
 1076              	.LVL115:
 337:Src/freertos.c ****             rdeux = (rec[i] & 0x02)/2;
 1077              		.loc 1 337 0
 1078 0064 C3F34007 		ubfx	r7, r3, #1, #1
 1079              	.LVL116:
 338:Src/freertos.c ****             rquatre =(rec[i] & 0x04)/4;
 1080              		.loc 1 338 0
 1081 0068 03F00402 		and	r2, r3, #4
 1082 006c D2B2     		uxtb	r2, r2
 1083 006e 9210     		asrs	r2, r2, #2
 1084 0070 D2B2     		uxtb	r2, r2
 1085              	.LVL117:
 339:Src/freertos.c ****             rhuit = (rec[i] & 0x08)/8;
 1086              		.loc 1 339 0
 1087 0072 03F00800 		and	r0, r3, #8
 1088 0076 C0B2     		uxtb	r0, r0
 1089 0078 C010     		asrs	r0, r0, #3
 1090 007a C0B2     		uxtb	r0, r0
 1091              	.LVL118:
 340:Src/freertos.c ****             rseize = (rec[i] & 0x10)/16;
 1092              		.loc 1 340 0
 1093 007c 03F01001 		and	r1, r3, #16
 1094 0080 C9B2     		uxtb	r1, r1
 1095 0082 0911     		asrs	r1, r1, #4
 1096 0084 C9B2     		uxtb	r1, r1
 1097              	.LVL119:
 341:Src/freertos.c ****             rtrentedeux = (rec[i] & 0x20)/32;
 1098              		.loc 1 341 0
 1099 0086 03F02003 		and	r3, r3, #32
 1100 008a DBB2     		uxtb	r3, r3
 1101 008c 5B11     		asrs	r3, r3, #5
 1102 008e DBB2     		uxtb	r3, r3
 1103              	.LVL120:
 342:Src/freertos.c ****             if ((run^rdeux) != rhuit) ok =0;
 1104              		.loc 1 342 0
 1105 0090 86EA0709 		eor	r9, r6, r7
 1106 0094 8145     		cmp	r9, r0
 1107 0096 01D0     		beq	.L116
 1108 0098 4FF0000E 		mov	lr, #0
 1109              	.LVL121:
 1110              	.L116:
 343:Src/freertos.c ****             if ((rdeux^rquatre) != rseize) ok =0;
 1111              		.loc 1 343 0
 1112 009c 5740     		eors	r7, r7, r2
 1113              	.LVL122:
ARM GAS  /tmp/ccEdngC8.s 			page 26


 1114 009e 8F42     		cmp	r7, r1
 1115 00a0 01D0     		beq	.L117
 1116 00a2 4FF0000E 		mov	lr, #0
 1117              	.LVL123:
 1118              	.L117:
 344:Src/freertos.c ****             if ((rquatre^run) != rtrentedeux) ok = 0;
 1119              		.loc 1 344 0
 1120 00a6 7240     		eors	r2, r2, r6
 1121              	.LVL124:
 1122 00a8 9A42     		cmp	r2, r3
 1123 00aa 01D0     		beq	.L118
 1124 00ac 4FF0000E 		mov	lr, #0
 1125              	.LVL125:
 1126              	.L118:
 335:Src/freertos.c ****             run = (rec[i] & 0x01);
 1127              		.loc 1 335 0 discriminator 2
 1128 00b0 0134     		adds	r4, r4, #1
 1129              	.LVL126:
 1130 00b2 E4B2     		uxtb	r4, r4
 1131              	.LVL127:
 1132              	.L111:
 335:Src/freertos.c ****             run = (rec[i] & 0x01);
 1133              		.loc 1 335 0 is_stmt 0 discriminator 1
 1134 00b4 022C     		cmp	r4, #2
 1135 00b6 CFD9     		bls	.L119
 345:Src/freertos.c ****         }
 346:Src/freertos.c ****         r =  (r & 0x07)*32;
 1136              		.loc 1 346 0 is_stmt 1
 1137 00b8 0CF0070C 		and	ip, ip, #7
 1138 00bc 4FEA4C1C 		lsl	ip, ip, #5
 1139 00c0 8DF807C0 		strb	ip, [sp, #7]
 347:Src/freertos.c ****         m =  (m & 0x07)*4;
 1140              		.loc 1 347 0
 1141 00c4 05F00703 		and	r3, r5, #7
 1142 00c8 9D00     		lsls	r5, r3, #2
 1143 00ca 8DF80650 		strb	r5, [sp, #6]
 348:Src/freertos.c ****         n =  (n & 0x07);
 1144              		.loc 1 348 0
 1145 00ce 08F00708 		and	r8, r8, #7
 1146 00d2 8DF80580 		strb	r8, [sp, #5]
 349:Src/freertos.c ****         v =  r + m + n;
 1147              		.loc 1 349 0
 1148 00d6 6544     		add	r5, r5, ip
 1149 00d8 4544     		add	r5, r5, r8
 1150 00da EDB2     		uxtb	r5, r5
 1151              	.LVL128:
 350:Src/freertos.c ****         if (ok == 1) {
 1152              		.loc 1 350 0
 1153 00dc BEF1000F 		cmp	lr, #0
 1154 00e0 0CD1     		bne	.L126
 351:Src/freertos.c ****             for (i = 0; i<5; i++)
 352:Src/freertos.c ****             {
 353:Src/freertos.c ****                 HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 354:Src/freertos.c ****                 osDelay(500);
 355:Src/freertos.c ****             }
 356:Src/freertos.c ****             return(v);
 357:Src/freertos.c ****         }
ARM GAS  /tmp/ccEdngC8.s 			page 27


 358:Src/freertos.c ****         else return(0);
 1155              		.loc 1 358 0
 1156 00e2 0020     		movs	r0, #0
 1157 00e4 0EE0     		b	.L121
 1158              	.LVL129:
 1159              	.L122:
 353:Src/freertos.c ****                 osDelay(500);
 1160              		.loc 1 353 0 discriminator 3
 1161 00e6 0A48     		ldr	r0, .L128+4
 1162 00e8 4021     		movs	r1, #64
 1163 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1164              	.LVL130:
 354:Src/freertos.c ****             }
 1165              		.loc 1 354 0 discriminator 3
 1166 00ee 4FF4FA70 		mov	r0, #500
 1167 00f2 FFF7FEFF 		bl	osDelay
 1168              	.LVL131:
 351:Src/freertos.c ****             for (i = 0; i<5; i++)
 1169              		.loc 1 351 0 discriminator 3
 1170 00f6 0134     		adds	r4, r4, #1
 1171              	.LVL132:
 1172 00f8 E4B2     		uxtb	r4, r4
 1173              	.LVL133:
 1174 00fa 00E0     		b	.L120
 1175              	.LVL134:
 1176              	.L126:
 1177 00fc 0024     		movs	r4, #0
 1178              	.LVL135:
 1179              	.L120:
 351:Src/freertos.c ****             for (i = 0; i<5; i++)
 1180              		.loc 1 351 0 is_stmt 0 discriminator 1
 1181 00fe 042C     		cmp	r4, #4
 1182 0100 F1D9     		bls	.L122
 356:Src/freertos.c ****         }
 1183              		.loc 1 356 0 is_stmt 1
 1184 0102 2846     		mov	r0, r5
 1185              	.L121:
 359:Src/freertos.c ****     }
 1186              		.loc 1 359 0
 1187 0104 03B0     		add	sp, sp, #12
 1188              	.LCFI19:
 1189              		.cfi_def_cfa_offset 28
 1190              		@ sp needed
 1191 0106 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1192              	.LVL136:
 1193              	.L129:
 1194 010a 00BF     		.align	2
 1195              	.L128:
 1196 010c 00000000 		.word	huart1
 1197 0110 00040048 		.word	1207960576
 1198              		.cfi_endproc
 1199              	.LFE145:
 1201              		.section	.text.recoitpos,"ax",%progbits
 1202              		.align	2
 1203              		.global	recoitpos
 1204              		.thumb
 1205              		.thumb_func
ARM GAS  /tmp/ccEdngC8.s 			page 28


 1207              	recoitpos:
 1208              	.LFB146:
 360:Src/freertos.c **** 
 361:Src/freertos.c ****     void recoitpos(){
 1209              		.loc 1 361 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213 0000 38B5     		push	{r3, r4, r5, lr}
 1214              	.LCFI20:
 1215              		.cfi_def_cfa_offset 16
 1216              		.cfi_offset 3, -16
 1217              		.cfi_offset 4, -12
 1218              		.cfi_offset 5, -8
 1219              		.cfi_offset 14, -4
 362:Src/freertos.c ****         uint8_t a, x, y, c;
 363:Src/freertos.c ****         a = ReceptionMessage();
 1220              		.loc 1 363 0
 1221 0002 FFF7FEFF 		bl	ReceptionMessage
 1222              	.LVL137:
 1223 0006 C0B2     		uxtb	r0, r0
 1224              	.LVL138:
 364:Src/freertos.c ****         x = a & 0xF0;
 1225              		.loc 1 364 0
 1226 0008 00F0F005 		and	r5, r0, #240
 1227              	.LVL139:
 365:Src/freertos.c ****         y = a & 0x0F;
 1228              		.loc 1 365 0
 1229 000c 00F00F04 		and	r4, r0, #15
 1230              	.LVL140:
 366:Src/freertos.c ****         c = ReceptionMessage();
 1231              		.loc 1 366 0
 1232 0010 FFF7FEFF 		bl	ReceptionMessage
 1233              	.LVL141:
 367:Src/freertos.c ****         robot2.posx = x;
 1234              		.loc 1 367 0
 1235 0014 024B     		ldr	r3, .L132
 1236 0016 1D60     		str	r5, [r3]
 368:Src/freertos.c ****         robot2.posy = y;
 1237              		.loc 1 368 0
 1238 0018 5C60     		str	r4, [r3, #4]
 369:Src/freertos.c ****         robot2.orientation = c;
 1239              		.loc 1 369 0
 1240 001a C0B2     		uxtb	r0, r0
 1241 001c 9860     		str	r0, [r3, #8]
 1242 001e 38BD     		pop	{r3, r4, r5, pc}
 1243              	.LVL142:
 1244              	.L133:
 1245              		.align	2
 1246              	.L132:
 1247 0020 00000000 		.word	robot2
 1248              		.cfi_endproc
 1249              	.LFE146:
 1251              		.section	.text.envoipos,"ax",%progbits
 1252              		.align	2
 1253              		.global	envoipos
 1254              		.thumb
ARM GAS  /tmp/ccEdngC8.s 			page 29


 1255              		.thumb_func
 1257              	envoipos:
 1258              	.LFB147:
 370:Src/freertos.c ****     }
 371:Src/freertos.c **** 
 372:Src/freertos.c ****     void envoipos(uint8_t x, uint8_t y , uint8_t c){
 1259              		.loc 1 372 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              	.LVL143:
 1264 0000 10B5     		push	{r4, lr}
 1265              	.LCFI21:
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 4, -8
 1268              		.cfi_offset 14, -4
 1269 0002 1446     		mov	r4, r2
 373:Src/freertos.c ****          x = x*16 + y;
 1270              		.loc 1 373 0
 1271 0004 01EB0010 		add	r0, r1, r0, lsl #4
 1272              	.LVL144:
 374:Src/freertos.c ****          EnvoiMessage(x);
 1273              		.loc 1 374 0
 1274 0008 C0B2     		uxtb	r0, r0
 1275 000a FFF7FEFF 		bl	EnvoiMessage
 1276              	.LVL145:
 375:Src/freertos.c ****          EnvoiMessage(c);
 1277              		.loc 1 375 0
 1278 000e 2046     		mov	r0, r4
 1279 0010 FFF7FEFF 		bl	EnvoiMessage
 1280              	.LVL146:
 1281 0014 10BD     		pop	{r4, pc}
 1282              		.cfi_endproc
 1283              	.LFE147:
 1285 0016 00BF     		.section	.text.Traduction,"ax",%progbits
 1286              		.align	2
 1287              		.global	Traduction
 1288              		.thumb
 1289              		.thumb_func
 1291              	Traduction:
 1292              	.LFB148:
 376:Src/freertos.c ****     }
 377:Src/freertos.c **** 
 378:Src/freertos.c ****     void Traduction(uint8_t msg){
 1293              		.loc 1 378 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              	.LVL147:
 1298 0000 10B5     		push	{r4, lr}
 1299              	.LCFI22:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 4, -8
 1302              		.cfi_offset 14, -4
 1303 0002 0446     		mov	r4, r0
 379:Src/freertos.c ****         if (msg == 0x05) {
 1304              		.loc 1 379 0
ARM GAS  /tmp/ccEdngC8.s 			page 30


 1305 0004 0528     		cmp	r0, #5
 1306 0006 05D1     		bne	.L137
 380:Src/freertos.c ****            envoipos(robot1.posx, robot1.posy, robot1.orientation);
 1307              		.loc 1 380 0
 1308 0008 174B     		ldr	r3, .L144
 1309 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1310              	.LVL148:
 1311 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1312 000e 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1313 0010 FFF7FEFF 		bl	envoipos
 1314              	.LVL149:
 1315              	.L137:
 381:Src/freertos.c ****         }
 382:Src/freertos.c **** 
 383:Src/freertos.c ****         if (msg == 0x06) {
 384:Src/freertos.c **** 
 385:Src/freertos.c ****         }
 386:Src/freertos.c **** 
 387:Src/freertos.c ****         if (msg == 0x07) {
 1316              		.loc 1 387 0
 1317 0014 072C     		cmp	r4, #7
 1318 0016 02D1     		bne	.L138
 388:Src/freertos.c ****             flag_haut = 1;
 1319              		.loc 1 388 0
 1320 0018 0122     		movs	r2, #1
 1321 001a 144B     		ldr	r3, .L144+4
 1322 001c 1A60     		str	r2, [r3]
 1323              	.L138:
 389:Src/freertos.c ****         }
 390:Src/freertos.c **** 
 391:Src/freertos.c ****         if (msg == 0x08) {
 1324              		.loc 1 391 0
 1325 001e 082C     		cmp	r4, #8
 1326 0020 02D1     		bne	.L139
 392:Src/freertos.c ****             flag_bas = 1;
 1327              		.loc 1 392 0
 1328 0022 0122     		movs	r2, #1
 1329 0024 124B     		ldr	r3, .L144+8
 1330 0026 1A60     		str	r2, [r3]
 1331              	.L139:
 393:Src/freertos.c ****         }
 394:Src/freertos.c **** 
 395:Src/freertos.c ****         if (msg == 0x09) {
 1332              		.loc 1 395 0
 1333 0028 092C     		cmp	r4, #9
 1334 002a 02D1     		bne	.L140
 396:Src/freertos.c ****             flag_droite = 1;
 1335              		.loc 1 396 0
 1336 002c 0122     		movs	r2, #1
 1337 002e 114B     		ldr	r3, .L144+12
 1338 0030 1A60     		str	r2, [r3]
 1339              	.L140:
 397:Src/freertos.c ****         }
 398:Src/freertos.c **** 
 399:Src/freertos.c ****         if (msg == 0x0A) {
 1340              		.loc 1 399 0
 1341 0032 0A2C     		cmp	r4, #10
ARM GAS  /tmp/ccEdngC8.s 			page 31


 1342 0034 02D1     		bne	.L141
 400:Src/freertos.c ****             flag_gauche = 1;
 1343              		.loc 1 400 0
 1344 0036 0122     		movs	r2, #1
 1345 0038 0F4B     		ldr	r3, .L144+16
 1346 003a 1A60     		str	r2, [r3]
 1347              	.L141:
 401:Src/freertos.c ****         }
 402:Src/freertos.c **** 
 403:Src/freertos.c ****         if (msg == 0x0B) {
 404:Src/freertos.c ****         }
 405:Src/freertos.c **** 
 406:Src/freertos.c ****         if (msg == 0x0C) {
 407:Src/freertos.c ****         }
 408:Src/freertos.c **** 
 409:Src/freertos.c ****         if (msg == 0x0D) {
 1348              		.loc 1 409 0
 1349 003c 0D2C     		cmp	r4, #13
 1350 003e 12D1     		bne	.L136
 1351              	.LBB2:
 410:Src/freertos.c ****             uint8_t a;
 411:Src/freertos.c ****             srand(time(NULL));
 1352              		.loc 1 411 0
 1353 0040 0020     		movs	r0, #0
 1354 0042 FFF7FEFF 		bl	time
 1355              	.LVL150:
 1356 0046 FFF7FEFF 		bl	srand
 1357              	.LVL151:
 412:Src/freertos.c ****             a = rand()%100;
 1358              		.loc 1 412 0
 1359 004a FFF7FEFF 		bl	rand
 1360              	.LVL152:
 1361 004e 0B4B     		ldr	r3, .L144+20
 1362 0050 83FB0032 		smull	r3, r2, r3, r0
 1363 0054 C317     		asrs	r3, r0, #31
 1364 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1365 005a 6422     		movs	r2, #100
 1366 005c 02FB1303 		mls	r3, r2, r3, r0
 1367              	.LVL153:
 413:Src/freertos.c ****             EnvoiMessage(a);
 1368              		.loc 1 413 0
 1369 0060 D8B2     		uxtb	r0, r3
 1370 0062 FFF7FEFF 		bl	EnvoiMessage
 1371              	.LVL154:
 1372              	.L136:
 1373 0066 10BD     		pop	{r4, pc}
 1374              	.L145:
 1375              		.align	2
 1376              	.L144:
 1377 0068 00000000 		.word	robot1
 1378 006c 00000000 		.word	.LANCHOR5
 1379 0070 00000000 		.word	.LANCHOR6
 1380 0074 00000000 		.word	.LANCHOR7
 1381 0078 00000000 		.word	.LANCHOR8
 1382 007c 1F85EB51 		.word	1374389535
 1383              	.LBE2:
 1384              		.cfi_endproc
ARM GAS  /tmp/ccEdngC8.s 			page 32


 1385              	.LFE148:
 1387              		.section	.text.WaitFor,"ax",%progbits
 1388              		.align	2
 1389              		.global	WaitFor
 1390              		.thumb
 1391              		.thumb_func
 1393              	WaitFor:
 1394              	.LFB149:
 414:Src/freertos.c ****         }
 415:Src/freertos.c **** 
 416:Src/freertos.c ****         if (msg == 0x10) {
 417:Src/freertos.c ****         }
 418:Src/freertos.c **** 
 419:Src/freertos.c ****         if (msg == 0x11) {
 420:Src/freertos.c ****         }
 421:Src/freertos.c **** 
 422:Src/freertos.c ****         if (msg == 0x12) {
 423:Src/freertos.c ****         }
 424:Src/freertos.c **** 
 425:Src/freertos.c ****         if (msg == 0x13) {
 426:Src/freertos.c ****         }
 427:Src/freertos.c ****     }
 428:Src/freertos.c **** 
 429:Src/freertos.c ****     void WaitFor(uint8_t z) {
 1395              		.loc 1 429 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL155:
 1400 0000 10B5     		push	{r4, lr}
 1401              	.LCFI23:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 4, -8
 1404              		.cfi_offset 14, -4
 1405 0002 0446     		mov	r4, r0
 1406              	.LVL156:
 1407              	.L147:
 430:Src/freertos.c ****         while (z != ReceptionMessage()) ;
 1408              		.loc 1 430 0 discriminator 1
 1409 0004 FFF7FEFF 		bl	ReceptionMessage
 1410              	.LVL157:
 1411 0008 8442     		cmp	r4, r0
 1412 000a FBD1     		bne	.L147
 431:Src/freertos.c ****     }
 1413              		.loc 1 431 0
 1414 000c 10BD     		pop	{r4, pc}
 1415              		.cfi_endproc
 1416              	.LFE149:
 1418 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1419              		.align	2
 1420              		.global	TaPosition
 1421              		.thumb
 1422              		.thumb_func
 1424              	TaPosition:
 1425              	.LFB150:
 432:Src/freertos.c **** 
 433:Src/freertos.c ****     void TaPosition() {
ARM GAS  /tmp/ccEdngC8.s 			page 33


 1426              		.loc 1 433 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430 0000 08B5     		push	{r3, lr}
 1431              	.LCFI24:
 1432              		.cfi_def_cfa_offset 8
 1433              		.cfi_offset 3, -8
 1434              		.cfi_offset 14, -4
 434:Src/freertos.c ****         EnvoiMessage(0x05);
 1435              		.loc 1 434 0
 1436 0002 0520     		movs	r0, #5
 1437 0004 FFF7FEFF 		bl	EnvoiMessage
 1438              	.LVL158:
 1439 0008 08BD     		pop	{r3, pc}
 1440              		.cfi_endproc
 1441              	.LFE150:
 1443 000a 00BF     		.section	.text.ok,"ax",%progbits
 1444              		.align	2
 1445              		.global	ok
 1446              		.thumb
 1447              		.thumb_func
 1449              	ok:
 1450              	.LFB151:
 435:Src/freertos.c ****     }
 436:Src/freertos.c **** 
 437:Src/freertos.c ****     void ok() {
 1451              		.loc 1 437 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455 0000 08B5     		push	{r3, lr}
 1456              	.LCFI25:
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
 438:Src/freertos.c ****         EnvoiMessage(0x06);
 1460              		.loc 1 438 0
 1461 0002 0620     		movs	r0, #6
 1462 0004 FFF7FEFF 		bl	EnvoiMessage
 1463              	.LVL159:
 1464 0008 08BD     		pop	{r3, pc}
 1465              		.cfi_endproc
 1466              	.LFE151:
 1468 000a 00BF     		.section	.text.Monte,"ax",%progbits
 1469              		.align	2
 1470              		.global	Monte
 1471              		.thumb
 1472              		.thumb_func
 1474              	Monte:
 1475              	.LFB152:
 439:Src/freertos.c ****     }
 440:Src/freertos.c **** 
 441:Src/freertos.c ****     void Monte() {
 1476              		.loc 1 441 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEdngC8.s 			page 34


 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480 0000 08B5     		push	{r3, lr}
 1481              	.LCFI26:
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 3, -8
 1484              		.cfi_offset 14, -4
 442:Src/freertos.c ****         EnvoiMessage(0x07);
 1485              		.loc 1 442 0
 1486 0002 0720     		movs	r0, #7
 1487 0004 FFF7FEFF 		bl	EnvoiMessage
 1488              	.LVL160:
 443:Src/freertos.c ****         WaitFor(0x06);
 1489              		.loc 1 443 0
 1490 0008 0620     		movs	r0, #6
 1491 000a FFF7FEFF 		bl	WaitFor
 1492              	.LVL161:
 1493 000e 08BD     		pop	{r3, pc}
 1494              		.cfi_endproc
 1495              	.LFE152:
 1497              		.section	.text.Descend,"ax",%progbits
 1498              		.align	2
 1499              		.global	Descend
 1500              		.thumb
 1501              		.thumb_func
 1503              	Descend:
 1504              	.LFB153:
 444:Src/freertos.c ****     }
 445:Src/freertos.c **** 
 446:Src/freertos.c ****     void Descend() {
 1505              		.loc 1 446 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509 0000 08B5     		push	{r3, lr}
 1510              	.LCFI27:
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 3, -8
 1513              		.cfi_offset 14, -4
 447:Src/freertos.c ****         EnvoiMessage(0x08);
 1514              		.loc 1 447 0
 1515 0002 0820     		movs	r0, #8
 1516 0004 FFF7FEFF 		bl	EnvoiMessage
 1517              	.LVL162:
 448:Src/freertos.c ****         WaitFor(0x06);
 1518              		.loc 1 448 0
 1519 0008 0620     		movs	r0, #6
 1520 000a FFF7FEFF 		bl	WaitFor
 1521              	.LVL163:
 1522 000e 08BD     		pop	{r3, pc}
 1523              		.cfi_endproc
 1524              	.LFE153:
 1526              		.section	.text.Droite,"ax",%progbits
 1527              		.align	2
 1528              		.global	Droite
 1529              		.thumb
 1530              		.thumb_func
 1532              	Droite:
ARM GAS  /tmp/ccEdngC8.s 			page 35


 1533              	.LFB154:
 449:Src/freertos.c ****     }
 450:Src/freertos.c **** 
 451:Src/freertos.c ****     void Droite() {
 1534              		.loc 1 451 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 1538 0000 08B5     		push	{r3, lr}
 1539              	.LCFI28:
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 3, -8
 1542              		.cfi_offset 14, -4
 452:Src/freertos.c ****         EnvoiMessage(0x09);
 1543              		.loc 1 452 0
 1544 0002 0920     		movs	r0, #9
 1545 0004 FFF7FEFF 		bl	EnvoiMessage
 1546              	.LVL164:
 453:Src/freertos.c ****         WaitFor(0x06);
 1547              		.loc 1 453 0
 1548 0008 0620     		movs	r0, #6
 1549 000a FFF7FEFF 		bl	WaitFor
 1550              	.LVL165:
 1551 000e 08BD     		pop	{r3, pc}
 1552              		.cfi_endproc
 1553              	.LFE154:
 1555              		.section	.text.Gauche,"ax",%progbits
 1556              		.align	2
 1557              		.global	Gauche
 1558              		.thumb
 1559              		.thumb_func
 1561              	Gauche:
 1562              	.LFB155:
 454:Src/freertos.c ****     }
 455:Src/freertos.c **** 
 456:Src/freertos.c ****     void Gauche() {
 1563              		.loc 1 456 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567 0000 08B5     		push	{r3, lr}
 1568              	.LCFI29:
 1569              		.cfi_def_cfa_offset 8
 1570              		.cfi_offset 3, -8
 1571              		.cfi_offset 14, -4
 457:Src/freertos.c ****         EnvoiMessage(0x0A);
 1572              		.loc 1 457 0
 1573 0002 0A20     		movs	r0, #10
 1574 0004 FFF7FEFF 		bl	EnvoiMessage
 1575              	.LVL166:
 458:Src/freertos.c ****         WaitFor(0x06);
 1576              		.loc 1 458 0
 1577 0008 0620     		movs	r0, #6
 1578 000a FFF7FEFF 		bl	WaitFor
 1579              	.LVL167:
 1580 000e 08BD     		pop	{r3, pc}
 1581              		.cfi_endproc
ARM GAS  /tmp/ccEdngC8.s 			page 36


 1582              	.LFE155:
 1584              		.section	.text.DansUnCoin,"ax",%progbits
 1585              		.align	2
 1586              		.global	DansUnCoin
 1587              		.thumb
 1588              		.thumb_func
 1590              	DansUnCoin:
 1591              	.LFB156:
 459:Src/freertos.c ****     }
 460:Src/freertos.c **** 
 461:Src/freertos.c ****     void DansUnCoin() {
 1592              		.loc 1 461 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596 0000 08B5     		push	{r3, lr}
 1597              	.LCFI30:
 1598              		.cfi_def_cfa_offset 8
 1599              		.cfi_offset 3, -8
 1600              		.cfi_offset 14, -4
 462:Src/freertos.c ****         EnvoiMessage(0x0B);
 1601              		.loc 1 462 0
 1602 0002 0B20     		movs	r0, #11
 1603 0004 FFF7FEFF 		bl	EnvoiMessage
 1604              	.LVL168:
 1605 0008 08BD     		pop	{r3, pc}
 1606              		.cfi_endproc
 1607              	.LFE156:
 1609 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1610              		.align	2
 1611              		.global	Trouve
 1612              		.thumb
 1613              		.thumb_func
 1615              	Trouve:
 1616              	.LFB157:
 463:Src/freertos.c ****     }
 464:Src/freertos.c **** 
 465:Src/freertos.c ****     void Trouve() {
 1617              		.loc 1 465 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621 0000 08B5     		push	{r3, lr}
 1622              	.LCFI31:
 1623              		.cfi_def_cfa_offset 8
 1624              		.cfi_offset 3, -8
 1625              		.cfi_offset 14, -4
 466:Src/freertos.c ****         EnvoiMessage(0x0C);
 1626              		.loc 1 466 0
 1627 0002 0C20     		movs	r0, #12
 1628 0004 FFF7FEFF 		bl	EnvoiMessage
 1629              	.LVL169:
 1630 0008 08BD     		pop	{r3, pc}
 1631              		.cfi_endproc
 1632              	.LFE157:
 1634 000a 00BF     		.section	.text.Random,"ax",%progbits
 1635              		.align	2
ARM GAS  /tmp/ccEdngC8.s 			page 37


 1636              		.global	Random
 1637              		.thumb
 1638              		.thumb_func
 1640              	Random:
 1641              	.LFB158:
 467:Src/freertos.c ****     }
 468:Src/freertos.c **** 
 469:Src/freertos.c ****     int Random() {
 1642              		.loc 1 469 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646 0000 10B5     		push	{r4, lr}
 1647              	.LCFI32:
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 470:Src/freertos.c ****         int a, p;
 471:Src/freertos.c ****         EnvoiMessage(0x0D);
 1651              		.loc 1 471 0
 1652 0002 0D20     		movs	r0, #13
 1653 0004 FFF7FEFF 		bl	EnvoiMessage
 1654              	.LVL170:
 472:Src/freertos.c ****         srand(time(NULL));
 1655              		.loc 1 472 0
 1656 0008 0020     		movs	r0, #0
 1657 000a FFF7FEFF 		bl	time
 1658              	.LVL171:
 1659 000e FFF7FEFF 		bl	srand
 1660              	.LVL172:
 473:Src/freertos.c ****         a = rand()%256;
 1661              		.loc 1 473 0
 1662 0012 FFF7FEFF 		bl	rand
 1663              	.LVL173:
 1664 0016 0B4C     		ldr	r4, .L170
 1665 0018 0440     		ands	r4, r4, r0
 1666 001a 002C     		cmp	r4, #0
 1667 001c 03DA     		bge	.L166
 1668 001e 013C     		subs	r4, r4, #1
 1669 0020 64F0FF04 		orn	r4, r4, #255
 1670 0024 0134     		adds	r4, r4, #1
 1671              	.L166:
 1672              	.LVL174:
 474:Src/freertos.c ****         if (ReceptionMessage() < a) {
 1673              		.loc 1 474 0
 1674 0026 FFF7FEFF 		bl	ReceptionMessage
 1675              	.LVL175:
 1676 002a A042     		cmp	r0, r4
 1677 002c 04DA     		bge	.L167
 1678              	.LVL176:
 475:Src/freertos.c ****             p = 1;
 476:Src/freertos.c ****             EnvoiMessage(0x50);
 1679              		.loc 1 476 0
 1680 002e 5020     		movs	r0, #80
 1681 0030 FFF7FEFF 		bl	EnvoiMessage
 1682              	.LVL177:
 475:Src/freertos.c ****             p = 1;
ARM GAS  /tmp/ccEdngC8.s 			page 38


 1683              		.loc 1 475 0
 1684 0034 0120     		movs	r0, #1
 1685 0036 10BD     		pop	{r4, pc}
 1686              	.LVL178:
 1687              	.L167:
 477:Src/freertos.c ****         }
 478:Src/freertos.c ****         else {
 479:Src/freertos.c ****             p = 0;
 480:Src/freertos.c ****             EnvoiMessage(0x67);
 1688              		.loc 1 480 0
 1689 0038 6720     		movs	r0, #103
 1690 003a FFF7FEFF 		bl	EnvoiMessage
 1691              	.LVL179:
 479:Src/freertos.c ****             EnvoiMessage(0x67);
 1692              		.loc 1 479 0
 1693 003e 0020     		movs	r0, #0
 1694              	.LVL180:
 481:Src/freertos.c ****         }
 482:Src/freertos.c ****         return(p);
 483:Src/freertos.c ****     }
 1695              		.loc 1 483 0
 1696 0040 10BD     		pop	{r4, pc}
 1697              	.LVL181:
 1698              	.L171:
 1699 0042 00BF     		.align	2
 1700              	.L170:
 1701 0044 FF000080 		.word	-2147483393
 1702              		.cfi_endproc
 1703              	.LFE158:
 1705              		.section	.text.Non,"ax",%progbits
 1706              		.align	2
 1707              		.global	Non
 1708              		.thumb
 1709              		.thumb_func
 1711              	Non:
 1712              	.LFB159:
 484:Src/freertos.c **** 
 485:Src/freertos.c ****     void Non(){
 1713              		.loc 1 485 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717 0000 08B5     		push	{r3, lr}
 1718              	.LCFI33:
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 3, -8
 1721              		.cfi_offset 14, -4
 486:Src/freertos.c ****         EnvoiMessage(0x10);
 1722              		.loc 1 486 0
 1723 0002 1020     		movs	r0, #16
 1724 0004 FFF7FEFF 		bl	EnvoiMessage
 1725              	.LVL182:
 1726 0008 08BD     		pop	{r3, pc}
 1727              		.cfi_endproc
 1728              	.LFE159:
 1730 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1731              		.align	2
ARM GAS  /tmp/ccEdngC8.s 			page 39


 1732              		.global	MemeCase
 1733              		.thumb
 1734              		.thumb_func
 1736              	MemeCase:
 1737              	.LFB160:
 487:Src/freertos.c ****     }
 488:Src/freertos.c **** 
 489:Src/freertos.c ****     void MemeCase() {
 1738              		.loc 1 489 0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 1742 0000 08B5     		push	{r3, lr}
 1743              	.LCFI34:
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 3, -8
 1746              		.cfi_offset 14, -4
 490:Src/freertos.c ****         EnvoiMessage(0x12);
 1747              		.loc 1 490 0
 1748 0002 1220     		movs	r0, #18
 1749 0004 FFF7FEFF 		bl	EnvoiMessage
 1750              	.LVL183:
 1751 0008 08BD     		pop	{r3, pc}
 1752              		.cfi_endproc
 1753              	.LFE160:
 1755 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1756              		.align	2
 1757              		.global	TuEsCoin
 1758              		.thumb
 1759              		.thumb_func
 1761              	TuEsCoin:
 1762              	.LFB161:
 491:Src/freertos.c ****     }
 492:Src/freertos.c **** 
 493:Src/freertos.c ****     void TuEsCoin(){
 1763              		.loc 1 493 0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
 1767 0000 08B5     		push	{r3, lr}
 1768              	.LCFI35:
 1769              		.cfi_def_cfa_offset 8
 1770              		.cfi_offset 3, -8
 1771              		.cfi_offset 14, -4
 494:Src/freertos.c ****     EnvoiMessage(0x13);
 1772              		.loc 1 494 0
 1773 0002 1320     		movs	r0, #19
 1774 0004 FFF7FEFF 		bl	EnvoiMessage
 1775              	.LVL184:
 1776 0008 08BD     		pop	{r3, pc}
 1777              		.cfi_endproc
 1778              	.LFE161:
 1780 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1781              		.align	2
 1782              		.global	deplacement
 1783              		.thumb
 1784              		.thumb_func
ARM GAS  /tmp/ccEdngC8.s 			page 40


 1786              	deplacement:
 1787              	.LFB162:
 495:Src/freertos.c **** }
 496:Src/freertos.c **** /* END Fonctions UART */
 497:Src/freertos.c **** 
 498:Src/freertos.c **** /* BEGIN Fonctions IA */
 499:Src/freertos.c **** void deplacement(int distance, int cap)
 500:Src/freertos.c **** {
 1788              		.loc 1 500 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 0
 1791              		@ frame_needed = 0, uses_anonymous_args = 0
 1792              	.LVL185:
 1793 0000 38B5     		push	{r3, r4, r5, lr}
 1794              	.LCFI36:
 1795              		.cfi_def_cfa_offset 16
 1796              		.cfi_offset 3, -16
 1797              		.cfi_offset 4, -12
 1798              		.cfi_offset 5, -8
 1799              		.cfi_offset 14, -4
 1800 0002 0546     		mov	r5, r0
 1801              	.LVL186:
 501:Src/freertos.c ****     int i=0;
 502:Src/freertos.c ****   for(i=0; i< distance +1; i++)
 1802              		.loc 1 502 0
 1803 0004 0024     		movs	r4, #0
 1804 0006 08E0     		b	.L179
 1805              	.LVL187:
 1806              	.L180:
 503:Src/freertos.c ****   {
 504:Src/freertos.c ****       flag_distance++;
 1807              		.loc 1 504 0 discriminator 3
 1808 0008 064A     		ldr	r2, .L182
 1809 000a 1368     		ldr	r3, [r2]
 1810 000c 0133     		adds	r3, r3, #1
 1811 000e 1360     		str	r3, [r2]
 505:Src/freertos.c ****       osDelay(500);
 1812              		.loc 1 505 0 discriminator 3
 1813 0010 4FF4FA70 		mov	r0, #500
 1814 0014 FFF7FEFF 		bl	osDelay
 1815              	.LVL188:
 502:Src/freertos.c ****   {
 1816              		.loc 1 502 0 discriminator 3
 1817 0018 0134     		adds	r4, r4, #1
 1818              	.LVL189:
 1819              	.L179:
 502:Src/freertos.c ****   {
 1820              		.loc 1 502 0 is_stmt 0 discriminator 1
 1821 001a 6B1C     		adds	r3, r5, #1
 1822 001c A342     		cmp	r3, r4
 1823 001e F3DC     		bgt	.L180
 506:Src/freertos.c ****   }
 507:Src/freertos.c ****   /*for(i=0; i< cap +1; i++)
 508:Src/freertos.c ****   {
 509:Src/freertos.c ****       flag_cap++;
 510:Src/freertos.c ****       osDelay(500);
 511:Src/freertos.c ****   }*/
ARM GAS  /tmp/ccEdngC8.s 			page 41


 512:Src/freertos.c **** }
 1824              		.loc 1 512 0 is_stmt 1
 1825 0020 38BD     		pop	{r3, r4, r5, pc}
 1826              	.LVL190:
 1827              	.L183:
 1828 0022 00BF     		.align	2
 1829              	.L182:
 1830 0024 00000000 		.word	.LANCHOR1
 1831              		.cfi_endproc
 1832              	.LFE162:
 1834              		.section	.text.motor,"ax",%progbits
 1835              		.align	2
 1836              		.global	motor
 1837              		.thumb
 1838              		.thumb_func
 1840              	motor:
 1841              	.LFB163:
 513:Src/freertos.c **** /* END Fonctions IA */
 514:Src/freertos.c **** 
 515:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 516:Src/freertos.c **** 
 517:Src/freertos.c **** /* Hook prototypes */
 518:Src/freertos.c **** 
 519:Src/freertos.c **** /* USER CODE BEGIN Application */
 520:Src/freertos.c **** void motor(void const * argument)
 521:Src/freertos.c **** {
 1842              		.loc 1 521 0
 1843              		.cfi_startproc
 1844              		@ Volatile: function does not return.
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              	.LVL191:
 1848 0000 08B5     		push	{r3, lr}
 1849              	.LCFI37:
 1850              		.cfi_def_cfa_offset 8
 1851              		.cfi_offset 3, -8
 1852              		.cfi_offset 14, -4
 522:Src/freertos.c ****   /* USER CODE BEGIN motor */
 523:Src/freertos.c ****   UNUSED(argument);
 524:Src/freertos.c **** 
 525:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 1853              		.loc 1 525 0
 1854 0002 4FF09040 		mov	r0, #1207959552
 1855              	.LVL192:
 1856 0006 4FF48071 		mov	r1, #256
 1857 000a 0122     		movs	r2, #1
 1858 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1859              	.LVL193:
 526:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 1860              		.loc 1 526 0
 1861 0010 074C     		ldr	r4, .L187
 1862 0012 2046     		mov	r0, r4
 1863 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1864              	.LVL194:
 527:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 1865              		.loc 1 527 0
 1866 0018 2046     		mov	r0, r4
ARM GAS  /tmp/ccEdngC8.s 			page 42


 1867 001a 0021     		movs	r1, #0
 1868 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1869              	.LVL195:
 528:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 1870              		.loc 1 528 0
 1871 0020 2046     		mov	r0, r4
 1872 0022 0C21     		movs	r1, #12
 1873 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1874              	.LVL196:
 1875              	.L185:
 529:Src/freertos.c **** 
 530:Src/freertos.c ****   /* Infinite loop */
 531:Src/freertos.c ****   for(;;)
 532:Src/freertos.c ****   {
 533:Src/freertos.c ****     gestion_moteurs();
 1876              		.loc 1 533 0 discriminator 1
 1877 0028 FFF7FEFF 		bl	gestion_moteurs
 1878              	.LVL197:
 534:Src/freertos.c ****   }
 1879              		.loc 1 534 0 discriminator 1
 1880 002c FCE7     		b	.L185
 1881              	.L188:
 1882 002e 00BF     		.align	2
 1883              	.L187:
 1884 0030 00000000 		.word	htim3
 1885              		.cfi_endproc
 1886              	.LFE163:
 1888              		.section	.text.uart,"ax",%progbits
 1889              		.align	2
 1890              		.global	uart
 1891              		.thumb
 1892              		.thumb_func
 1894              	uart:
 1895              	.LFB164:
 535:Src/freertos.c ****   /* USER CODE END motor */
 536:Src/freertos.c **** }
 537:Src/freertos.c **** 
 538:Src/freertos.c **** /*void adcControl(void const * argument)
 539:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 540:Src/freertos.c ****   /* Infinite loop */
 541:Src/freertos.c ****   /*for(;;)
 542:Src/freertos.c ****   {
 543:Src/freertos.c ****     HAL_ADC_Start_IT(&hadc1);
 544:Src/freertos.c ****     osDelay(1000);
 545:Src/freertos.c ****     if (flag_adc == 1) {
 546:Src/freertos.c ****         printf("Value : %lu\n\r", adcValue);
 547:Src/freertos.c ****         flag_adc = 0;
 548:Src/freertos.c ****     }
 549:Src/freertos.c ****   }*/
 550:Src/freertos.c ****   /* USER CODE END adcControl */
 551:Src/freertos.c **** 
 552:Src/freertos.c **** void uart(void const * argument)
 553:Src/freertos.c **** {
 1896              		.loc 1 553 0
 1897              		.cfi_startproc
 1898              		@ Volatile: function does not return.
 1899              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEdngC8.s 			page 43


 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901              		@ link register save eliminated.
 1902              	.LVL198:
 1903              	.L190:
 554:Src/freertos.c ****   /* USER CODE BEGIN uart */
 555:Src/freertos.c ****   /* Infinite loop */
 556:Src/freertos.c ****   for(;;)
 557:Src/freertos.c ****   {
 558:Src/freertos.c **** 
 559:Src/freertos.c ****     //pivoter_droite();
 560:Src/freertos.c ****     //ok();
 561:Src/freertos.c ****     //WaitFor(OK);
 562:Src/freertos.c **** 
 563:Src/freertos.c ****    /* WaitFor(OK);
 564:Src/freertos.c ****     pivoter_droite();
 565:Src/freertos.c ****     ok();
 566:Src/freertos.c **** 
 567:Src/freertos.c ****     osDelay(1);*/
 568:Src/freertos.c ****   }
 1904              		.loc 1 568 0 discriminator 1
 1905 0000 FEE7     		b	.L190
 1906              		.cfi_endproc
 1907              	.LFE164:
 1909 0002 00BF     		.section	.text.ia,"ax",%progbits
 1910              		.align	2
 1911              		.global	ia
 1912              		.thumb
 1913              		.thumb_func
 1915              	ia:
 1916              	.LFB165:
 569:Src/freertos.c ****   /* USER CODE END uart */
 570:Src/freertos.c **** }
 571:Src/freertos.c **** 
 572:Src/freertos.c **** void ia(void const * argument)
 573:Src/freertos.c **** {
 1917              		.loc 1 573 0
 1918              		.cfi_startproc
 1919              		@ Volatile: function does not return.
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              	.LVL199:
 1923 0000 08B5     		push	{r3, lr}
 1924              	.LCFI38:
 1925              		.cfi_def_cfa_offset 8
 1926              		.cfi_offset 3, -8
 1927              		.cfi_offset 14, -4
 1928              	.LVL200:
 1929              	.L192:
 574:Src/freertos.c ****   /* USER CODE BEGIN ia */
 575:Src/freertos.c ****   /* Infinite loop */
 576:Src/freertos.c ****   for(;;)
 577:Src/freertos.c ****   {
 578:Src/freertos.c ****     osDelay(1000);
 1930              		.loc 1 578 0 discriminator 1
 1931 0002 4FF47A70 		mov	r0, #1000
 1932 0006 FFF7FEFF 		bl	osDelay
 1933              	.LVL201:
ARM GAS  /tmp/ccEdngC8.s 			page 44


 579:Src/freertos.c ****     printf("Value : %d\n\r", flag_distance);
 1934              		.loc 1 579 0 discriminator 1
 1935 000a 0548     		ldr	r0, .L194
 1936 000c 054B     		ldr	r3, .L194+4
 1937 000e 1968     		ldr	r1, [r3]
 1938 0010 FFF7FEFF 		bl	printf
 1939              	.LVL202:
 580:Src/freertos.c ****     deplacement(1,0);
 1940              		.loc 1 580 0 discriminator 1
 1941 0014 0120     		movs	r0, #1
 1942 0016 0021     		movs	r1, #0
 1943 0018 FFF7FEFF 		bl	deplacement
 1944              	.LVL203:
 581:Src/freertos.c ****   }
 1945              		.loc 1 581 0 discriminator 1
 1946 001c F1E7     		b	.L192
 1947              	.L195:
 1948 001e 00BF     		.align	2
 1949              	.L194:
 1950 0020 00000000 		.word	.LC0
 1951 0024 00000000 		.word	.LANCHOR1
 1952              		.cfi_endproc
 1953              	.LFE165:
 1955              		.comm	robot2,12,4
 1956              		.comm	robot1,12,4
 1957              		.global	flag_present
 1958              		.global	flag_cap
 1959              		.global	flag_distance
 1960              		.global	flag_gauche
 1961              		.global	flag_droite
 1962              		.global	flag_bas
 1963              		.global	flag_haut
 1964              		.global	deplacement_fini
 1965              		.global	adcValue
 1966              		.global	flag_adc
 1967              		.section	.bss.flag_present,"aw",%nobits
 1968              		.align	2
 1969              		.set	.LANCHOR4,. + 0
 1972              	flag_present:
 1973 0000 00000000 		.space	4
 1974              		.section	.bss.flag_adc,"aw",%nobits
 1975              		.align	2
 1976              		.set	.LANCHOR3,. + 0
 1979              	flag_adc:
 1980 0000 00000000 		.space	4
 1981              		.section	.bss.flag_gauche,"aw",%nobits
 1982              		.align	2
 1983              		.set	.LANCHOR8,. + 0
 1986              	flag_gauche:
 1987 0000 00000000 		.space	4
 1988              		.section	.bss.flag_droite,"aw",%nobits
 1989              		.align	2
 1990              		.set	.LANCHOR7,. + 0
 1993              	flag_droite:
 1994 0000 00000000 		.space	4
 1995              		.section	.bss.flag_distance,"aw",%nobits
 1996              		.align	2
ARM GAS  /tmp/ccEdngC8.s 			page 45


 1997              		.set	.LANCHOR1,. + 0
 2000              	flag_distance:
 2001 0000 00000000 		.space	4
 2002              		.section	.bss.deplacement_fini,"aw",%nobits
 2003              		.align	2
 2004              		.set	.LANCHOR0,. + 0
 2007              	deplacement_fini:
 2008 0000 00000000 		.space	4
 2009              		.section	.bss.flag_haut,"aw",%nobits
 2010              		.align	2
 2011              		.set	.LANCHOR5,. + 0
 2014              	flag_haut:
 2015 0000 00000000 		.space	4
 2016              		.section	.rodata.str1.4,"aMS",%progbits,1
 2017              		.align	2
 2018              	.LC0:
 2019 0000 56616C75 		.ascii	"Value : %d\012\015\000"
 2019      65203A20 
 2019      25640A0D 
 2019      00
 2020              		.section	.bss.flag_cap,"aw",%nobits
 2021              		.align	2
 2024              	flag_cap:
 2025 0000 00000000 		.space	4
 2026              		.section	.bss.adcValue,"aw",%nobits
 2027              		.align	2
 2028              		.set	.LANCHOR2,. + 0
 2031              	adcValue:
 2032 0000 00000000 		.space	4
 2033              		.section	.bss.flag_bas,"aw",%nobits
 2034              		.align	2
 2035              		.set	.LANCHOR6,. + 0
 2038              	flag_bas:
 2039 0000 00000000 		.space	4
 2040              		.text
 2041              	.Letext0:
 2042              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2043              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2044              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2045              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2046              		.file 6 "/usr/include/newlib/sys/types.h"
 2047              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2048              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2049              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2050              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2051              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2052              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2053              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2054              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 2055              		.file 15 "/usr/include/newlib/time.h"
 2056              		.file 16 "/usr/include/newlib/stdlib.h"
 2057              		.file 17 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccEdngC8.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccEdngC8.s:21     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccEdngC8.s:26     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccEdngC8.s:62     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccEdngC8.s:67     .text.alumer_droite:0000000000000000 $t
     /tmp/ccEdngC8.s:72     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccEdngC8.s:104    .text.alumer_droite:0000000000000024 $d
     /tmp/ccEdngC8.s:109    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccEdngC8.s:114    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccEdngC8.s:142    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccEdngC8.s:147    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccEdngC8.s:152    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccEdngC8.s:179    .text.eteindre_droite:000000000000001c $d
     /tmp/ccEdngC8.s:184    .text.pwm_max:0000000000000000 $t
     /tmp/ccEdngC8.s:189    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccEdngC8.s:207    .text.pwm_max:0000000000000010 $d
     /tmp/ccEdngC8.s:212    .text.accelerer:0000000000000000 $t
     /tmp/ccEdngC8.s:217    .text.accelerer:0000000000000000 accelerer
     /tmp/ccEdngC8.s:258    .text.accelerer:0000000000000020 $d
     /tmp/ccEdngC8.s:263    .text.deccelerer:0000000000000000 $t
     /tmp/ccEdngC8.s:268    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccEdngC8.s:309    .text.deccelerer:0000000000000020 $d
     /tmp/ccEdngC8.s:314    .text.avancer_robot:0000000000000000 $t
     /tmp/ccEdngC8.s:319    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccEdngC8.s:374    .text.avancer_robot:0000000000000044 $d
     /tmp/ccEdngC8.s:380    .text.reculer_robot:0000000000000000 $t
     /tmp/ccEdngC8.s:385    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccEdngC8.s:436    .text.reculer_robot:000000000000003c $d
     /tmp/ccEdngC8.s:441    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccEdngC8.s:446    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccEdngC8.s:489    .text.pivoter_gauche:000000000000002c $d
     /tmp/ccEdngC8.s:494    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccEdngC8.s:499    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccEdngC8.s:542    .text.pivoter_droite:000000000000002c $d
     /tmp/ccEdngC8.s:547    .text.gestion_moteurs:0000000000000000 $t
     /tmp/ccEdngC8.s:552    .text.gestion_moteurs:0000000000000000 gestion_moteurs
     /tmp/ccEdngC8.s:585    .text.gestion_moteurs:000000000000001c $d
     /tmp/ccEdngC8.s:590    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccEdngC8.s:595    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccEdngC8.s:620    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccEdngC8.s:626    .text._write:0000000000000000 $t
     /tmp/ccEdngC8.s:631    .text._write:0000000000000000 _write
     /tmp/ccEdngC8.s:659    .text._write:0000000000000014 $d
     /tmp/ccEdngC8.s:664    .text.distance:0000000000000000 $t
     /tmp/ccEdngC8.s:669    .text.distance:0000000000000000 distance
     /tmp/ccEdngC8.s:808    .text.distance:00000000000000a8 $d
     /tmp/ccEdngC8.s:813    .text.estPresent:0000000000000000 $t
     /tmp/ccEdngC8.s:818    .text.estPresent:0000000000000000 estPresent
     /tmp/ccEdngC8.s:846    .text.estPresent:0000000000000014 $d
     /tmp/ccEdngC8.s:851    .text.EnvoiMessage:0000000000000000 $t
     /tmp/ccEdngC8.s:856    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/ccEdngC8.s:1002   .text.EnvoiMessage:00000000000000f8 $d
     /tmp/ccEdngC8.s:1007   .text.ReceptionMessage:0000000000000000 $t
     /tmp/ccEdngC8.s:1012   .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/ccEdngC8.s:1196   .text.ReceptionMessage:000000000000010c $d
     /tmp/ccEdngC8.s:1202   .text.recoitpos:0000000000000000 $t
ARM GAS  /tmp/ccEdngC8.s 			page 47


     /tmp/ccEdngC8.s:1207   .text.recoitpos:0000000000000000 recoitpos
     /tmp/ccEdngC8.s:1247   .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/ccEdngC8.s:1252   .text.envoipos:0000000000000000 $t
     /tmp/ccEdngC8.s:1257   .text.envoipos:0000000000000000 envoipos
     /tmp/ccEdngC8.s:1286   .text.Traduction:0000000000000000 $t
     /tmp/ccEdngC8.s:1291   .text.Traduction:0000000000000000 Traduction
     /tmp/ccEdngC8.s:1377   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
     /tmp/ccEdngC8.s:1388   .text.WaitFor:0000000000000000 $t
     /tmp/ccEdngC8.s:1393   .text.WaitFor:0000000000000000 WaitFor
     /tmp/ccEdngC8.s:1419   .text.TaPosition:0000000000000000 $t
     /tmp/ccEdngC8.s:1424   .text.TaPosition:0000000000000000 TaPosition
     /tmp/ccEdngC8.s:1444   .text.ok:0000000000000000 $t
     /tmp/ccEdngC8.s:1449   .text.ok:0000000000000000 ok
     /tmp/ccEdngC8.s:1469   .text.Monte:0000000000000000 $t
     /tmp/ccEdngC8.s:1474   .text.Monte:0000000000000000 Monte
     /tmp/ccEdngC8.s:1498   .text.Descend:0000000000000000 $t
     /tmp/ccEdngC8.s:1503   .text.Descend:0000000000000000 Descend
     /tmp/ccEdngC8.s:1527   .text.Droite:0000000000000000 $t
     /tmp/ccEdngC8.s:1532   .text.Droite:0000000000000000 Droite
     /tmp/ccEdngC8.s:1556   .text.Gauche:0000000000000000 $t
     /tmp/ccEdngC8.s:1561   .text.Gauche:0000000000000000 Gauche
     /tmp/ccEdngC8.s:1585   .text.DansUnCoin:0000000000000000 $t
     /tmp/ccEdngC8.s:1590   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/ccEdngC8.s:1610   .text.Trouve:0000000000000000 $t
     /tmp/ccEdngC8.s:1615   .text.Trouve:0000000000000000 Trouve
     /tmp/ccEdngC8.s:1635   .text.Random:0000000000000000 $t
     /tmp/ccEdngC8.s:1640   .text.Random:0000000000000000 Random
     /tmp/ccEdngC8.s:1701   .text.Random:0000000000000044 $d
     /tmp/ccEdngC8.s:1706   .text.Non:0000000000000000 $t
     /tmp/ccEdngC8.s:1711   .text.Non:0000000000000000 Non
     /tmp/ccEdngC8.s:1731   .text.MemeCase:0000000000000000 $t
     /tmp/ccEdngC8.s:1736   .text.MemeCase:0000000000000000 MemeCase
     /tmp/ccEdngC8.s:1756   .text.TuEsCoin:0000000000000000 $t
     /tmp/ccEdngC8.s:1761   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/ccEdngC8.s:1781   .text.deplacement:0000000000000000 $t
     /tmp/ccEdngC8.s:1786   .text.deplacement:0000000000000000 deplacement
     /tmp/ccEdngC8.s:1830   .text.deplacement:0000000000000024 $d
     /tmp/ccEdngC8.s:1835   .text.motor:0000000000000000 $t
     /tmp/ccEdngC8.s:1840   .text.motor:0000000000000000 motor
     /tmp/ccEdngC8.s:1884   .text.motor:0000000000000030 $d
     /tmp/ccEdngC8.s:1889   .text.uart:0000000000000000 $t
     /tmp/ccEdngC8.s:1894   .text.uart:0000000000000000 uart
     /tmp/ccEdngC8.s:1910   .text.ia:0000000000000000 $t
     /tmp/ccEdngC8.s:1915   .text.ia:0000000000000000 ia
     /tmp/ccEdngC8.s:1950   .text.ia:0000000000000020 $d
     /tmp/ccEdngC8.s:1972   .bss.flag_present:0000000000000000 flag_present
     /tmp/ccEdngC8.s:2024   .bss.flag_cap:0000000000000000 flag_cap
     /tmp/ccEdngC8.s:2000   .bss.flag_distance:0000000000000000 flag_distance
     /tmp/ccEdngC8.s:1986   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/ccEdngC8.s:1993   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/ccEdngC8.s:2038   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/ccEdngC8.s:2014   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/ccEdngC8.s:2007   .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccEdngC8.s:2031   .bss.adcValue:0000000000000000 adcValue
     /tmp/ccEdngC8.s:1979   .bss.flag_adc:0000000000000000 flag_adc
ARM GAS  /tmp/ccEdngC8.s 			page 48


     /tmp/ccEdngC8.s:1968   .bss.flag_present:0000000000000000 $d
     /tmp/ccEdngC8.s:1975   .bss.flag_adc:0000000000000000 $d
     /tmp/ccEdngC8.s:1982   .bss.flag_gauche:0000000000000000 $d
     /tmp/ccEdngC8.s:1989   .bss.flag_droite:0000000000000000 $d
     /tmp/ccEdngC8.s:1996   .bss.flag_distance:0000000000000000 $d
     /tmp/ccEdngC8.s:2003   .bss.deplacement_fini:0000000000000000 $d
     /tmp/ccEdngC8.s:2010   .bss.flag_haut:0000000000000000 $d
     /tmp/ccEdngC8.s:2017   .rodata.str1.4:0000000000000000 $d
     /tmp/ccEdngC8.s:2021   .bss.flag_cap:0000000000000000 $d
     /tmp/ccEdngC8.s:2027   .bss.adcValue:0000000000000000 $d
     /tmp/ccEdngC8.s:2034   .bss.flag_bas:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
osDelay
decelerer
HAL_ADC_GetValue
HAL_UART_Transmit
huart2
huart1
HAL_UART_Receive
HAL_GPIO_TogglePin
time
srand
rand
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
printf
