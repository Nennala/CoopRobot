ARM GAS  /tmp/ccss0oyI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"freertos.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.alumer_gauche,"ax",%progbits
  21              		.align	2
  22              		.global	alumer_gauche
  23              		.thumb
  24              		.thumb_func
  26              	alumer_gauche:
  27              	.LFB128:
  28              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccss0oyI.s 			page 2


  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #include <time.h>
  59:Src/freertos.c **** #include <stdlib.h>
  60:Src/freertos.c **** 
  61:Src/freertos.c **** #define PWM_MAX 320
  62:Src/freertos.c **** #define DELAY 1000
  63:Src/freertos.c **** #define OK 0x06
  64:Src/freertos.c **** /* USER CODE END Includes */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* USER CODE BEGIN Variables */
  69:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  70:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  71:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  72:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** int flag_adc = 0;
  75:Src/freertos.c **** uint32_t adcValue = 0;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** int deplacement_fini = 0;
  78:Src/freertos.c **** 
  79:Src/freertos.c **** int flag_haut = 0;
  80:Src/freertos.c **** int flag_bas = 0;
  81:Src/freertos.c **** int flag_droite = 0;
  82:Src/freertos.c **** int flag_gauche = 0;
  83:Src/freertos.c **** int flag_distance = 0;
  84:Src/freertos.c **** int flag_cap =0;
  85:Src/freertos.c **** int flag_present = 0;
  86:Src/freertos.c **** 
  87:Src/freertos.c **** struct Robot {
ARM GAS  /tmp/ccss0oyI.s 			page 3


  88:Src/freertos.c ****     int posx;
  89:Src/freertos.c ****     int posy;
  90:Src/freertos.c ****     int orientation;
  91:Src/freertos.c **** };
  92:Src/freertos.c **** 
  93:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  94:Src/freertos.c **** 
  95:Src/freertos.c **** /* USER CODE END Variables */
  96:Src/freertos.c **** 
  97:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  98:Src/freertos.c **** 
  99:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 100:Src/freertos.c **** 
 101:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
 102:Src/freertos.c **** void alumer_gauche(int sens) {
  29              		.loc 1 102 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 103:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  41              		.loc 1 103 0
  42 0002 074C     		ldr	r4, .L3
  43 0004 0546     		mov	r5, r0
  44 0006 B0FA80F2 		clz	r2, r0
  45 000a 5209     		lsrs	r2, r2, #5
  46 000c 2046     		mov	r0, r4
  47              	.LVL1:
  48 000e 0221     		movs	r1, #2
  49 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL2:
 104:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  51              		.loc 1 104 0
  52 0014 2046     		mov	r0, r4
  53 0016 0121     		movs	r1, #1
  54 0018 EAB2     		uxtb	r2, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL3:
  57 001e 38BD     		pop	{r3, r4, r5, pc}
  58              	.LVL4:
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0020 00140048 		.word	1207964672
  63              		.cfi_endproc
  64              	.LFE128:
  66              		.section	.text.alumer_droite,"ax",%progbits
  67              		.align	2
  68              		.global	alumer_droite
  69              		.thumb
ARM GAS  /tmp/ccss0oyI.s 			page 4


  70              		.thumb_func
  72              	alumer_droite:
  73              	.LFB129:
 105:Src/freertos.c **** }
 106:Src/freertos.c **** 
 107:Src/freertos.c **** void alumer_droite(int sens) {
  74              		.loc 1 107 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL5:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
 108:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  84              		.loc 1 108 0
  85 0002 0446     		mov	r4, r0
  86 0004 B0FA80F2 		clz	r2, r0
  87 0008 5209     		lsrs	r2, r2, #5
  88 000a 4FF09040 		mov	r0, #1207959552
  89              	.LVL6:
  90 000e 4FF40061 		mov	r1, #2048
  91 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL7:
 109:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  93              		.loc 1 109 0
  94 0016 0348     		ldr	r0, .L7
  95 0018 2021     		movs	r1, #32
  96 001a E2B2     		uxtb	r2, r4
  97 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL8:
  99 0020 10BD     		pop	{r4, pc}
 100              	.LVL9:
 101              	.L8:
 102 0022 00BF     		.align	2
 103              	.L7:
 104 0024 00040048 		.word	1207960576
 105              		.cfi_endproc
 106              	.LFE129:
 108              		.section	.text.eteindre_gauche,"ax",%progbits
 109              		.align	2
 110              		.global	eteindre_gauche
 111              		.thumb
 112              		.thumb_func
 114              	eteindre_gauche:
 115              	.LFB130:
 110:Src/freertos.c **** }
 111:Src/freertos.c **** 
 112:Src/freertos.c **** void eteindre_gauche() {
 116              		.loc 1 112 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI2:
ARM GAS  /tmp/ccss0oyI.s 			page 5


 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 113:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 125              		.loc 1 113 0
 126 0002 064C     		ldr	r4, .L11
 127 0004 2046     		mov	r0, r4
 128 0006 0221     		movs	r1, #2
 129 0008 0022     		movs	r2, #0
 130 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL10:
 114:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 132              		.loc 1 114 0
 133 000e 2046     		mov	r0, r4
 134 0010 0121     		movs	r1, #1
 135 0012 0022     		movs	r2, #0
 136 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL11:
 138 0018 10BD     		pop	{r4, pc}
 139              	.L12:
 140 001a 00BF     		.align	2
 141              	.L11:
 142 001c 00140048 		.word	1207964672
 143              		.cfi_endproc
 144              	.LFE130:
 146              		.section	.text.eteindre_droite,"ax",%progbits
 147              		.align	2
 148              		.global	eteindre_droite
 149              		.thumb
 150              		.thumb_func
 152              	eteindre_droite:
 153              	.LFB131:
 115:Src/freertos.c **** }
 116:Src/freertos.c **** 
 117:Src/freertos.c **** void eteindre_droite() {
 154              		.loc 1 117 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
 118:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 163              		.loc 1 118 0
 164 0002 4FF09040 		mov	r0, #1207959552
 165 0006 4FF40061 		mov	r1, #2048
 166 000a 0022     		movs	r2, #0
 167 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL12:
 119:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 169              		.loc 1 119 0
 170 0010 0248     		ldr	r0, .L15
 171 0012 2021     		movs	r1, #32
 172 0014 0022     		movs	r2, #0
 173 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccss0oyI.s 			page 6


 174              	.LVL13:
 175 001a 08BD     		pop	{r3, pc}
 176              	.L16:
 177              		.align	2
 178              	.L15:
 179 001c 00040048 		.word	1207960576
 180              		.cfi_endproc
 181              	.LFE131:
 183              		.section	.text.pwm_max,"ax",%progbits
 184              		.align	2
 185              		.global	pwm_max
 186              		.thumb
 187              		.thumb_func
 189              	pwm_max:
 190              	.LFB132:
 120:Src/freertos.c **** }
 121:Src/freertos.c **** 
 122:Src/freertos.c **** void pwm_max() {
 191              		.loc 1 122 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 123:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 196              		.loc 1 123 0
 197 0000 034B     		ldr	r3, .L18
 198 0002 1B68     		ldr	r3, [r3]
 199 0004 4FF4A072 		mov	r2, #320
 200 0008 5A63     		str	r2, [r3, #52]
 124:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 201              		.loc 1 124 0
 202 000a 1A64     		str	r2, [r3, #64]
 203 000c 7047     		bx	lr
 204              	.L19:
 205 000e 00BF     		.align	2
 206              	.L18:
 207 0010 00000000 		.word	htim3
 208              		.cfi_endproc
 209              	.LFE132:
 211              		.section	.text.accelerer,"ax",%progbits
 212              		.align	2
 213              		.global	accelerer
 214              		.thumb
 215              		.thumb_func
 217              	accelerer:
 218              	.LFB133:
 125:Src/freertos.c **** }
 126:Src/freertos.c **** 
 127:Src/freertos.c **** void accelerer() {
 219              		.loc 1 127 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
ARM GAS  /tmp/ccss0oyI.s 			page 7


 227              		.cfi_offset 14, -4
 228              	.LVL14:
 128:Src/freertos.c ****     int pwm = 0;
 229              		.loc 1 128 0
 230 0002 0024     		movs	r4, #0
 129:Src/freertos.c ****     while (pwm != PWM_MAX) {
 231              		.loc 1 129 0
 232 0004 07E0     		b	.L21
 233              	.LVL15:
 234              	.L22:
 130:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 235              		.loc 1 130 0
 236 0006 064B     		ldr	r3, .L24
 237 0008 1B68     		ldr	r3, [r3]
 238 000a 5C63     		str	r4, [r3, #52]
 131:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 239              		.loc 1 131 0
 240 000c 1C64     		str	r4, [r3, #64]
 132:Src/freertos.c ****         pwm += 20;
 241              		.loc 1 132 0
 242 000e 1434     		adds	r4, r4, #20
 243              	.LVL16:
 133:Src/freertos.c ****         osDelay(50);
 244              		.loc 1 133 0
 245 0010 3220     		movs	r0, #50
 246 0012 FFF7FEFF 		bl	osDelay
 247              	.LVL17:
 248              	.L21:
 129:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 249              		.loc 1 129 0
 250 0016 B4F5A07F 		cmp	r4, #320
 251 001a F4D1     		bne	.L22
 134:Src/freertos.c ****     }
 135:Src/freertos.c **** }
 252              		.loc 1 135 0
 253 001c 10BD     		pop	{r4, pc}
 254              	.LVL18:
 255              	.L25:
 256 001e 00BF     		.align	2
 257              	.L24:
 258 0020 00000000 		.word	htim3
 259              		.cfi_endproc
 260              	.LFE133:
 262              		.section	.text.deccelerer,"ax",%progbits
 263              		.align	2
 264              		.global	deccelerer
 265              		.thumb
 266              		.thumb_func
 268              	deccelerer:
 269              	.LFB134:
 136:Src/freertos.c **** 
 137:Src/freertos.c **** void deccelerer() {
 270              		.loc 1 137 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccss0oyI.s 			page 8


 275              	.LCFI5:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279              	.LVL19:
 138:Src/freertos.c ****     int pwm = PWM_MAX;
 280              		.loc 1 138 0
 281 0002 4FF4A074 		mov	r4, #320
 139:Src/freertos.c ****     while (pwm != 0) {
 282              		.loc 1 139 0
 283 0006 07E0     		b	.L27
 284              	.LVL20:
 285              	.L28:
 140:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 286              		.loc 1 140 0
 287 0008 054B     		ldr	r3, .L30
 288 000a 1B68     		ldr	r3, [r3]
 289 000c 5C63     		str	r4, [r3, #52]
 141:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 290              		.loc 1 141 0
 291 000e 1C64     		str	r4, [r3, #64]
 142:Src/freertos.c ****         pwm -= 20;
 292              		.loc 1 142 0
 293 0010 143C     		subs	r4, r4, #20
 294              	.LVL21:
 143:Src/freertos.c ****         osDelay(50);
 295              		.loc 1 143 0
 296 0012 3220     		movs	r0, #50
 297 0014 FFF7FEFF 		bl	osDelay
 298              	.LVL22:
 299              	.L27:
 139:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 300              		.loc 1 139 0
 301 0018 002C     		cmp	r4, #0
 302 001a F5D1     		bne	.L28
 144:Src/freertos.c ****     }
 145:Src/freertos.c **** }
 303              		.loc 1 145 0
 304 001c 10BD     		pop	{r4, pc}
 305              	.LVL23:
 306              	.L31:
 307 001e 00BF     		.align	2
 308              	.L30:
 309 0020 00000000 		.word	htim3
 310              		.cfi_endproc
 311              	.LFE134:
 313              		.section	.text.avancer_robot,"ax",%progbits
 314              		.align	2
 315              		.global	avancer_robot
 316              		.thumb
 317              		.thumb_func
 319              	avancer_robot:
 320              	.LFB135:
 146:Src/freertos.c **** 
 147:Src/freertos.c **** void avancer_robot() {
 321              		.loc 1 147 0
 322              		.cfi_startproc
ARM GAS  /tmp/ccss0oyI.s 			page 9


 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI6:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 148:Src/freertos.c ****     alumer_droite(0);
 330              		.loc 1 148 0
 331 0002 0020     		movs	r0, #0
 332 0004 FFF7FEFF 		bl	alumer_droite
 333              	.LVL24:
 149:Src/freertos.c ****     alumer_gauche(0);
 334              		.loc 1 149 0
 335 0008 0020     		movs	r0, #0
 336 000a FFF7FEFF 		bl	alumer_gauche
 337              	.LVL25:
 150:Src/freertos.c ****     accelerer();
 338              		.loc 1 150 0
 339 000e FFF7FEFF 		bl	accelerer
 340              	.LVL26:
 151:Src/freertos.c ****     osDelay(470);//robot2 : 470 robot1 : 850
 341              		.loc 1 151 0
 342 0012 4FF4EB70 		mov	r0, #470
 343 0016 FFF7FEFF 		bl	osDelay
 344              	.LVL27:
 152:Src/freertos.c ****     deccelerer();
 345              		.loc 1 152 0
 346 001a FFF7FEFF 		bl	deccelerer
 347              	.LVL28:
 153:Src/freertos.c ****     eteindre_droite();
 348              		.loc 1 153 0
 349 001e FFF7FEFF 		bl	eteindre_droite
 350              	.LVL29:
 154:Src/freertos.c ****     eteindre_gauche();
 351              		.loc 1 154 0
 352 0022 FFF7FEFF 		bl	eteindre_gauche
 353              	.LVL30:
 155:Src/freertos.c ****     deplacement_fini = 1;
 354              		.loc 1 155 0
 355 0026 0122     		movs	r2, #1
 356 0028 014B     		ldr	r3, .L34
 357 002a 1A60     		str	r2, [r3]
 358 002c 08BD     		pop	{r3, pc}
 359              	.L35:
 360 002e 00BF     		.align	2
 361              	.L34:
 362 0030 00000000 		.word	.LANCHOR0
 363              		.cfi_endproc
 364              	.LFE135:
 366              		.section	.text.reculer_robot,"ax",%progbits
 367              		.align	2
 368              		.global	reculer_robot
 369              		.thumb
 370              		.thumb_func
 372              	reculer_robot:
 373              	.LFB136:
ARM GAS  /tmp/ccss0oyI.s 			page 10


 156:Src/freertos.c **** }
 157:Src/freertos.c **** 
 158:Src/freertos.c **** void reculer_robot() {
 374              		.loc 1 158 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 08B5     		push	{r3, lr}
 379              	.LCFI7:
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 3, -8
 382              		.cfi_offset 14, -4
 159:Src/freertos.c ****     alumer_droite(1);
 383              		.loc 1 159 0
 384 0002 0120     		movs	r0, #1
 385 0004 FFF7FEFF 		bl	alumer_droite
 386              	.LVL31:
 160:Src/freertos.c ****     alumer_gauche(1);
 387              		.loc 1 160 0
 388 0008 0120     		movs	r0, #1
 389 000a FFF7FEFF 		bl	alumer_gauche
 390              	.LVL32:
 161:Src/freertos.c ****     accelerer();
 391              		.loc 1 161 0
 392 000e FFF7FEFF 		bl	accelerer
 393              	.LVL33:
 162:Src/freertos.c ****     osDelay(470);//robot2 : 470 robot1 : 850
 394              		.loc 1 162 0
 395 0012 4FF4EB70 		mov	r0, #470
 396 0016 FFF7FEFF 		bl	osDelay
 397              	.LVL34:
 163:Src/freertos.c ****     deccelerer();
 398              		.loc 1 163 0
 399 001a FFF7FEFF 		bl	deccelerer
 400              	.LVL35:
 164:Src/freertos.c ****     eteindre_droite();
 401              		.loc 1 164 0
 402 001e FFF7FEFF 		bl	eteindre_droite
 403              	.LVL36:
 165:Src/freertos.c ****     eteindre_gauche();
 404              		.loc 1 165 0
 405 0022 FFF7FEFF 		bl	eteindre_gauche
 406              	.LVL37:
 407 0026 08BD     		pop	{r3, pc}
 408              		.cfi_endproc
 409              	.LFE136:
 411              		.section	.text.pivoter_gauche,"ax",%progbits
 412              		.align	2
 413              		.global	pivoter_gauche
 414              		.thumb
 415              		.thumb_func
 417              	pivoter_gauche:
 418              	.LFB137:
 166:Src/freertos.c **** }
 167:Src/freertos.c **** 
 168:Src/freertos.c **** 
 169:Src/freertos.c **** void pivoter_gauche() {
ARM GAS  /tmp/ccss0oyI.s 			page 11


 419              		.loc 1 169 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 08B5     		push	{r3, lr}
 424              	.LCFI8:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 3, -8
 427              		.cfi_offset 14, -4
 170:Src/freertos.c ****     pwm_max();
 428              		.loc 1 170 0
 429 0002 FFF7FEFF 		bl	pwm_max
 430              	.LVL38:
 171:Src/freertos.c ****     alumer_gauche(1);
 431              		.loc 1 171 0
 432 0006 0120     		movs	r0, #1
 433 0008 FFF7FEFF 		bl	alumer_gauche
 434              	.LVL39:
 172:Src/freertos.c ****     alumer_droite(0);
 435              		.loc 1 172 0
 436 000c 0020     		movs	r0, #0
 437 000e FFF7FEFF 		bl	alumer_droite
 438              	.LVL40:
 173:Src/freertos.c ****     osDelay(40);//robot 2 : 40 robot1 : 115
 439              		.loc 1 173 0
 440 0012 2820     		movs	r0, #40
 441 0014 FFF7FEFF 		bl	osDelay
 442              	.LVL41:
 174:Src/freertos.c ****     deccelerer();
 443              		.loc 1 174 0
 444 0018 FFF7FEFF 		bl	deccelerer
 445              	.LVL42:
 175:Src/freertos.c ****     eteindre_droite();
 446              		.loc 1 175 0
 447 001c FFF7FEFF 		bl	eteindre_droite
 448              	.LVL43:
 176:Src/freertos.c ****     eteindre_gauche();
 449              		.loc 1 176 0
 450 0020 FFF7FEFF 		bl	eteindre_gauche
 451              	.LVL44:
 177:Src/freertos.c ****     deplacement_fini = 1;
 452              		.loc 1 177 0
 453 0024 0122     		movs	r2, #1
 454 0026 014B     		ldr	r3, .L40
 455 0028 1A60     		str	r2, [r3]
 456 002a 08BD     		pop	{r3, pc}
 457              	.L41:
 458              		.align	2
 459              	.L40:
 460 002c 00000000 		.word	.LANCHOR0
 461              		.cfi_endproc
 462              	.LFE137:
 464              		.section	.text.pivoter_droite,"ax",%progbits
 465              		.align	2
 466              		.global	pivoter_droite
 467              		.thumb
 468              		.thumb_func
ARM GAS  /tmp/ccss0oyI.s 			page 12


 470              	pivoter_droite:
 471              	.LFB138:
 178:Src/freertos.c **** }
 179:Src/freertos.c **** 
 180:Src/freertos.c **** void pivoter_droite() {
 472              		.loc 1 180 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI9:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 181:Src/freertos.c ****     pwm_max();
 481              		.loc 1 181 0
 482 0002 FFF7FEFF 		bl	pwm_max
 483              	.LVL45:
 182:Src/freertos.c ****     alumer_droite(1);
 484              		.loc 1 182 0
 485 0006 0120     		movs	r0, #1
 486 0008 FFF7FEFF 		bl	alumer_droite
 487              	.LVL46:
 183:Src/freertos.c ****     alumer_gauche(0);
 488              		.loc 1 183 0
 489 000c 0020     		movs	r0, #0
 490 000e FFF7FEFF 		bl	alumer_gauche
 491              	.LVL47:
 184:Src/freertos.c ****     osDelay(40);
 492              		.loc 1 184 0
 493 0012 2820     		movs	r0, #40
 494 0014 FFF7FEFF 		bl	osDelay
 495              	.LVL48:
 185:Src/freertos.c ****     deccelerer();
 496              		.loc 1 185 0
 497 0018 FFF7FEFF 		bl	deccelerer
 498              	.LVL49:
 186:Src/freertos.c ****     eteindre_droite();
 499              		.loc 1 186 0
 500 001c FFF7FEFF 		bl	eteindre_droite
 501              	.LVL50:
 187:Src/freertos.c ****     eteindre_gauche();
 502              		.loc 1 187 0
 503 0020 FFF7FEFF 		bl	eteindre_gauche
 504              	.LVL51:
 188:Src/freertos.c ****     deplacement_fini = 1;
 505              		.loc 1 188 0
 506 0024 0122     		movs	r2, #1
 507 0026 014B     		ldr	r3, .L44
 508 0028 1A60     		str	r2, [r3]
 509 002a 08BD     		pop	{r3, pc}
 510              	.L45:
 511              		.align	2
 512              	.L44:
 513 002c 00000000 		.word	.LANCHOR0
 514              		.cfi_endproc
 515              	.LFE138:
ARM GAS  /tmp/ccss0oyI.s 			page 13


 517              		.section	.text.gestion_moteurs,"ax",%progbits
 518              		.align	2
 519              		.global	gestion_moteurs
 520              		.thumb
 521              		.thumb_func
 523              	gestion_moteurs:
 524              	.LFB139:
 189:Src/freertos.c **** }
 190:Src/freertos.c **** 
 191:Src/freertos.c **** void gestion_moteurs()
 192:Src/freertos.c **** {
 525              		.loc 1 192 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 08B5     		push	{r3, lr}
 530              	.LCFI10:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 3, -8
 533              		.cfi_offset 14, -4
 193:Src/freertos.c ****     if (flag_distance > 0) {
 534              		.loc 1 193 0
 535 0002 0A4B     		ldr	r3, .L50
 536 0004 1B68     		ldr	r3, [r3]
 537 0006 002B     		cmp	r3, #0
 538 0008 05DD     		ble	.L47
 194:Src/freertos.c ****       avancer_robot();
 539              		.loc 1 194 0
 540 000a FFF7FEFF 		bl	avancer_robot
 541              	.LVL52:
 195:Src/freertos.c ****       flag_distance --;
 542              		.loc 1 195 0
 543 000e 074A     		ldr	r2, .L50
 544 0010 1368     		ldr	r3, [r2]
 545 0012 013B     		subs	r3, r3, #1
 546 0014 1360     		str	r3, [r2]
 547              	.L47:
 196:Src/freertos.c ****     }
 197:Src/freertos.c **** 
 198:Src/freertos.c ****     if (flag_distance < 0) {
 548              		.loc 1 198 0
 549 0016 054B     		ldr	r3, .L50
 550 0018 1B68     		ldr	r3, [r3]
 551 001a 002B     		cmp	r3, #0
 552 001c 05DA     		bge	.L46
 199:Src/freertos.c ****       reculer_robot();
 553              		.loc 1 199 0
 554 001e FFF7FEFF 		bl	reculer_robot
 555              	.LVL53:
 200:Src/freertos.c ****       flag_distance ++;
 556              		.loc 1 200 0
 557 0022 024A     		ldr	r2, .L50
 558 0024 1368     		ldr	r3, [r2]
 559 0026 0133     		adds	r3, r3, #1
 560 0028 1360     		str	r3, [r2]
 561              	.L46:
 562 002a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccss0oyI.s 			page 14


 563              	.L51:
 564              		.align	2
 565              	.L50:
 566 002c 00000000 		.word	.LANCHOR1
 567              		.cfi_endproc
 568              	.LFE139:
 570              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 571              		.align	2
 572              		.global	HAL_ADC_ConvCpltCallback
 573              		.thumb
 574              		.thumb_func
 576              	HAL_ADC_ConvCpltCallback:
 577              	.LFB140:
 201:Src/freertos.c ****     }
 202:Src/freertos.c **** 
 203:Src/freertos.c ****     /*
 204:Src/freertos.c ****     if (flag_cap < 0) {
 205:Src/freertos.c ****       pivoter_gauche();
 206:Src/freertos.c ****       flag_cap ++;
 207:Src/freertos.c ****       while(!deplacement_fini);
 208:Src/freertos.c ****       deplacement_fini = 0;
 209:Src/freertos.c ****     }
 210:Src/freertos.c **** 
 211:Src/freertos.c ****     if (flag_cap > 0) {
 212:Src/freertos.c ****       flag_cap --;
 213:Src/freertos.c ****       while(!deplacement_fini);
 214:Src/freertos.c ****       deplacement_fini = 0;
 215:Src/freertos.c ****     }
 216:Src/freertos.c ****     */
 217:Src/freertos.c **** }
 218:Src/freertos.c **** 
 219:Src/freertos.c **** /* END Fonctions pour les moteurs */
 220:Src/freertos.c **** 
 221:Src/freertos.c **** /* BEGIN Fonctions ADC */
 222:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 578              		.loc 1 222 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL54:
 583 0000 08B5     		push	{r3, lr}
 584              	.LCFI11:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 3, -8
 587              		.cfi_offset 14, -4
 223:Src/freertos.c ****     UNUSED(hadc);
 224:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 588              		.loc 1 224 0
 589 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 590              	.LVL55:
 591 0006 034B     		ldr	r3, .L54
 592 0008 1860     		str	r0, [r3]
 225:Src/freertos.c ****     flag_adc = 1;
 593              		.loc 1 225 0
 594 000a 0122     		movs	r2, #1
 595 000c 024B     		ldr	r3, .L54+4
 596 000e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccss0oyI.s 			page 15


 597 0010 08BD     		pop	{r3, pc}
 598              	.L55:
 599 0012 00BF     		.align	2
 600              	.L54:
 601 0014 00000000 		.word	.LANCHOR2
 602 0018 00000000 		.word	.LANCHOR3
 603              		.cfi_endproc
 604              	.LFE140:
 606              		.section	.text._write,"ax",%progbits
 607              		.align	2
 608              		.global	_write
 609              		.thumb
 610              		.thumb_func
 612              	_write:
 613              	.LFB141:
 226:Src/freertos.c **** }
 227:Src/freertos.c **** 
 228:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 614              		.loc 1 228 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL56:
 619 0000 10B5     		push	{r4, lr}
 620              	.LCFI12:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 624 0002 1446     		mov	r4, r2
 229:Src/freertos.c ****     UNUSED(file);
 230:Src/freertos.c **** 
 231:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 625              		.loc 1 231 0
 626 0004 0348     		ldr	r0, .L58
 627              	.LVL57:
 628 0006 92B2     		uxth	r2, r2
 629              	.LVL58:
 630 0008 42F21073 		movw	r3, #10000
 631 000c FFF7FEFF 		bl	HAL_UART_Transmit
 632              	.LVL59:
 232:Src/freertos.c ****     return len;
 233:Src/freertos.c **** }
 633              		.loc 1 233 0
 634 0010 2046     		mov	r0, r4
 635 0012 10BD     		pop	{r4, pc}
 636              	.LVL60:
 637              	.L59:
 638              		.align	2
 639              	.L58:
 640 0014 00000000 		.word	huart2
 641              		.cfi_endproc
 642              	.LFE141:
 644              		.section	.text.distance,"ax",%progbits
 645              		.align	2
 646              		.global	distance
 647              		.thumb
 648              		.thumb_func
ARM GAS  /tmp/ccss0oyI.s 			page 16


 650              	distance:
 651              	.LFB142:
 234:Src/freertos.c **** 
 235:Src/freertos.c **** int distance() {
 652              		.loc 1 235 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL61:
 236:Src/freertos.c ****     int value = 0;
 237:Src/freertos.c ****     if (adcValue >= 3800) {
 658              		.loc 1 237 0
 659 0000 294B     		ldr	r3, .L91
 660 0002 1B68     		ldr	r3, [r3]
 661 0004 40F6D762 		movw	r2, #3799
 662 0008 9342     		cmp	r3, r2
 663 000a 01D8     		bhi	.L76
 236:Src/freertos.c ****     int value = 0;
 664              		.loc 1 236 0
 665 000c 0020     		movs	r0, #0
 666 000e 00E0     		b	.L61
 667              	.L76:
 238:Src/freertos.c ****         value = 6;
 668              		.loc 1 238 0
 669 0010 0620     		movs	r0, #6
 670              	.L61:
 671              	.LVL62:
 239:Src/freertos.c ****     }
 240:Src/freertos.c ****     if (adcValue >= 3750 && adcValue < 3800) {
 672              		.loc 1 240 0
 673 0012 A3F6A662 		subw	r2, r3, #3750
 674 0016 312A     		cmp	r2, #49
 675 0018 00D8     		bhi	.L62
 241:Src/freertos.c ****         value = 7;
 676              		.loc 1 241 0
 677 001a 0720     		movs	r0, #7
 678              	.LVL63:
 679              	.L62:
 242:Src/freertos.c ****     }
 243:Src/freertos.c ****     if (adcValue >= 3430 && adcValue < 3750) {
 680              		.loc 1 243 0
 681 001c A3F66652 		subw	r2, r3, #3430
 682 0020 B2F5A07F 		cmp	r2, #320
 683 0024 00D2     		bcs	.L63
 244:Src/freertos.c ****         value = 8;
 684              		.loc 1 244 0
 685 0026 0820     		movs	r0, #8
 686              	.LVL64:
 687              	.L63:
 245:Src/freertos.c ****     }
 246:Src/freertos.c ****     if (adcValue >= 3140 && adcValue < 3420) {
 688              		.loc 1 246 0
 689 0028 A3F64442 		subw	r2, r3, #3140
 690 002c B2F58C7F 		cmp	r2, #280
 691 0030 00D2     		bcs	.L64
 247:Src/freertos.c ****         value = 9;
ARM GAS  /tmp/ccss0oyI.s 			page 17


 692              		.loc 1 247 0
 693 0032 0920     		movs	r0, #9
 694              	.LVL65:
 695              	.L64:
 248:Src/freertos.c ****     }
 249:Src/freertos.c ****     if (adcValue >= 2880 && adcValue < 3140) {
 696              		.loc 1 249 0
 697 0034 A3F53462 		sub	r2, r3, #2880
 698 0038 B2F5827F 		cmp	r2, #260
 699 003c 00D2     		bcs	.L65
 250:Src/freertos.c ****         value = 10;
 700              		.loc 1 250 0
 701 003e 0A20     		movs	r0, #10
 702              	.LVL66:
 703              	.L65:
 251:Src/freertos.c ****     }
 252:Src/freertos.c ****     if (adcValue >= 2690 && adcValue < 2880) {
 704              		.loc 1 252 0
 705 0040 A3F68222 		subw	r2, r3, #2690
 706 0044 BD2A     		cmp	r2, #189
 707 0046 00D8     		bhi	.L66
 253:Src/freertos.c ****         value = 11;
 708              		.loc 1 253 0
 709 0048 0B20     		movs	r0, #11
 710              	.LVL67:
 711              	.L66:
 254:Src/freertos.c ****     }
 255:Src/freertos.c ****     if (adcValue >= 2510 && adcValue < 2690) {
 712              		.loc 1 255 0
 713 004a A3F6CE12 		subw	r2, r3, #2510
 714 004e B32A     		cmp	r2, #179
 715 0050 00D8     		bhi	.L67
 256:Src/freertos.c ****         value = 12;
 716              		.loc 1 256 0
 717 0052 0C20     		movs	r0, #12
 718              	.LVL68:
 719              	.L67:
 257:Src/freertos.c ****     }
 258:Src/freertos.c ****     if (adcValue >= 2460 && adcValue < 2510) {
 720              		.loc 1 258 0
 721 0054 A3F69C12 		subw	r2, r3, #2460
 722 0058 312A     		cmp	r2, #49
 723 005a 00D8     		bhi	.L68
 259:Src/freertos.c ****         value = 13;
 724              		.loc 1 259 0
 725 005c 0D20     		movs	r0, #13
 726              	.LVL69:
 727              	.L68:
 260:Src/freertos.c ****     }
 261:Src/freertos.c ****     if (adcValue >= 2250 && adcValue < 2460) {
 728              		.loc 1 261 0
 729 005e A3F6CA02 		subw	r2, r3, #2250
 730 0062 D12A     		cmp	r2, #209
 731 0064 00D8     		bhi	.L69
 262:Src/freertos.c ****         value = 14;
 732              		.loc 1 262 0
 733 0066 0E20     		movs	r0, #14
ARM GAS  /tmp/ccss0oyI.s 			page 18


 734              	.LVL70:
 735              	.L69:
 263:Src/freertos.c ****     }
 264:Src/freertos.c ****     if (adcValue >= 2140 && adcValue < 2250) {
 736              		.loc 1 264 0
 737 0068 A3F65C02 		subw	r2, r3, #2140
 738 006c 6D2A     		cmp	r2, #109
 739 006e 00D8     		bhi	.L70
 265:Src/freertos.c ****         value = 15;
 740              		.loc 1 265 0
 741 0070 0F20     		movs	r0, #15
 742              	.LVL71:
 743              	.L70:
 266:Src/freertos.c ****     }
 267:Src/freertos.c ****     if (adcValue >= 2070 && adcValue < 2140) {
 744              		.loc 1 267 0
 745 0072 A3F61602 		subw	r2, r3, #2070
 746 0076 452A     		cmp	r2, #69
 747 0078 00D8     		bhi	.L71
 268:Src/freertos.c ****         value = 16;
 748              		.loc 1 268 0
 749 007a 1020     		movs	r0, #16
 750              	.LVL72:
 751              	.L71:
 269:Src/freertos.c ****     }
 270:Src/freertos.c ****     if (adcValue >= 1970 && adcValue < 2070) {
 752              		.loc 1 270 0
 753 007c A3F2B272 		subw	r2, r3, #1970
 754 0080 632A     		cmp	r2, #99
 755 0082 00D8     		bhi	.L72
 271:Src/freertos.c ****         value = 17;
 756              		.loc 1 271 0
 757 0084 1120     		movs	r0, #17
 758              	.LVL73:
 759              	.L72:
 272:Src/freertos.c ****     }
 273:Src/freertos.c ****     if (adcValue >= 1910 && adcValue < 1970) {
 760              		.loc 1 273 0
 761 0086 A3F27672 		subw	r2, r3, #1910
 762 008a 3B2A     		cmp	r2, #59
 763 008c 00D8     		bhi	.L73
 274:Src/freertos.c ****         value = 18;
 764              		.loc 1 274 0
 765 008e 1220     		movs	r0, #18
 766              	.LVL74:
 767              	.L73:
 275:Src/freertos.c ****     }
 276:Src/freertos.c ****     if (adcValue >= 1850 && adcValue < 1910) {
 768              		.loc 1 276 0
 769 0090 A3F23A72 		subw	r2, r3, #1850
 770 0094 3B2A     		cmp	r2, #59
 771 0096 00D8     		bhi	.L74
 277:Src/freertos.c ****         value = 19;
 772              		.loc 1 277 0
 773 0098 1320     		movs	r0, #19
 774              	.LVL75:
 775              	.L74:
ARM GAS  /tmp/ccss0oyI.s 			page 19


 278:Src/freertos.c ****     }
 279:Src/freertos.c ****     if (adcValue >= 1780 && adcValue < 1850) {
 776              		.loc 1 279 0
 777 009a A3F2F463 		subw	r3, r3, #1780
 778 009e 452B     		cmp	r3, #69
 779 00a0 00D8     		bhi	.L75
 280:Src/freertos.c ****         value = 20;
 780              		.loc 1 280 0
 781 00a2 1420     		movs	r0, #20
 782              	.LVL76:
 783              	.L75:
 281:Src/freertos.c ****     }
 282:Src/freertos.c ****     return(value);
 283:Src/freertos.c **** }
 784              		.loc 1 283 0
 785 00a4 7047     		bx	lr
 786              	.L92:
 787 00a6 00BF     		.align	2
 788              	.L91:
 789 00a8 00000000 		.word	.LANCHOR2
 790              		.cfi_endproc
 791              	.LFE142:
 793              		.section	.text.estPresent,"ax",%progbits
 794              		.align	2
 795              		.global	estPresent
 796              		.thumb
 797              		.thumb_func
 799              	estPresent:
 800              	.LFB143:
 284:Src/freertos.c **** 
 285:Src/freertos.c **** void estPresent() {
 801              		.loc 1 285 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805 0000 08B5     		push	{r3, lr}
 806              	.LCFI13:
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 3, -8
 809              		.cfi_offset 14, -4
 286:Src/freertos.c ****     int value;
 287:Src/freertos.c ****     value = distance();
 810              		.loc 1 287 0
 811 0002 FFF7FEFF 		bl	distance
 812              	.LVL77:
 288:Src/freertos.c ****     if (value != 0 && value <= 20) {
 813              		.loc 1 288 0
 814 0006 20B1     		cbz	r0, .L93
 815              		.loc 1 288 0 is_stmt 0 discriminator 1
 816 0008 1428     		cmp	r0, #20
 817 000a 02DC     		bgt	.L93
 289:Src/freertos.c ****         flag_present = 1;
 818              		.loc 1 289 0 is_stmt 1
 819 000c 0122     		movs	r2, #1
 820 000e 014B     		ldr	r3, .L96
 821 0010 1A60     		str	r2, [r3]
 822              	.L93:
ARM GAS  /tmp/ccss0oyI.s 			page 20


 823 0012 08BD     		pop	{r3, pc}
 824              	.L97:
 825              		.align	2
 826              	.L96:
 827 0014 00000000 		.word	.LANCHOR4
 828              		.cfi_endproc
 829              	.LFE143:
 831              		.section	.text.EnvoiMessage,"ax",%progbits
 832              		.align	2
 833              		.global	EnvoiMessage
 834              		.thumb
 835              		.thumb_func
 837              	EnvoiMessage:
 838              	.LFB144:
 290:Src/freertos.c ****     }
 291:Src/freertos.c **** }
 292:Src/freertos.c **** 
 293:Src/freertos.c **** /* END Fonctions ADC */
 294:Src/freertos.c **** 
 295:Src/freertos.c **** /* BEGIN Fonctions UART */
 296:Src/freertos.c ****     void EnvoiMessage(uint8_t data){
 839              		.loc 1 296 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL78:
 844 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 845              	.LCFI14:
 846              		.cfi_def_cfa_offset 32
 847              		.cfi_offset 4, -32
 848              		.cfi_offset 5, -28
 849              		.cfi_offset 6, -24
 850              		.cfi_offset 7, -20
 851              		.cfi_offset 8, -16
 852              		.cfi_offset 9, -12
 853              		.cfi_offset 10, -8
 854              		.cfi_offset 14, -4
 855 0004 82B0     		sub	sp, sp, #8
 856              	.LCFI15:
 857              		.cfi_def_cfa_offset 40
 297:Src/freertos.c ****         uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit,
 298:Src/freertos.c **** 
 299:Src/freertos.c ****         eun = (data & 0x01);
 858              		.loc 1 299 0
 859 0006 00F0010E 		and	lr, r0, #1
 860              	.LVL79:
 300:Src/freertos.c ****         edeux = (data & 0x02)/2;
 861              		.loc 1 300 0
 862 000a C0F34006 		ubfx	r6, r0, #1, #1
 863              	.LVL80:
 301:Src/freertos.c ****         equatre =(data & 0x04)/4;
 864              		.loc 1 301 0
 865 000e 00F00403 		and	r3, r0, #4
 866 0012 DBB2     		uxtb	r3, r3
 867 0014 9B10     		asrs	r3, r3, #2
 868 0016 DBB2     		uxtb	r3, r3
 869              	.LVL81:
ARM GAS  /tmp/ccss0oyI.s 			page 21


 302:Src/freertos.c ****         ehuit = (data & 0x08)/8;
 870              		.loc 1 302 0
 871 0018 00F00801 		and	r1, r0, #8
 872 001c C9B2     		uxtb	r1, r1
 873 001e C910     		asrs	r1, r1, #3
 874 0020 CFB2     		uxtb	r7, r1
 875              	.LVL82:
 303:Src/freertos.c ****         eseize = (data & 0x10)/16;
 876              		.loc 1 303 0
 877 0022 00F01004 		and	r4, r0, #16
 878 0026 E4B2     		uxtb	r4, r4
 879 0028 2411     		asrs	r4, r4, #4
 880 002a 5FFA84FC 		uxtb	ip, r4
 881              	.LVL83:
 304:Src/freertos.c ****         etrentedeux = (data & 0x20)/32;
 882              		.loc 1 304 0
 883 002e 00F02002 		and	r2, r0, #32
 884 0032 D2B2     		uxtb	r2, r2
 885 0034 5211     		asrs	r2, r2, #5
 886 0036 D2B2     		uxtb	r2, r2
 887              	.LVL84:
 305:Src/freertos.c ****         esoixantequatre = (data & 0x40)/64;
 888              		.loc 1 305 0
 889 0038 00F04005 		and	r5, r0, #64
 890 003c EDB2     		uxtb	r5, r5
 891 003e AD11     		asrs	r5, r5, #6
 892 0040 5FFA85F8 		uxtb	r8, r5
 893              	.LVL85:
 306:Src/freertos.c ****         ecentvingthuit = (data & 0x80)/128;
 894              		.loc 1 306 0
 895 0044 00F08000 		and	r0, r0, #128
 896              	.LVL86:
 897 0048 C011     		asrs	r0, r0, #7
 898 004a C0B2     		uxtb	r0, r0
 899              	.LVL87:
 307:Src/freertos.c **** 
 308:Src/freertos.c ****         b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequat
 900              		.loc 1 308 0
 901 004c 80EA020A 		eor	r10, r0, r2
 902 0050 80EA0809 		eor	r9, r0, r8
 903 0054 09EB4A09 		add	r9, r9, r10, lsl #1
 904 0058 88EA0208 		eor	r8, r8, r2
 905              	.LVL88:
 906 005c 08EB4908 		add	r8, r8, r9, lsl #1
 907 0060 00EB4800 		add	r0, r0, r8, lsl #1
 908              	.LVL89:
 909 0064 05EB4000 		add	r0, r5, r0, lsl #1
 910 0068 02EB4002 		add	r2, r2, r0, lsl #1
 911              	.LVL90:
 912 006c 8DF80720 		strb	r2, [sp, #7]
 309:Src/freertos.c ****         k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + eq
 913              		.loc 1 309 0
 914 0070 8CEA0302 		eor	r2, ip, r3
 915 0074 8CEA070C 		eor	ip, ip, r7
 916              	.LVL91:
 917 0078 0CEB420C 		add	ip, ip, r2, lsl #1
 918 007c 5F40     		eors	r7, r7, r3
ARM GAS  /tmp/ccss0oyI.s 			page 22


 919              	.LVL92:
 920 007e 07EB4C07 		add	r7, r7, ip, lsl #1
 921 0082 04EB4707 		add	r7, r4, r7, lsl #1
 922 0086 01EB4701 		add	r1, r1, r7, lsl #1
 923              	.LVL93:
 924 008a 03EB4103 		add	r3, r3, r1, lsl #1
 925              	.LVL94:
 926 008e 8DF80630 		strb	r3, [sp, #6]
 310:Src/freertos.c ****         z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 927              		.loc 1 310 0
 928 0092 F3B2     		uxtb	r3, r6
 929 0094 03EB4E02 		add	r2, r3, lr, lsl #1
 930 0098 86EA0E06 		eor	r6, r6, lr
 931              	.LVL95:
 932 009c 06EB4206 		add	r6, r6, r2, lsl #1
 933 00a0 03EB8606 		add	r6, r3, r6, lsl #2
 934 00a4 0EEB460E 		add	lr, lr, r6, lsl #1
 935              	.LVL96:
 936 00a8 8DF805E0 		strb	lr, [sp, #5]
 311:Src/freertos.c **** 
 312:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 937              		.loc 1 312 0
 938 00ac 124C     		ldr	r4, .L106
 939              	.LVL97:
 940 00ae 2046     		mov	r0, r4
 941 00b0 0DF10701 		add	r1, sp, #7
 942 00b4 0122     		movs	r2, #1
 943 00b6 4EF6EE63 		movw	r3, #61166
 944              	.LVL98:
 945 00ba FFF7FEFF 		bl	HAL_UART_Transmit
 946              	.LVL99:
 313:Src/freertos.c ****         osDelay(2);
 947              		.loc 1 313 0
 948 00be 0220     		movs	r0, #2
 949 00c0 FFF7FEFF 		bl	osDelay
 950              	.LVL100:
 314:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 951              		.loc 1 314 0
 952 00c4 2046     		mov	r0, r4
 953 00c6 0DF10601 		add	r1, sp, #6
 954 00ca 0122     		movs	r2, #1
 955 00cc 4EF6EE63 		movw	r3, #61166
 956 00d0 FFF7FEFF 		bl	HAL_UART_Transmit
 957              	.LVL101:
 315:Src/freertos.c ****         osDelay(2);
 958              		.loc 1 315 0
 959 00d4 0220     		movs	r0, #2
 960 00d6 FFF7FEFF 		bl	osDelay
 961              	.LVL102:
 316:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 962              		.loc 1 316 0
 963 00da 2046     		mov	r0, r4
 964 00dc 0DF10501 		add	r1, sp, #5
 965 00e0 0122     		movs	r2, #1
 966 00e2 4EF6EE63 		movw	r3, #61166
 967 00e6 FFF7FEFF 		bl	HAL_UART_Transmit
 968              	.LVL103:
ARM GAS  /tmp/ccss0oyI.s 			page 23


 317:Src/freertos.c ****         osDelay(2);
 969              		.loc 1 317 0
 970 00ea 0220     		movs	r0, #2
 971 00ec FFF7FEFF 		bl	osDelay
 972              	.LVL104:
 318:Src/freertos.c ****     }
 973              		.loc 1 318 0
 974 00f0 02B0     		add	sp, sp, #8
 975              	.LCFI16:
 976              		.cfi_def_cfa_offset 32
 977              		@ sp needed
 978 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 979              	.LVL105:
 980              	.L107:
 981 00f6 00BF     		.align	2
 982              	.L106:
 983 00f8 00000000 		.word	huart1
 984              		.cfi_endproc
 985              	.LFE144:
 987              		.section	.text.ReceptionMessage,"ax",%progbits
 988              		.align	2
 989              		.global	ReceptionMessage
 990              		.thumb
 991              		.thumb_func
 993              	ReceptionMessage:
 994              	.LFB145:
 319:Src/freertos.c **** 
 320:Src/freertos.c ****     int ReceptionMessage(){
 995              		.loc 1 320 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 8
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1000              	.LCFI17:
 1001              		.cfi_def_cfa_offset 28
 1002              		.cfi_offset 4, -28
 1003              		.cfi_offset 5, -24
 1004              		.cfi_offset 6, -20
 1005              		.cfi_offset 7, -16
 1006              		.cfi_offset 8, -12
 1007              		.cfi_offset 9, -8
 1008              		.cfi_offset 14, -4
 1009 0004 83B0     		sub	sp, sp, #12
 1010              	.LCFI18:
 1011              		.cfi_def_cfa_offset 40
 321:Src/freertos.c ****         uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 322:Src/freertos.c ****         uint8_t rec[3];
 323:Src/freertos.c ****         HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 1012              		.loc 1 323 0
 1013 0006 414C     		ldr	r4, .L126
 1014 0008 2046     		mov	r0, r4
 1015 000a 0DF10701 		add	r1, sp, #7
 1016 000e 0122     		movs	r2, #1
 1017 0010 4EF6EE63 		movw	r3, #61166
 1018 0014 FFF7FEFF 		bl	HAL_UART_Receive
 1019              	.LVL106:
 324:Src/freertos.c ****         HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
ARM GAS  /tmp/ccss0oyI.s 			page 24


 1020              		.loc 1 324 0
 1021 0018 2046     		mov	r0, r4
 1022 001a 0DF10601 		add	r1, sp, #6
 1023 001e 0122     		movs	r2, #1
 1024 0020 4EF6EE63 		movw	r3, #61166
 1025 0024 FFF7FEFF 		bl	HAL_UART_Receive
 1026              	.LVL107:
 325:Src/freertos.c ****         HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 1027              		.loc 1 325 0
 1028 0028 2046     		mov	r0, r4
 1029 002a 0DF10501 		add	r1, sp, #5
 1030 002e 0122     		movs	r2, #1
 1031 0030 4EF6EE63 		movw	r3, #61166
 1032 0034 FFF7FEFF 		bl	HAL_UART_Receive
 1033              	.LVL108:
 326:Src/freertos.c **** 
 327:Src/freertos.c ****         rec[0] = r;
 1034              		.loc 1 327 0
 1035 0038 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 1036 003c 8DF800C0 		strb	ip, [sp]
 328:Src/freertos.c ****         rec[1] = m;
 1037              		.loc 1 328 0
 1038 0040 9DF80650 		ldrb	r5, [sp, #6]	@ zero_extendqisi2
 1039 0044 8DF80150 		strb	r5, [sp, #1]
 329:Src/freertos.c ****         rec[2] = n;
 1040              		.loc 1 329 0
 1041 0048 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
 1042 004c 8DF80280 		strb	r8, [sp, #2]
 1043              	.LVL109:
 330:Src/freertos.c ****         ok = 1;
 331:Src/freertos.c ****         for (i =0; i<3; i++) {
 1044              		.loc 1 331 0
 1045 0050 0024     		movs	r4, #0
 330:Src/freertos.c ****         ok = 1;
 1046              		.loc 1 330 0
 1047 0052 4FF0010E 		mov	lr, #1
 1048              		.loc 1 331 0
 1049 0056 2DE0     		b	.L109
 1050              	.LVL110:
 1051              	.L117:
 332:Src/freertos.c ****             run = (rec[i] & 0x01);
 1052              		.loc 1 332 0
 1053 0058 02AB     		add	r3, sp, #8
 1054 005a 2344     		add	r3, r3, r4
 1055 005c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1056 0060 03F00106 		and	r6, r3, #1
 1057              	.LVL111:
 333:Src/freertos.c ****             rdeux = (rec[i] & 0x02)/2;
 1058              		.loc 1 333 0
 1059 0064 C3F34007 		ubfx	r7, r3, #1, #1
 1060              	.LVL112:
 334:Src/freertos.c ****             rquatre =(rec[i] & 0x04)/4;
 1061              		.loc 1 334 0
 1062 0068 03F00402 		and	r2, r3, #4
 1063 006c D2B2     		uxtb	r2, r2
 1064 006e 9210     		asrs	r2, r2, #2
 1065 0070 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccss0oyI.s 			page 25


 1066              	.LVL113:
 335:Src/freertos.c ****             rhuit = (rec[i] & 0x08)/8;
 1067              		.loc 1 335 0
 1068 0072 03F00800 		and	r0, r3, #8
 1069 0076 C0B2     		uxtb	r0, r0
 1070 0078 C010     		asrs	r0, r0, #3
 1071 007a C0B2     		uxtb	r0, r0
 1072              	.LVL114:
 336:Src/freertos.c ****             rseize = (rec[i] & 0x10)/16;
 1073              		.loc 1 336 0
 1074 007c 03F01001 		and	r1, r3, #16
 1075 0080 C9B2     		uxtb	r1, r1
 1076 0082 0911     		asrs	r1, r1, #4
 1077 0084 C9B2     		uxtb	r1, r1
 1078              	.LVL115:
 337:Src/freertos.c ****             rtrentedeux = (rec[i] & 0x20)/32;
 1079              		.loc 1 337 0
 1080 0086 03F02003 		and	r3, r3, #32
 1081 008a DBB2     		uxtb	r3, r3
 1082 008c 5B11     		asrs	r3, r3, #5
 1083 008e DBB2     		uxtb	r3, r3
 1084              	.LVL116:
 338:Src/freertos.c ****             if ((run^rdeux) != rhuit) ok =0;
 1085              		.loc 1 338 0
 1086 0090 86EA0709 		eor	r9, r6, r7
 1087 0094 8145     		cmp	r9, r0
 1088 0096 01D0     		beq	.L114
 1089 0098 4FF0000E 		mov	lr, #0
 1090              	.LVL117:
 1091              	.L114:
 339:Src/freertos.c ****             if ((rdeux^rquatre) != rseize) ok =0;
 1092              		.loc 1 339 0
 1093 009c 5740     		eors	r7, r7, r2
 1094              	.LVL118:
 1095 009e 8F42     		cmp	r7, r1
 1096 00a0 01D0     		beq	.L115
 1097 00a2 4FF0000E 		mov	lr, #0
 1098              	.LVL119:
 1099              	.L115:
 340:Src/freertos.c ****             if ((rquatre^run) != rtrentedeux) ok = 0;
 1100              		.loc 1 340 0
 1101 00a6 7240     		eors	r2, r2, r6
 1102              	.LVL120:
 1103 00a8 9A42     		cmp	r2, r3
 1104 00aa 01D0     		beq	.L116
 1105 00ac 4FF0000E 		mov	lr, #0
 1106              	.LVL121:
 1107              	.L116:
 331:Src/freertos.c ****             run = (rec[i] & 0x01);
 1108              		.loc 1 331 0 discriminator 2
 1109 00b0 0134     		adds	r4, r4, #1
 1110              	.LVL122:
 1111 00b2 E4B2     		uxtb	r4, r4
 1112              	.LVL123:
 1113              	.L109:
 331:Src/freertos.c ****             run = (rec[i] & 0x01);
 1114              		.loc 1 331 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccss0oyI.s 			page 26


 1115 00b4 022C     		cmp	r4, #2
 1116 00b6 CFD9     		bls	.L117
 341:Src/freertos.c ****         }
 342:Src/freertos.c ****         r =  (r & 0x07)*32;
 1117              		.loc 1 342 0 is_stmt 1
 1118 00b8 0CF0070C 		and	ip, ip, #7
 1119 00bc 4FEA4C1C 		lsl	ip, ip, #5
 1120 00c0 8DF807C0 		strb	ip, [sp, #7]
 343:Src/freertos.c ****         m =  (m & 0x07)*4;
 1121              		.loc 1 343 0
 1122 00c4 05F00703 		and	r3, r5, #7
 1123 00c8 9D00     		lsls	r5, r3, #2
 1124 00ca 8DF80650 		strb	r5, [sp, #6]
 344:Src/freertos.c ****         n =  (n & 0x07);
 1125              		.loc 1 344 0
 1126 00ce 08F00708 		and	r8, r8, #7
 1127 00d2 8DF80580 		strb	r8, [sp, #5]
 345:Src/freertos.c ****         v =  r + m + n;
 1128              		.loc 1 345 0
 1129 00d6 6544     		add	r5, r5, ip
 1130 00d8 4544     		add	r5, r5, r8
 1131 00da EDB2     		uxtb	r5, r5
 1132              	.LVL124:
 346:Src/freertos.c ****         if (ok == 1) {
 1133              		.loc 1 346 0
 1134 00dc BEF1000F 		cmp	lr, #0
 1135 00e0 0CD1     		bne	.L124
 347:Src/freertos.c ****             for (i = 0; i<5; i++)
 348:Src/freertos.c ****             {
 349:Src/freertos.c ****                 HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 350:Src/freertos.c ****                 osDelay(500);
 351:Src/freertos.c ****             }
 352:Src/freertos.c ****             return(v);
 353:Src/freertos.c ****         }
 354:Src/freertos.c ****         else return(0);
 1136              		.loc 1 354 0
 1137 00e2 0020     		movs	r0, #0
 1138 00e4 0EE0     		b	.L119
 1139              	.LVL125:
 1140              	.L120:
 349:Src/freertos.c ****                 osDelay(500);
 1141              		.loc 1 349 0 discriminator 3
 1142 00e6 0A48     		ldr	r0, .L126+4
 1143 00e8 4021     		movs	r1, #64
 1144 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1145              	.LVL126:
 350:Src/freertos.c ****             }
 1146              		.loc 1 350 0 discriminator 3
 1147 00ee 4FF4FA70 		mov	r0, #500
 1148 00f2 FFF7FEFF 		bl	osDelay
 1149              	.LVL127:
 347:Src/freertos.c ****             for (i = 0; i<5; i++)
 1150              		.loc 1 347 0 discriminator 3
 1151 00f6 0134     		adds	r4, r4, #1
 1152              	.LVL128:
 1153 00f8 E4B2     		uxtb	r4, r4
 1154              	.LVL129:
ARM GAS  /tmp/ccss0oyI.s 			page 27


 1155 00fa 00E0     		b	.L118
 1156              	.LVL130:
 1157              	.L124:
 1158 00fc 0024     		movs	r4, #0
 1159              	.LVL131:
 1160              	.L118:
 347:Src/freertos.c ****             for (i = 0; i<5; i++)
 1161              		.loc 1 347 0 is_stmt 0 discriminator 1
 1162 00fe 042C     		cmp	r4, #4
 1163 0100 F1D9     		bls	.L120
 352:Src/freertos.c ****         }
 1164              		.loc 1 352 0 is_stmt 1
 1165 0102 2846     		mov	r0, r5
 1166              	.L119:
 355:Src/freertos.c ****     }
 1167              		.loc 1 355 0
 1168 0104 03B0     		add	sp, sp, #12
 1169              	.LCFI19:
 1170              		.cfi_def_cfa_offset 28
 1171              		@ sp needed
 1172 0106 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1173              	.LVL132:
 1174              	.L127:
 1175 010a 00BF     		.align	2
 1176              	.L126:
 1177 010c 00000000 		.word	huart1
 1178 0110 00040048 		.word	1207960576
 1179              		.cfi_endproc
 1180              	.LFE145:
 1182              		.section	.text.recoitpos,"ax",%progbits
 1183              		.align	2
 1184              		.global	recoitpos
 1185              		.thumb
 1186              		.thumb_func
 1188              	recoitpos:
 1189              	.LFB146:
 356:Src/freertos.c **** 
 357:Src/freertos.c ****     void recoitpos(){
 1190              		.loc 1 357 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194 0000 38B5     		push	{r3, r4, r5, lr}
 1195              	.LCFI20:
 1196              		.cfi_def_cfa_offset 16
 1197              		.cfi_offset 3, -16
 1198              		.cfi_offset 4, -12
 1199              		.cfi_offset 5, -8
 1200              		.cfi_offset 14, -4
 358:Src/freertos.c ****         uint8_t a, x, y, c;
 359:Src/freertos.c ****         a = ReceptionMessage();
 1201              		.loc 1 359 0
 1202 0002 FFF7FEFF 		bl	ReceptionMessage
 1203              	.LVL133:
 1204 0006 C0B2     		uxtb	r0, r0
 1205              	.LVL134:
 360:Src/freertos.c ****         x = a & 0xF0;
ARM GAS  /tmp/ccss0oyI.s 			page 28


 1206              		.loc 1 360 0
 1207 0008 00F0F005 		and	r5, r0, #240
 1208              	.LVL135:
 361:Src/freertos.c ****         y = a & 0x0F;
 1209              		.loc 1 361 0
 1210 000c 00F00F04 		and	r4, r0, #15
 1211              	.LVL136:
 362:Src/freertos.c ****         c = ReceptionMessage();
 1212              		.loc 1 362 0
 1213 0010 FFF7FEFF 		bl	ReceptionMessage
 1214              	.LVL137:
 363:Src/freertos.c ****         robot2.posx = x;
 1215              		.loc 1 363 0
 1216 0014 024B     		ldr	r3, .L130
 1217 0016 1D60     		str	r5, [r3]
 364:Src/freertos.c ****         robot2.posy = y;
 1218              		.loc 1 364 0
 1219 0018 5C60     		str	r4, [r3, #4]
 365:Src/freertos.c ****         robot2.orientation = c;
 1220              		.loc 1 365 0
 1221 001a C0B2     		uxtb	r0, r0
 1222 001c 9860     		str	r0, [r3, #8]
 1223 001e 38BD     		pop	{r3, r4, r5, pc}
 1224              	.LVL138:
 1225              	.L131:
 1226              		.align	2
 1227              	.L130:
 1228 0020 00000000 		.word	robot2
 1229              		.cfi_endproc
 1230              	.LFE146:
 1232              		.section	.text.envoipos,"ax",%progbits
 1233              		.align	2
 1234              		.global	envoipos
 1235              		.thumb
 1236              		.thumb_func
 1238              	envoipos:
 1239              	.LFB147:
 366:Src/freertos.c ****     }
 367:Src/freertos.c **** 
 368:Src/freertos.c ****     void envoipos(uint8_t x, uint8_t y , uint8_t c){
 1240              		.loc 1 368 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              	.LVL139:
 1245 0000 10B5     		push	{r4, lr}
 1246              	.LCFI21:
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 4, -8
 1249              		.cfi_offset 14, -4
 1250 0002 1446     		mov	r4, r2
 369:Src/freertos.c ****          x = x*16 + y;
 1251              		.loc 1 369 0
 1252 0004 01EB0010 		add	r0, r1, r0, lsl #4
 1253              	.LVL140:
 370:Src/freertos.c ****          EnvoiMessage(x);
 1254              		.loc 1 370 0
ARM GAS  /tmp/ccss0oyI.s 			page 29


 1255 0008 C0B2     		uxtb	r0, r0
 1256 000a FFF7FEFF 		bl	EnvoiMessage
 1257              	.LVL141:
 371:Src/freertos.c ****          EnvoiMessage(c);
 1258              		.loc 1 371 0
 1259 000e 2046     		mov	r0, r4
 1260 0010 FFF7FEFF 		bl	EnvoiMessage
 1261              	.LVL142:
 1262 0014 10BD     		pop	{r4, pc}
 1263              		.cfi_endproc
 1264              	.LFE147:
 1266 0016 00BF     		.section	.text.Traduction,"ax",%progbits
 1267              		.align	2
 1268              		.global	Traduction
 1269              		.thumb
 1270              		.thumb_func
 1272              	Traduction:
 1273              	.LFB148:
 372:Src/freertos.c ****     }
 373:Src/freertos.c **** 
 374:Src/freertos.c ****     void Traduction(uint8_t msg){
 1274              		.loc 1 374 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278              	.LVL143:
 1279 0000 10B5     		push	{r4, lr}
 1280              	.LCFI22:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 4, -8
 1283              		.cfi_offset 14, -4
 1284 0002 0446     		mov	r4, r0
 375:Src/freertos.c ****         if (msg == 0x05) {
 1285              		.loc 1 375 0
 1286 0004 0528     		cmp	r0, #5
 1287 0006 05D1     		bne	.L135
 376:Src/freertos.c ****            envoipos(robot1.posx, robot1.posy, robot1.orientation);
 1288              		.loc 1 376 0
 1289 0008 174B     		ldr	r3, .L142
 1290 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1291              	.LVL144:
 1292 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1293 000e 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1294 0010 FFF7FEFF 		bl	envoipos
 1295              	.LVL145:
 1296              	.L135:
 377:Src/freertos.c ****         }
 378:Src/freertos.c **** 
 379:Src/freertos.c ****         if (msg == 0x06) {
 380:Src/freertos.c **** 
 381:Src/freertos.c ****         }
 382:Src/freertos.c **** 
 383:Src/freertos.c ****         if (msg == 0x07) {
 1297              		.loc 1 383 0
 1298 0014 072C     		cmp	r4, #7
 1299 0016 02D1     		bne	.L136
 384:Src/freertos.c ****             flag_haut = 1;
ARM GAS  /tmp/ccss0oyI.s 			page 30


 1300              		.loc 1 384 0
 1301 0018 0122     		movs	r2, #1
 1302 001a 144B     		ldr	r3, .L142+4
 1303 001c 1A60     		str	r2, [r3]
 1304              	.L136:
 385:Src/freertos.c ****         }
 386:Src/freertos.c **** 
 387:Src/freertos.c ****         if (msg == 0x08) {
 1305              		.loc 1 387 0
 1306 001e 082C     		cmp	r4, #8
 1307 0020 02D1     		bne	.L137
 388:Src/freertos.c ****             flag_bas = 1;
 1308              		.loc 1 388 0
 1309 0022 0122     		movs	r2, #1
 1310 0024 124B     		ldr	r3, .L142+8
 1311 0026 1A60     		str	r2, [r3]
 1312              	.L137:
 389:Src/freertos.c ****         }
 390:Src/freertos.c **** 
 391:Src/freertos.c ****         if (msg == 0x09) {
 1313              		.loc 1 391 0
 1314 0028 092C     		cmp	r4, #9
 1315 002a 02D1     		bne	.L138
 392:Src/freertos.c ****             flag_droite = 1;
 1316              		.loc 1 392 0
 1317 002c 0122     		movs	r2, #1
 1318 002e 114B     		ldr	r3, .L142+12
 1319 0030 1A60     		str	r2, [r3]
 1320              	.L138:
 393:Src/freertos.c ****         }
 394:Src/freertos.c **** 
 395:Src/freertos.c ****         if (msg == 0x0A) {
 1321              		.loc 1 395 0
 1322 0032 0A2C     		cmp	r4, #10
 1323 0034 02D1     		bne	.L139
 396:Src/freertos.c ****             flag_gauche = 1;
 1324              		.loc 1 396 0
 1325 0036 0122     		movs	r2, #1
 1326 0038 0F4B     		ldr	r3, .L142+16
 1327 003a 1A60     		str	r2, [r3]
 1328              	.L139:
 397:Src/freertos.c ****         }
 398:Src/freertos.c **** 
 399:Src/freertos.c ****         if (msg == 0x0B) {
 400:Src/freertos.c ****         }
 401:Src/freertos.c **** 
 402:Src/freertos.c ****         if (msg == 0x0C) {
 403:Src/freertos.c ****         }
 404:Src/freertos.c **** 
 405:Src/freertos.c ****         if (msg == 0x0D) {
 1329              		.loc 1 405 0
 1330 003c 0D2C     		cmp	r4, #13
 1331 003e 12D1     		bne	.L134
 1332              	.LBB2:
 406:Src/freertos.c ****             uint8_t a;
 407:Src/freertos.c ****             srand(time(NULL));
 1333              		.loc 1 407 0
ARM GAS  /tmp/ccss0oyI.s 			page 31


 1334 0040 0020     		movs	r0, #0
 1335 0042 FFF7FEFF 		bl	time
 1336              	.LVL146:
 1337 0046 FFF7FEFF 		bl	srand
 1338              	.LVL147:
 408:Src/freertos.c ****             a = rand()%100;
 1339              		.loc 1 408 0
 1340 004a FFF7FEFF 		bl	rand
 1341              	.LVL148:
 1342 004e 0B4B     		ldr	r3, .L142+20
 1343 0050 83FB0032 		smull	r3, r2, r3, r0
 1344 0054 C317     		asrs	r3, r0, #31
 1345 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1346 005a 6422     		movs	r2, #100
 1347 005c 02FB1303 		mls	r3, r2, r3, r0
 1348              	.LVL149:
 409:Src/freertos.c ****             EnvoiMessage(a);
 1349              		.loc 1 409 0
 1350 0060 D8B2     		uxtb	r0, r3
 1351 0062 FFF7FEFF 		bl	EnvoiMessage
 1352              	.LVL150:
 1353              	.L134:
 1354 0066 10BD     		pop	{r4, pc}
 1355              	.L143:
 1356              		.align	2
 1357              	.L142:
 1358 0068 00000000 		.word	robot1
 1359 006c 00000000 		.word	.LANCHOR5
 1360 0070 00000000 		.word	.LANCHOR6
 1361 0074 00000000 		.word	.LANCHOR7
 1362 0078 00000000 		.word	.LANCHOR8
 1363 007c 1F85EB51 		.word	1374389535
 1364              	.LBE2:
 1365              		.cfi_endproc
 1366              	.LFE148:
 1368              		.section	.text.WaitFor,"ax",%progbits
 1369              		.align	2
 1370              		.global	WaitFor
 1371              		.thumb
 1372              		.thumb_func
 1374              	WaitFor:
 1375              	.LFB149:
 410:Src/freertos.c ****         }
 411:Src/freertos.c **** 
 412:Src/freertos.c ****         if (msg == 0x10) {
 413:Src/freertos.c ****         }
 414:Src/freertos.c **** 
 415:Src/freertos.c ****         if (msg == 0x11) {
 416:Src/freertos.c ****         }
 417:Src/freertos.c **** 
 418:Src/freertos.c ****         if (msg == 0x12) {
 419:Src/freertos.c ****         }
 420:Src/freertos.c **** 
 421:Src/freertos.c ****         if (msg == 0x13) {
 422:Src/freertos.c ****         }
 423:Src/freertos.c ****     }
 424:Src/freertos.c **** 
ARM GAS  /tmp/ccss0oyI.s 			page 32


 425:Src/freertos.c ****     void WaitFor(uint8_t z) {
 1376              		.loc 1 425 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              	.LVL151:
 1381 0000 10B5     		push	{r4, lr}
 1382              	.LCFI23:
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 4, -8
 1385              		.cfi_offset 14, -4
 1386 0002 0446     		mov	r4, r0
 1387              	.LVL152:
 1388              	.L145:
 426:Src/freertos.c ****         while (z != ReceptionMessage()) ;
 1389              		.loc 1 426 0 discriminator 1
 1390 0004 FFF7FEFF 		bl	ReceptionMessage
 1391              	.LVL153:
 1392 0008 8442     		cmp	r4, r0
 1393 000a FBD1     		bne	.L145
 427:Src/freertos.c ****     }
 1394              		.loc 1 427 0
 1395 000c 10BD     		pop	{r4, pc}
 1396              		.cfi_endproc
 1397              	.LFE149:
 1399 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1400              		.align	2
 1401              		.global	TaPosition
 1402              		.thumb
 1403              		.thumb_func
 1405              	TaPosition:
 1406              	.LFB150:
 428:Src/freertos.c **** 
 429:Src/freertos.c ****     void TaPosition() {
 1407              		.loc 1 429 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411 0000 08B5     		push	{r3, lr}
 1412              	.LCFI24:
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 3, -8
 1415              		.cfi_offset 14, -4
 430:Src/freertos.c ****         EnvoiMessage(0x05);
 1416              		.loc 1 430 0
 1417 0002 0520     		movs	r0, #5
 1418 0004 FFF7FEFF 		bl	EnvoiMessage
 1419              	.LVL154:
 1420 0008 08BD     		pop	{r3, pc}
 1421              		.cfi_endproc
 1422              	.LFE150:
 1424 000a 00BF     		.section	.text.ok,"ax",%progbits
 1425              		.align	2
 1426              		.global	ok
 1427              		.thumb
 1428              		.thumb_func
 1430              	ok:
ARM GAS  /tmp/ccss0oyI.s 			page 33


 1431              	.LFB151:
 431:Src/freertos.c ****     }
 432:Src/freertos.c **** 
 433:Src/freertos.c ****     void ok() {
 1432              		.loc 1 433 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436 0000 08B5     		push	{r3, lr}
 1437              	.LCFI25:
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 3, -8
 1440              		.cfi_offset 14, -4
 434:Src/freertos.c ****         EnvoiMessage(0x06);
 1441              		.loc 1 434 0
 1442 0002 0620     		movs	r0, #6
 1443 0004 FFF7FEFF 		bl	EnvoiMessage
 1444              	.LVL155:
 1445 0008 08BD     		pop	{r3, pc}
 1446              		.cfi_endproc
 1447              	.LFE151:
 1449 000a 00BF     		.section	.text.Monte,"ax",%progbits
 1450              		.align	2
 1451              		.global	Monte
 1452              		.thumb
 1453              		.thumb_func
 1455              	Monte:
 1456              	.LFB152:
 435:Src/freertos.c ****     }
 436:Src/freertos.c **** 
 437:Src/freertos.c ****     void Monte() {
 1457              		.loc 1 437 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461 0000 08B5     		push	{r3, lr}
 1462              	.LCFI26:
 1463              		.cfi_def_cfa_offset 8
 1464              		.cfi_offset 3, -8
 1465              		.cfi_offset 14, -4
 438:Src/freertos.c ****         EnvoiMessage(0x07);
 1466              		.loc 1 438 0
 1467 0002 0720     		movs	r0, #7
 1468 0004 FFF7FEFF 		bl	EnvoiMessage
 1469              	.LVL156:
 439:Src/freertos.c ****         WaitFor(0x06);
 1470              		.loc 1 439 0
 1471 0008 0620     		movs	r0, #6
 1472 000a FFF7FEFF 		bl	WaitFor
 1473              	.LVL157:
 1474 000e 08BD     		pop	{r3, pc}
 1475              		.cfi_endproc
 1476              	.LFE152:
 1478              		.section	.text.Descend,"ax",%progbits
 1479              		.align	2
 1480              		.global	Descend
 1481              		.thumb
ARM GAS  /tmp/ccss0oyI.s 			page 34


 1482              		.thumb_func
 1484              	Descend:
 1485              	.LFB153:
 440:Src/freertos.c ****     }
 441:Src/freertos.c **** 
 442:Src/freertos.c ****     void Descend() {
 1486              		.loc 1 442 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490 0000 08B5     		push	{r3, lr}
 1491              	.LCFI27:
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 3, -8
 1494              		.cfi_offset 14, -4
 443:Src/freertos.c ****         EnvoiMessage(0x08);
 1495              		.loc 1 443 0
 1496 0002 0820     		movs	r0, #8
 1497 0004 FFF7FEFF 		bl	EnvoiMessage
 1498              	.LVL158:
 444:Src/freertos.c ****         WaitFor(0x06);
 1499              		.loc 1 444 0
 1500 0008 0620     		movs	r0, #6
 1501 000a FFF7FEFF 		bl	WaitFor
 1502              	.LVL159:
 1503 000e 08BD     		pop	{r3, pc}
 1504              		.cfi_endproc
 1505              	.LFE153:
 1507              		.section	.text.Droite,"ax",%progbits
 1508              		.align	2
 1509              		.global	Droite
 1510              		.thumb
 1511              		.thumb_func
 1513              	Droite:
 1514              	.LFB154:
 445:Src/freertos.c ****     }
 446:Src/freertos.c **** 
 447:Src/freertos.c ****     void Droite() {
 1515              		.loc 1 447 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519 0000 08B5     		push	{r3, lr}
 1520              	.LCFI28:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 3, -8
 1523              		.cfi_offset 14, -4
 448:Src/freertos.c ****         EnvoiMessage(0x09);
 1524              		.loc 1 448 0
 1525 0002 0920     		movs	r0, #9
 1526 0004 FFF7FEFF 		bl	EnvoiMessage
 1527              	.LVL160:
 449:Src/freertos.c ****         WaitFor(0x06);
 1528              		.loc 1 449 0
 1529 0008 0620     		movs	r0, #6
 1530 000a FFF7FEFF 		bl	WaitFor
 1531              	.LVL161:
ARM GAS  /tmp/ccss0oyI.s 			page 35


 1532 000e 08BD     		pop	{r3, pc}
 1533              		.cfi_endproc
 1534              	.LFE154:
 1536              		.section	.text.Gauche,"ax",%progbits
 1537              		.align	2
 1538              		.global	Gauche
 1539              		.thumb
 1540              		.thumb_func
 1542              	Gauche:
 1543              	.LFB155:
 450:Src/freertos.c ****     }
 451:Src/freertos.c **** 
 452:Src/freertos.c ****     void Gauche() {
 1544              		.loc 1 452 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548 0000 08B5     		push	{r3, lr}
 1549              	.LCFI29:
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 3, -8
 1552              		.cfi_offset 14, -4
 453:Src/freertos.c ****         EnvoiMessage(0x0A);
 1553              		.loc 1 453 0
 1554 0002 0A20     		movs	r0, #10
 1555 0004 FFF7FEFF 		bl	EnvoiMessage
 1556              	.LVL162:
 454:Src/freertos.c ****         WaitFor(0x06);
 1557              		.loc 1 454 0
 1558 0008 0620     		movs	r0, #6
 1559 000a FFF7FEFF 		bl	WaitFor
 1560              	.LVL163:
 1561 000e 08BD     		pop	{r3, pc}
 1562              		.cfi_endproc
 1563              	.LFE155:
 1565              		.section	.text.DansUnCoin,"ax",%progbits
 1566              		.align	2
 1567              		.global	DansUnCoin
 1568              		.thumb
 1569              		.thumb_func
 1571              	DansUnCoin:
 1572              	.LFB156:
 455:Src/freertos.c ****     }
 456:Src/freertos.c **** 
 457:Src/freertos.c ****     void DansUnCoin() {
 1573              		.loc 1 457 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577 0000 08B5     		push	{r3, lr}
 1578              	.LCFI30:
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 3, -8
 1581              		.cfi_offset 14, -4
 458:Src/freertos.c ****         EnvoiMessage(0x0B);
 1582              		.loc 1 458 0
 1583 0002 0B20     		movs	r0, #11
ARM GAS  /tmp/ccss0oyI.s 			page 36


 1584 0004 FFF7FEFF 		bl	EnvoiMessage
 1585              	.LVL164:
 1586 0008 08BD     		pop	{r3, pc}
 1587              		.cfi_endproc
 1588              	.LFE156:
 1590 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1591              		.align	2
 1592              		.global	Trouve
 1593              		.thumb
 1594              		.thumb_func
 1596              	Trouve:
 1597              	.LFB157:
 459:Src/freertos.c ****     }
 460:Src/freertos.c **** 
 461:Src/freertos.c ****     void Trouve() {
 1598              		.loc 1 461 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602 0000 08B5     		push	{r3, lr}
 1603              	.LCFI31:
 1604              		.cfi_def_cfa_offset 8
 1605              		.cfi_offset 3, -8
 1606              		.cfi_offset 14, -4
 462:Src/freertos.c ****         EnvoiMessage(0x0C);
 1607              		.loc 1 462 0
 1608 0002 0C20     		movs	r0, #12
 1609 0004 FFF7FEFF 		bl	EnvoiMessage
 1610              	.LVL165:
 1611 0008 08BD     		pop	{r3, pc}
 1612              		.cfi_endproc
 1613              	.LFE157:
 1615 000a 00BF     		.section	.text.Random,"ax",%progbits
 1616              		.align	2
 1617              		.global	Random
 1618              		.thumb
 1619              		.thumb_func
 1621              	Random:
 1622              	.LFB158:
 463:Src/freertos.c ****     }
 464:Src/freertos.c **** 
 465:Src/freertos.c ****     int Random() {
 1623              		.loc 1 465 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 0
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 1627 0000 10B5     		push	{r4, lr}
 1628              	.LCFI32:
 1629              		.cfi_def_cfa_offset 8
 1630              		.cfi_offset 4, -8
 1631              		.cfi_offset 14, -4
 466:Src/freertos.c ****         int a, p;
 467:Src/freertos.c ****         EnvoiMessage(0x0D);
 1632              		.loc 1 467 0
 1633 0002 0D20     		movs	r0, #13
 1634 0004 FFF7FEFF 		bl	EnvoiMessage
 1635              	.LVL166:
ARM GAS  /tmp/ccss0oyI.s 			page 37


 468:Src/freertos.c ****         srand(time(NULL));
 1636              		.loc 1 468 0
 1637 0008 0020     		movs	r0, #0
 1638 000a FFF7FEFF 		bl	time
 1639              	.LVL167:
 1640 000e FFF7FEFF 		bl	srand
 1641              	.LVL168:
 469:Src/freertos.c ****         a = rand()%256;
 1642              		.loc 1 469 0
 1643 0012 FFF7FEFF 		bl	rand
 1644              	.LVL169:
 1645 0016 0B4C     		ldr	r4, .L168
 1646 0018 0440     		ands	r4, r4, r0
 1647 001a 002C     		cmp	r4, #0
 1648 001c 03DA     		bge	.L164
 1649 001e 013C     		subs	r4, r4, #1
 1650 0020 64F0FF04 		orn	r4, r4, #255
 1651 0024 0134     		adds	r4, r4, #1
 1652              	.L164:
 1653              	.LVL170:
 470:Src/freertos.c ****         if (ReceptionMessage() < a) {
 1654              		.loc 1 470 0
 1655 0026 FFF7FEFF 		bl	ReceptionMessage
 1656              	.LVL171:
 1657 002a A042     		cmp	r0, r4
 1658 002c 04DA     		bge	.L165
 1659              	.LVL172:
 471:Src/freertos.c ****             p = 1;
 472:Src/freertos.c ****             EnvoiMessage(0x50);
 1660              		.loc 1 472 0
 1661 002e 5020     		movs	r0, #80
 1662 0030 FFF7FEFF 		bl	EnvoiMessage
 1663              	.LVL173:
 471:Src/freertos.c ****             p = 1;
 1664              		.loc 1 471 0
 1665 0034 0120     		movs	r0, #1
 1666 0036 10BD     		pop	{r4, pc}
 1667              	.LVL174:
 1668              	.L165:
 473:Src/freertos.c ****         }
 474:Src/freertos.c ****         else {
 475:Src/freertos.c ****             p = 0;
 476:Src/freertos.c ****             EnvoiMessage(0x67);
 1669              		.loc 1 476 0
 1670 0038 6720     		movs	r0, #103
 1671 003a FFF7FEFF 		bl	EnvoiMessage
 1672              	.LVL175:
 475:Src/freertos.c ****             EnvoiMessage(0x67);
 1673              		.loc 1 475 0
 1674 003e 0020     		movs	r0, #0
 1675              	.LVL176:
 477:Src/freertos.c ****         }
 478:Src/freertos.c ****         return(p);
 479:Src/freertos.c ****     }
 1676              		.loc 1 479 0
 1677 0040 10BD     		pop	{r4, pc}
 1678              	.LVL177:
ARM GAS  /tmp/ccss0oyI.s 			page 38


 1679              	.L169:
 1680 0042 00BF     		.align	2
 1681              	.L168:
 1682 0044 FF000080 		.word	-2147483393
 1683              		.cfi_endproc
 1684              	.LFE158:
 1686              		.section	.text.Non,"ax",%progbits
 1687              		.align	2
 1688              		.global	Non
 1689              		.thumb
 1690              		.thumb_func
 1692              	Non:
 1693              	.LFB159:
 480:Src/freertos.c **** 
 481:Src/freertos.c ****     void Non(){
 1694              		.loc 1 481 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698 0000 08B5     		push	{r3, lr}
 1699              	.LCFI33:
 1700              		.cfi_def_cfa_offset 8
 1701              		.cfi_offset 3, -8
 1702              		.cfi_offset 14, -4
 482:Src/freertos.c ****         EnvoiMessage(0x10);
 1703              		.loc 1 482 0
 1704 0002 1020     		movs	r0, #16
 1705 0004 FFF7FEFF 		bl	EnvoiMessage
 1706              	.LVL178:
 1707 0008 08BD     		pop	{r3, pc}
 1708              		.cfi_endproc
 1709              	.LFE159:
 1711 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1712              		.align	2
 1713              		.global	MemeCase
 1714              		.thumb
 1715              		.thumb_func
 1717              	MemeCase:
 1718              	.LFB160:
 483:Src/freertos.c ****     }
 484:Src/freertos.c **** 
 485:Src/freertos.c ****     void MemeCase() {
 1719              		.loc 1 485 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723 0000 08B5     		push	{r3, lr}
 1724              	.LCFI34:
 1725              		.cfi_def_cfa_offset 8
 1726              		.cfi_offset 3, -8
 1727              		.cfi_offset 14, -4
 486:Src/freertos.c ****         EnvoiMessage(0x12);
 1728              		.loc 1 486 0
 1729 0002 1220     		movs	r0, #18
 1730 0004 FFF7FEFF 		bl	EnvoiMessage
 1731              	.LVL179:
 1732 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccss0oyI.s 			page 39


 1733              		.cfi_endproc
 1734              	.LFE160:
 1736 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1737              		.align	2
 1738              		.global	TuEsCoin
 1739              		.thumb
 1740              		.thumb_func
 1742              	TuEsCoin:
 1743              	.LFB161:
 487:Src/freertos.c ****     }
 488:Src/freertos.c **** 
 489:Src/freertos.c ****     void TuEsCoin(){
 1744              		.loc 1 489 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748 0000 08B5     		push	{r3, lr}
 1749              	.LCFI35:
 1750              		.cfi_def_cfa_offset 8
 1751              		.cfi_offset 3, -8
 1752              		.cfi_offset 14, -4
 490:Src/freertos.c ****     EnvoiMessage(0x13);
 1753              		.loc 1 490 0
 1754 0002 1320     		movs	r0, #19
 1755 0004 FFF7FEFF 		bl	EnvoiMessage
 1756              	.LVL180:
 1757 0008 08BD     		pop	{r3, pc}
 1758              		.cfi_endproc
 1759              	.LFE161:
 1761 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1762              		.align	2
 1763              		.global	deplacement
 1764              		.thumb
 1765              		.thumb_func
 1767              	deplacement:
 1768              	.LFB162:
 491:Src/freertos.c **** }
 492:Src/freertos.c **** /* END Fonctions UART */
 493:Src/freertos.c **** 
 494:Src/freertos.c **** /* BEGIN Fonctions IA */
 495:Src/freertos.c **** void deplacement(int distance, int cap)
 496:Src/freertos.c **** {
 1769              		.loc 1 496 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
 1773              		@ link register save eliminated.
 1774              	.LVL181:
 497:Src/freertos.c ****   flag_distance += distance;
 1775              		.loc 1 497 0
 1776 0000 024A     		ldr	r2, .L177
 1777 0002 1368     		ldr	r3, [r2]
 1778 0004 1844     		add	r0, r0, r3
 1779              	.LVL182:
 1780 0006 1060     		str	r0, [r2]
 1781 0008 7047     		bx	lr
 1782              	.L178:
ARM GAS  /tmp/ccss0oyI.s 			page 40


 1783 000a 00BF     		.align	2
 1784              	.L177:
 1785 000c 00000000 		.word	.LANCHOR1
 1786              		.cfi_endproc
 1787              	.LFE162:
 1789              		.section	.text.motor,"ax",%progbits
 1790              		.align	2
 1791              		.global	motor
 1792              		.thumb
 1793              		.thumb_func
 1795              	motor:
 1796              	.LFB163:
 498:Src/freertos.c **** }
 499:Src/freertos.c **** /* END Fonctions IA */
 500:Src/freertos.c **** 
 501:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 502:Src/freertos.c **** 
 503:Src/freertos.c **** /* Hook prototypes */
 504:Src/freertos.c **** 
 505:Src/freertos.c **** /* USER CODE BEGIN Application */
 506:Src/freertos.c **** void motor(void const * argument)
 507:Src/freertos.c **** {
 1797              		.loc 1 507 0
 1798              		.cfi_startproc
 1799              		@ Volatile: function does not return.
 1800              		@ args = 0, pretend = 0, frame = 0
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
 1802              	.LVL183:
 1803 0000 08B5     		push	{r3, lr}
 1804              	.LCFI36:
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 3, -8
 1807              		.cfi_offset 14, -4
 508:Src/freertos.c ****   /* USER CODE BEGIN motor */
 509:Src/freertos.c ****   UNUSED(argument);
 510:Src/freertos.c **** 
 511:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 1808              		.loc 1 511 0
 1809 0002 4FF09040 		mov	r0, #1207959552
 1810              	.LVL184:
 1811 0006 4FF48071 		mov	r1, #256
 1812 000a 0122     		movs	r2, #1
 1813 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1814              	.LVL185:
 512:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 1815              		.loc 1 512 0
 1816 0010 074C     		ldr	r4, .L182
 1817 0012 2046     		mov	r0, r4
 1818 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1819              	.LVL186:
 513:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 1820              		.loc 1 513 0
 1821 0018 2046     		mov	r0, r4
 1822 001a 0021     		movs	r1, #0
 1823 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1824              	.LVL187:
 514:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
ARM GAS  /tmp/ccss0oyI.s 			page 41


 1825              		.loc 1 514 0
 1826 0020 2046     		mov	r0, r4
 1827 0022 0C21     		movs	r1, #12
 1828 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1829              	.LVL188:
 1830              	.L180:
 515:Src/freertos.c **** 
 516:Src/freertos.c ****   /* Infinite loop */
 517:Src/freertos.c ****   for(;;)
 518:Src/freertos.c ****   {
 519:Src/freertos.c ****     gestion_moteurs();
 1831              		.loc 1 519 0 discriminator 1
 1832 0028 FFF7FEFF 		bl	gestion_moteurs
 1833              	.LVL189:
 520:Src/freertos.c ****   }
 1834              		.loc 1 520 0 discriminator 1
 1835 002c FCE7     		b	.L180
 1836              	.L183:
 1837 002e 00BF     		.align	2
 1838              	.L182:
 1839 0030 00000000 		.word	htim3
 1840              		.cfi_endproc
 1841              	.LFE163:
 1843              		.section	.text.uart,"ax",%progbits
 1844              		.align	2
 1845              		.global	uart
 1846              		.thumb
 1847              		.thumb_func
 1849              	uart:
 1850              	.LFB164:
 521:Src/freertos.c ****   /* USER CODE END motor */
 522:Src/freertos.c **** }
 523:Src/freertos.c **** 
 524:Src/freertos.c **** //void adcControl(void const * argument)
 525:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 526:Src/freertos.c ****   /* Infinite loop */
 527:Src/freertos.c ****   /*for(;;)
 528:Src/freertos.c ****   {
 529:Src/freertos.c ****     HAL_ADC_Start_IT(&hadc1);
 530:Src/freertos.c ****     osDelay(1000);
 531:Src/freertos.c ****     if (flag_adc == 1) {
 532:Src/freertos.c ****         printf("Value : %lu\n\r", adcValue);
 533:Src/freertos.c ****         flag_adc = 0;
 534:Src/freertos.c ****     }
 535:Src/freertos.c ****   }*/
 536:Src/freertos.c ****   /* USER CODE END adcControl */
 537:Src/freertos.c **** 
 538:Src/freertos.c **** void uart(void const * argument)
 539:Src/freertos.c **** {
 1851              		.loc 1 539 0
 1852              		.cfi_startproc
 1853              		@ Volatile: function does not return.
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857              	.LVL190:
 1858              	.L185:
ARM GAS  /tmp/ccss0oyI.s 			page 42


 540:Src/freertos.c ****   /* USER CODE BEGIN uart */
 541:Src/freertos.c ****   /* Infinite loop */
 542:Src/freertos.c ****   for(;;)
 543:Src/freertos.c ****   {
 544:Src/freertos.c **** 
 545:Src/freertos.c ****     //pivoter_droite();
 546:Src/freertos.c ****     //ok();
 547:Src/freertos.c ****     //WaitFor(OK);
 548:Src/freertos.c **** 
 549:Src/freertos.c ****    /* WaitFor(OK);
 550:Src/freertos.c ****     pivoter_droite();
 551:Src/freertos.c ****     ok();
 552:Src/freertos.c **** 
 553:Src/freertos.c ****     osDelay(1);*/
 554:Src/freertos.c ****   }
 1859              		.loc 1 554 0 discriminator 1
 1860 0000 FEE7     		b	.L185
 1861              		.cfi_endproc
 1862              	.LFE164:
 1864 0002 00BF     		.section	.text.ia,"ax",%progbits
 1865              		.align	2
 1866              		.global	ia
 1867              		.thumb
 1868              		.thumb_func
 1870              	ia:
 1871              	.LFB165:
 555:Src/freertos.c ****   /* USER CODE END uart */
 556:Src/freertos.c **** }
 557:Src/freertos.c **** 
 558:Src/freertos.c **** void ia(void const * argument)
 559:Src/freertos.c **** {
 1872              		.loc 1 559 0
 1873              		.cfi_startproc
 1874              		@ Volatile: function does not return.
 1875              		@ args = 0, pretend = 0, frame = 0
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877              	.LVL191:
 1878 0000 08B5     		push	{r3, lr}
 1879              	.LCFI37:
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 3, -8
 1882              		.cfi_offset 14, -4
 1883              	.LVL192:
 1884              	.L191:
 560:Src/freertos.c ****   /* USER CODE BEGIN ia */
 561:Src/freertos.c ****   /* Infinite loop */
 562:Src/freertos.c ****   for(;;)
 563:Src/freertos.c ****   {
 564:Src/freertos.c **** 
 565:Src/freertos.c ****     WaitFor(0x06);//robot2
 1885              		.loc 1 565 0
 1886 0002 0620     		movs	r0, #6
 1887 0004 FFF7FEFF 		bl	WaitFor
 1888              	.LVL193:
 566:Src/freertos.c **** 
 567:Src/freertos.c ****     osDelay(500);
 1889              		.loc 1 567 0
ARM GAS  /tmp/ccss0oyI.s 			page 43


 1890 0008 4FF4FA70 		mov	r0, #500
 1891 000c FFF7FEFF 		bl	osDelay
 1892              	.LVL194:
 568:Src/freertos.c ****     printf("Value 1: %d\n\r", flag_distance);
 1893              		.loc 1 568 0
 1894 0010 234C     		ldr	r4, .L193
 1895 0012 2448     		ldr	r0, .L193+4
 1896 0014 2168     		ldr	r1, [r4]
 1897 0016 FFF7FEFF 		bl	printf
 1898              	.LVL195:
 569:Src/freertos.c ****     deplacement(3,0);
 1899              		.loc 1 569 0
 1900 001a 0320     		movs	r0, #3
 1901 001c 0021     		movs	r1, #0
 1902 001e FFF7FEFF 		bl	deplacement
 1903              	.LVL196:
 570:Src/freertos.c ****     printf("Value 2: %d\n\r", flag_distance);
 1904              		.loc 1 570 0
 1905 0022 2148     		ldr	r0, .L193+8
 1906 0024 2168     		ldr	r1, [r4]
 1907 0026 FFF7FEFF 		bl	printf
 1908              	.LVL197:
 571:Src/freertos.c ****     osDelay(500);
 1909              		.loc 1 571 0
 1910 002a 4FF4FA70 		mov	r0, #500
 1911 002e FFF7FEFF 		bl	osDelay
 1912              	.LVL198:
 572:Src/freertos.c ****     printf("Value 3: %d\n\r", flag_distance);
 1913              		.loc 1 572 0
 1914 0032 1E48     		ldr	r0, .L193+12
 1915 0034 2168     		ldr	r1, [r4]
 1916 0036 FFF7FEFF 		bl	printf
 1917              	.LVL199:
 573:Src/freertos.c **** 
 574:Src/freertos.c ****     while(flag_distance != 0)
 1918              		.loc 1 574 0
 1919 003a 06E0     		b	.L187
 1920              	.L188:
 575:Src/freertos.c ****     {
 576:Src/freertos.c ****         printf("Value 3: %d\n\r", flag_distance);
 1921              		.loc 1 576 0
 1922 003c 1B48     		ldr	r0, .L193+12
 1923 003e FFF7FEFF 		bl	printf
 1924              	.LVL200:
 577:Src/freertos.c ****         osDelay(500);
 1925              		.loc 1 577 0
 1926 0042 4FF4FA70 		mov	r0, #500
 1927 0046 FFF7FEFF 		bl	osDelay
 1928              	.LVL201:
 1929              	.L187:
 574:Src/freertos.c ****     {
 1930              		.loc 1 574 0
 1931 004a 154B     		ldr	r3, .L193
 1932 004c 1968     		ldr	r1, [r3]
 1933 004e 0029     		cmp	r1, #0
 1934 0050 F4D1     		bne	.L188
 578:Src/freertos.c ****     }
ARM GAS  /tmp/ccss0oyI.s 			page 44


 579:Src/freertos.c **** 
 580:Src/freertos.c ****     //ok();//robot1
 581:Src/freertos.c **** 
 582:Src/freertos.c ****     osDelay(500);
 1935              		.loc 1 582 0
 1936 0052 4FF4FA70 		mov	r0, #500
 1937 0056 FFF7FEFF 		bl	osDelay
 1938              	.LVL202:
 583:Src/freertos.c ****     printf("Value 1: %d\n\r", flag_distance);
 1939              		.loc 1 583 0
 1940 005a 114C     		ldr	r4, .L193
 1941 005c 1148     		ldr	r0, .L193+4
 1942 005e 2168     		ldr	r1, [r4]
 1943 0060 FFF7FEFF 		bl	printf
 1944              	.LVL203:
 584:Src/freertos.c ****     deplacement(-3,0);
 1945              		.loc 1 584 0
 1946 0064 6FF00200 		mvn	r0, #2
 1947 0068 0021     		movs	r1, #0
 1948 006a FFF7FEFF 		bl	deplacement
 1949              	.LVL204:
 585:Src/freertos.c ****     printf("Value 2: %d\n\r", flag_distance);
 1950              		.loc 1 585 0
 1951 006e 0E48     		ldr	r0, .L193+8
 1952 0070 2168     		ldr	r1, [r4]
 1953 0072 FFF7FEFF 		bl	printf
 1954              	.LVL205:
 586:Src/freertos.c ****     osDelay(500);
 1955              		.loc 1 586 0
 1956 0076 4FF4FA70 		mov	r0, #500
 1957 007a FFF7FEFF 		bl	osDelay
 1958              	.LVL206:
 587:Src/freertos.c ****     printf("Value 3: %d\n\r", flag_distance);
 1959              		.loc 1 587 0
 1960 007e 0B48     		ldr	r0, .L193+12
 1961 0080 2168     		ldr	r1, [r4]
 1962 0082 FFF7FEFF 		bl	printf
 1963              	.LVL207:
 588:Src/freertos.c **** 
 589:Src/freertos.c **** 
 590:Src/freertos.c ****     while(flag_distance != 0)
 1964              		.loc 1 590 0
 1965 0086 06E0     		b	.L189
 1966              	.L190:
 591:Src/freertos.c ****     {
 592:Src/freertos.c ****         printf("Value 3: %d\n\r", flag_distance);
 1967              		.loc 1 592 0
 1968 0088 0848     		ldr	r0, .L193+12
 1969 008a FFF7FEFF 		bl	printf
 1970              	.LVL208:
 593:Src/freertos.c ****         osDelay(500);
 1971              		.loc 1 593 0
 1972 008e 4FF4FA70 		mov	r0, #500
 1973 0092 FFF7FEFF 		bl	osDelay
 1974              	.LVL209:
 1975              	.L189:
 590:Src/freertos.c ****     {
ARM GAS  /tmp/ccss0oyI.s 			page 45


 1976              		.loc 1 590 0
 1977 0096 024B     		ldr	r3, .L193
 1978 0098 1968     		ldr	r1, [r3]
 1979 009a 0029     		cmp	r1, #0
 1980 009c F4D1     		bne	.L190
 1981 009e B0E7     		b	.L191
 1982              	.L194:
 1983              		.align	2
 1984              	.L193:
 1985 00a0 00000000 		.word	.LANCHOR1
 1986 00a4 00000000 		.word	.LC0
 1987 00a8 10000000 		.word	.LC1
 1988 00ac 20000000 		.word	.LC2
 1989              		.cfi_endproc
 1990              	.LFE165:
 1992              		.comm	robot2,12,4
 1993              		.comm	robot1,12,4
 1994              		.global	flag_present
 1995              		.global	flag_cap
 1996              		.global	flag_distance
 1997              		.global	flag_gauche
 1998              		.global	flag_droite
 1999              		.global	flag_bas
 2000              		.global	flag_haut
 2001              		.global	deplacement_fini
 2002              		.global	adcValue
 2003              		.global	flag_adc
 2004              		.section	.bss.flag_present,"aw",%nobits
 2005              		.align	2
 2006              		.set	.LANCHOR4,. + 0
 2009              	flag_present:
 2010 0000 00000000 		.space	4
 2011              		.section	.bss.flag_adc,"aw",%nobits
 2012              		.align	2
 2013              		.set	.LANCHOR3,. + 0
 2016              	flag_adc:
 2017 0000 00000000 		.space	4
 2018              		.section	.bss.flag_gauche,"aw",%nobits
 2019              		.align	2
 2020              		.set	.LANCHOR8,. + 0
 2023              	flag_gauche:
 2024 0000 00000000 		.space	4
 2025              		.section	.bss.flag_droite,"aw",%nobits
 2026              		.align	2
 2027              		.set	.LANCHOR7,. + 0
 2030              	flag_droite:
 2031 0000 00000000 		.space	4
 2032              		.section	.bss.flag_distance,"aw",%nobits
 2033              		.align	2
 2034              		.set	.LANCHOR1,. + 0
 2037              	flag_distance:
 2038 0000 00000000 		.space	4
 2039              		.section	.bss.deplacement_fini,"aw",%nobits
 2040              		.align	2
 2041              		.set	.LANCHOR0,. + 0
 2044              	deplacement_fini:
 2045 0000 00000000 		.space	4
ARM GAS  /tmp/ccss0oyI.s 			page 46


 2046              		.section	.bss.flag_haut,"aw",%nobits
 2047              		.align	2
 2048              		.set	.LANCHOR5,. + 0
 2051              	flag_haut:
 2052 0000 00000000 		.space	4
 2053              		.section	.rodata.str1.4,"aMS",%progbits,1
 2054              		.align	2
 2055              	.LC0:
 2056 0000 56616C75 		.ascii	"Value 1: %d\012\015\000"
 2056      6520313A 
 2056      2025640A 
 2056      0D00
 2057 000e 0000     		.space	2
 2058              	.LC1:
 2059 0010 56616C75 		.ascii	"Value 2: %d\012\015\000"
 2059      6520323A 
 2059      2025640A 
 2059      0D00
 2060 001e 0000     		.space	2
 2061              	.LC2:
 2062 0020 56616C75 		.ascii	"Value 3: %d\012\015\000"
 2062      6520333A 
 2062      2025640A 
 2062      0D00
 2063              		.section	.bss.flag_cap,"aw",%nobits
 2064              		.align	2
 2067              	flag_cap:
 2068 0000 00000000 		.space	4
 2069              		.section	.bss.adcValue,"aw",%nobits
 2070              		.align	2
 2071              		.set	.LANCHOR2,. + 0
 2074              	adcValue:
 2075 0000 00000000 		.space	4
 2076              		.section	.bss.flag_bas,"aw",%nobits
 2077              		.align	2
 2078              		.set	.LANCHOR6,. + 0
 2081              	flag_bas:
 2082 0000 00000000 		.space	4
 2083              		.text
 2084              	.Letext0:
 2085              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2086              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2087              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2088              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2089              		.file 6 "/usr/include/newlib/sys/types.h"
 2090              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2091              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2092              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2093              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2094              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2095              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2096              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2097              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 2098              		.file 15 "/usr/include/newlib/time.h"
 2099              		.file 16 "/usr/include/newlib/stdlib.h"
 2100              		.file 17 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccss0oyI.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccss0oyI.s:21     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccss0oyI.s:26     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccss0oyI.s:62     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccss0oyI.s:67     .text.alumer_droite:0000000000000000 $t
     /tmp/ccss0oyI.s:72     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccss0oyI.s:104    .text.alumer_droite:0000000000000024 $d
     /tmp/ccss0oyI.s:109    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccss0oyI.s:114    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccss0oyI.s:142    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccss0oyI.s:147    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccss0oyI.s:152    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccss0oyI.s:179    .text.eteindre_droite:000000000000001c $d
     /tmp/ccss0oyI.s:184    .text.pwm_max:0000000000000000 $t
     /tmp/ccss0oyI.s:189    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccss0oyI.s:207    .text.pwm_max:0000000000000010 $d
     /tmp/ccss0oyI.s:212    .text.accelerer:0000000000000000 $t
     /tmp/ccss0oyI.s:217    .text.accelerer:0000000000000000 accelerer
     /tmp/ccss0oyI.s:258    .text.accelerer:0000000000000020 $d
     /tmp/ccss0oyI.s:263    .text.deccelerer:0000000000000000 $t
     /tmp/ccss0oyI.s:268    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccss0oyI.s:309    .text.deccelerer:0000000000000020 $d
     /tmp/ccss0oyI.s:314    .text.avancer_robot:0000000000000000 $t
     /tmp/ccss0oyI.s:319    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccss0oyI.s:362    .text.avancer_robot:0000000000000030 $d
     /tmp/ccss0oyI.s:367    .text.reculer_robot:0000000000000000 $t
     /tmp/ccss0oyI.s:372    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccss0oyI.s:412    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccss0oyI.s:417    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccss0oyI.s:460    .text.pivoter_gauche:000000000000002c $d
     /tmp/ccss0oyI.s:465    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccss0oyI.s:470    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccss0oyI.s:513    .text.pivoter_droite:000000000000002c $d
     /tmp/ccss0oyI.s:518    .text.gestion_moteurs:0000000000000000 $t
     /tmp/ccss0oyI.s:523    .text.gestion_moteurs:0000000000000000 gestion_moteurs
     /tmp/ccss0oyI.s:566    .text.gestion_moteurs:000000000000002c $d
     /tmp/ccss0oyI.s:571    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccss0oyI.s:576    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccss0oyI.s:601    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccss0oyI.s:607    .text._write:0000000000000000 $t
     /tmp/ccss0oyI.s:612    .text._write:0000000000000000 _write
     /tmp/ccss0oyI.s:640    .text._write:0000000000000014 $d
     /tmp/ccss0oyI.s:645    .text.distance:0000000000000000 $t
     /tmp/ccss0oyI.s:650    .text.distance:0000000000000000 distance
     /tmp/ccss0oyI.s:789    .text.distance:00000000000000a8 $d
     /tmp/ccss0oyI.s:794    .text.estPresent:0000000000000000 $t
     /tmp/ccss0oyI.s:799    .text.estPresent:0000000000000000 estPresent
     /tmp/ccss0oyI.s:827    .text.estPresent:0000000000000014 $d
     /tmp/ccss0oyI.s:832    .text.EnvoiMessage:0000000000000000 $t
     /tmp/ccss0oyI.s:837    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/ccss0oyI.s:983    .text.EnvoiMessage:00000000000000f8 $d
     /tmp/ccss0oyI.s:988    .text.ReceptionMessage:0000000000000000 $t
     /tmp/ccss0oyI.s:993    .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/ccss0oyI.s:1177   .text.ReceptionMessage:000000000000010c $d
     /tmp/ccss0oyI.s:1183   .text.recoitpos:0000000000000000 $t
     /tmp/ccss0oyI.s:1188   .text.recoitpos:0000000000000000 recoitpos
ARM GAS  /tmp/ccss0oyI.s 			page 48


     /tmp/ccss0oyI.s:1228   .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/ccss0oyI.s:1233   .text.envoipos:0000000000000000 $t
     /tmp/ccss0oyI.s:1238   .text.envoipos:0000000000000000 envoipos
     /tmp/ccss0oyI.s:1267   .text.Traduction:0000000000000000 $t
     /tmp/ccss0oyI.s:1272   .text.Traduction:0000000000000000 Traduction
     /tmp/ccss0oyI.s:1358   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
     /tmp/ccss0oyI.s:1369   .text.WaitFor:0000000000000000 $t
     /tmp/ccss0oyI.s:1374   .text.WaitFor:0000000000000000 WaitFor
     /tmp/ccss0oyI.s:1400   .text.TaPosition:0000000000000000 $t
     /tmp/ccss0oyI.s:1405   .text.TaPosition:0000000000000000 TaPosition
     /tmp/ccss0oyI.s:1425   .text.ok:0000000000000000 $t
     /tmp/ccss0oyI.s:1430   .text.ok:0000000000000000 ok
     /tmp/ccss0oyI.s:1450   .text.Monte:0000000000000000 $t
     /tmp/ccss0oyI.s:1455   .text.Monte:0000000000000000 Monte
     /tmp/ccss0oyI.s:1479   .text.Descend:0000000000000000 $t
     /tmp/ccss0oyI.s:1484   .text.Descend:0000000000000000 Descend
     /tmp/ccss0oyI.s:1508   .text.Droite:0000000000000000 $t
     /tmp/ccss0oyI.s:1513   .text.Droite:0000000000000000 Droite
     /tmp/ccss0oyI.s:1537   .text.Gauche:0000000000000000 $t
     /tmp/ccss0oyI.s:1542   .text.Gauche:0000000000000000 Gauche
     /tmp/ccss0oyI.s:1566   .text.DansUnCoin:0000000000000000 $t
     /tmp/ccss0oyI.s:1571   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/ccss0oyI.s:1591   .text.Trouve:0000000000000000 $t
     /tmp/ccss0oyI.s:1596   .text.Trouve:0000000000000000 Trouve
     /tmp/ccss0oyI.s:1616   .text.Random:0000000000000000 $t
     /tmp/ccss0oyI.s:1621   .text.Random:0000000000000000 Random
     /tmp/ccss0oyI.s:1682   .text.Random:0000000000000044 $d
     /tmp/ccss0oyI.s:1687   .text.Non:0000000000000000 $t
     /tmp/ccss0oyI.s:1692   .text.Non:0000000000000000 Non
     /tmp/ccss0oyI.s:1712   .text.MemeCase:0000000000000000 $t
     /tmp/ccss0oyI.s:1717   .text.MemeCase:0000000000000000 MemeCase
     /tmp/ccss0oyI.s:1737   .text.TuEsCoin:0000000000000000 $t
     /tmp/ccss0oyI.s:1742   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/ccss0oyI.s:1762   .text.deplacement:0000000000000000 $t
     /tmp/ccss0oyI.s:1767   .text.deplacement:0000000000000000 deplacement
     /tmp/ccss0oyI.s:1785   .text.deplacement:000000000000000c $d
     /tmp/ccss0oyI.s:1790   .text.motor:0000000000000000 $t
     /tmp/ccss0oyI.s:1795   .text.motor:0000000000000000 motor
     /tmp/ccss0oyI.s:1839   .text.motor:0000000000000030 $d
     /tmp/ccss0oyI.s:1844   .text.uart:0000000000000000 $t
     /tmp/ccss0oyI.s:1849   .text.uart:0000000000000000 uart
     /tmp/ccss0oyI.s:1865   .text.ia:0000000000000000 $t
     /tmp/ccss0oyI.s:1870   .text.ia:0000000000000000 ia
     /tmp/ccss0oyI.s:1985   .text.ia:00000000000000a0 $d
     /tmp/ccss0oyI.s:2009   .bss.flag_present:0000000000000000 flag_present
     /tmp/ccss0oyI.s:2067   .bss.flag_cap:0000000000000000 flag_cap
     /tmp/ccss0oyI.s:2037   .bss.flag_distance:0000000000000000 flag_distance
     /tmp/ccss0oyI.s:2023   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/ccss0oyI.s:2030   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/ccss0oyI.s:2081   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/ccss0oyI.s:2051   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/ccss0oyI.s:2044   .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccss0oyI.s:2074   .bss.adcValue:0000000000000000 adcValue
     /tmp/ccss0oyI.s:2016   .bss.flag_adc:0000000000000000 flag_adc
     /tmp/ccss0oyI.s:2005   .bss.flag_present:0000000000000000 $d
ARM GAS  /tmp/ccss0oyI.s 			page 49


     /tmp/ccss0oyI.s:2012   .bss.flag_adc:0000000000000000 $d
     /tmp/ccss0oyI.s:2019   .bss.flag_gauche:0000000000000000 $d
     /tmp/ccss0oyI.s:2026   .bss.flag_droite:0000000000000000 $d
     /tmp/ccss0oyI.s:2033   .bss.flag_distance:0000000000000000 $d
     /tmp/ccss0oyI.s:2040   .bss.deplacement_fini:0000000000000000 $d
     /tmp/ccss0oyI.s:2047   .bss.flag_haut:0000000000000000 $d
     /tmp/ccss0oyI.s:2054   .rodata.str1.4:0000000000000000 $d
     /tmp/ccss0oyI.s:2064   .bss.flag_cap:0000000000000000 $d
     /tmp/ccss0oyI.s:2070   .bss.adcValue:0000000000000000 $d
     /tmp/ccss0oyI.s:2077   .bss.flag_bas:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
osDelay
HAL_ADC_GetValue
HAL_UART_Transmit
huart2
huart1
HAL_UART_Receive
HAL_GPIO_TogglePin
time
srand
rand
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
printf
