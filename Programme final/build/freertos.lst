ARM GAS  /tmp/ccYrxLLN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"freertos.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.alumer_gauche,"ax",%progbits
  22              		.align	2
  23              		.global	alumer_gauche
  24              		.thumb
  25              		.thumb_func
  27              	alumer_gauche:
  28              	.LFB129:
  29              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  /tmp/ccYrxLLN.s 			page 2


  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/freertos.c ****   *    this license. 
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #include <time.h>
  59:Src/freertos.c **** #include <stdlib.h>
  60:Src/freertos.c **** 
  61:Src/freertos.c **** #define PWM_MAX 320
  62:Src/freertos.c **** #define DELAY 1000
  63:Src/freertos.c **** #define OK 0x06
  64:Src/freertos.c **** /* USER CODE END Includes */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* USER CODE BEGIN Variables */
  69:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  70:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  71:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  72:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** int flag_adc = 0;
  75:Src/freertos.c **** uint32_t adcValue = 0;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** int deplacement_fini = 0;
  78:Src/freertos.c **** 
  79:Src/freertos.c **** int flag_haut = 0;
  80:Src/freertos.c **** int flag_bas = 0;
  81:Src/freertos.c **** int flag_droite = 0;
  82:Src/freertos.c **** int flag_gauche = 0;
  83:Src/freertos.c **** 
  84:Src/freertos.c **** struct Robot {
  85:Src/freertos.c ****     int posx;
  86:Src/freertos.c ****     int posy;
ARM GAS  /tmp/ccYrxLLN.s 			page 3


  87:Src/freertos.c ****     int orientation;
  88:Src/freertos.c **** };
  89:Src/freertos.c **** 
  90:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  91:Src/freertos.c **** 
  92:Src/freertos.c **** /* USER CODE END Variables */
  93:Src/freertos.c **** 
  94:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  95:Src/freertos.c **** 
  96:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  97:Src/freertos.c **** 
  98:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
  99:Src/freertos.c **** void alumer_gauche(int sens) {
  30              		.loc 1 99 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 100:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  42              		.loc 1 100 0
  43 0002 0546     		mov	r5, r0
  44 0004 064C     		ldr	r4, .L3
  45 0006 B0FA80F2 		clz	r2, r0
  46 000a 5209     		lsrs	r2, r2, #5
  47 000c 0221     		movs	r1, #2
  48 000e 2046     		mov	r0, r4
  49              	.LVL1:
  50 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  51              	.LVL2:
 101:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  52              		.loc 1 101 0
  53 0014 EAB2     		uxtb	r2, r5
  54 0016 0121     		movs	r1, #1
  55 0018 2046     		mov	r0, r4
  56 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  57              	.LVL3:
  58 001e 38BD     		pop	{r3, r4, r5, pc}
  59              	.LVL4:
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00140048 		.word	1207964672
  64              		.cfi_endproc
  65              	.LFE129:
  67              		.section	.text.alumer_droite,"ax",%progbits
  68              		.align	2
  69              		.global	alumer_droite
  70              		.thumb
  71              		.thumb_func
  73              	alumer_droite:
ARM GAS  /tmp/ccYrxLLN.s 			page 4


  74              	.LFB130:
 102:Src/freertos.c **** }
 103:Src/freertos.c **** 
 104:Src/freertos.c **** void alumer_droite(int sens) {
  75              		.loc 1 104 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL5:
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
 105:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  85              		.loc 1 105 0
  86 0002 0446     		mov	r4, r0
  87 0004 B0FA80F2 		clz	r2, r0
  88 0008 5209     		lsrs	r2, r2, #5
  89 000a 4FF40061 		mov	r1, #2048
  90 000e 4FF09040 		mov	r0, #1207959552
  91              	.LVL6:
  92 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL7:
 106:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  94              		.loc 1 106 0
  95 0016 E2B2     		uxtb	r2, r4
  96 0018 2021     		movs	r1, #32
  97 001a 0248     		ldr	r0, .L7
  98 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 100 0020 10BD     		pop	{r4, pc}
 101              	.LVL9:
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 00040048 		.word	1207960576
 106              		.cfi_endproc
 107              	.LFE130:
 109              		.section	.text.eteindre_gauche,"ax",%progbits
 110              		.align	2
 111              		.global	eteindre_gauche
 112              		.thumb
 113              		.thumb_func
 115              	eteindre_gauche:
 116              	.LFB131:
 107:Src/freertos.c **** }
 108:Src/freertos.c **** 
 109:Src/freertos.c **** void eteindre_gauche() {
 117              		.loc 1 109 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
ARM GAS  /tmp/ccYrxLLN.s 			page 5


 125              		.cfi_offset 14, -4
 110:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 126              		.loc 1 110 0
 127 0002 064C     		ldr	r4, .L11
 128 0004 0022     		movs	r2, #0
 129 0006 0221     		movs	r1, #2
 130 0008 2046     		mov	r0, r4
 131 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
 111:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 133              		.loc 1 111 0
 134 000e 0022     		movs	r2, #0
 135 0010 0121     		movs	r1, #1
 136 0012 2046     		mov	r0, r4
 137 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL11:
 139 0018 10BD     		pop	{r4, pc}
 140              	.L12:
 141 001a 00BF     		.align	2
 142              	.L11:
 143 001c 00140048 		.word	1207964672
 144              		.cfi_endproc
 145              	.LFE131:
 147              		.section	.text.eteindre_droite,"ax",%progbits
 148              		.align	2
 149              		.global	eteindre_droite
 150              		.thumb
 151              		.thumb_func
 153              	eteindre_droite:
 154              	.LFB132:
 112:Src/freertos.c **** }
 113:Src/freertos.c **** 
 114:Src/freertos.c **** void eteindre_droite() {
 155              		.loc 1 114 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
 115:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 164              		.loc 1 115 0
 165 0002 0022     		movs	r2, #0
 166 0004 4FF40061 		mov	r1, #2048
 167 0008 4FF09040 		mov	r0, #1207959552
 168 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL12:
 116:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 170              		.loc 1 116 0
 171 0010 0022     		movs	r2, #0
 172 0012 2021     		movs	r1, #32
 173 0014 0148     		ldr	r0, .L15
 174 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL13:
 176 001a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccYrxLLN.s 			page 6


 177              	.L16:
 178              		.align	2
 179              	.L15:
 180 001c 00040048 		.word	1207960576
 181              		.cfi_endproc
 182              	.LFE132:
 184              		.section	.text.pwm_max,"ax",%progbits
 185              		.align	2
 186              		.global	pwm_max
 187              		.thumb
 188              		.thumb_func
 190              	pwm_max:
 191              	.LFB133:
 117:Src/freertos.c **** }
 118:Src/freertos.c **** 
 119:Src/freertos.c **** void pwm_max() {
 192              		.loc 1 119 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 120:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 197              		.loc 1 120 0
 198 0000 034B     		ldr	r3, .L18
 199 0002 1B68     		ldr	r3, [r3]
 200 0004 4FF4A072 		mov	r2, #320
 201 0008 5A63     		str	r2, [r3, #52]
 121:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 202              		.loc 1 121 0
 203 000a 1A64     		str	r2, [r3, #64]
 204 000c 7047     		bx	lr
 205              	.L19:
 206 000e 00BF     		.align	2
 207              	.L18:
 208 0010 00000000 		.word	htim3
 209              		.cfi_endproc
 210              	.LFE133:
 212              		.section	.text.accelerer,"ax",%progbits
 213              		.align	2
 214              		.global	accelerer
 215              		.thumb
 216              		.thumb_func
 218              	accelerer:
 219              	.LFB134:
 122:Src/freertos.c **** }
 123:Src/freertos.c **** 
 124:Src/freertos.c **** void accelerer() {
 220              		.loc 1 124 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
 229              	.LVL14:
ARM GAS  /tmp/ccYrxLLN.s 			page 7


 125:Src/freertos.c ****     int pwm = 0;
 230              		.loc 1 125 0
 231 0002 0024     		movs	r4, #0
 126:Src/freertos.c ****     while (pwm != PWM_MAX) {
 232              		.loc 1 126 0
 233 0004 07E0     		b	.L21
 234              	.LVL15:
 235              	.L22:
 127:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 236              		.loc 1 127 0
 237 0006 064B     		ldr	r3, .L24
 238 0008 1B68     		ldr	r3, [r3]
 239 000a 5C63     		str	r4, [r3, #52]
 128:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 240              		.loc 1 128 0
 241 000c 1C64     		str	r4, [r3, #64]
 129:Src/freertos.c ****         pwm += 20;
 242              		.loc 1 129 0
 243 000e 1434     		adds	r4, r4, #20
 244              	.LVL16:
 130:Src/freertos.c ****         osDelay(50);
 245              		.loc 1 130 0
 246 0010 3220     		movs	r0, #50
 247 0012 FFF7FEFF 		bl	osDelay
 248              	.LVL17:
 249              	.L21:
 126:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 250              		.loc 1 126 0
 251 0016 B4F5A07F 		cmp	r4, #320
 252 001a F4D1     		bne	.L22
 131:Src/freertos.c ****     }
 132:Src/freertos.c **** }
 253              		.loc 1 132 0
 254 001c 10BD     		pop	{r4, pc}
 255              	.LVL18:
 256              	.L25:
 257 001e 00BF     		.align	2
 258              	.L24:
 259 0020 00000000 		.word	htim3
 260              		.cfi_endproc
 261              	.LFE134:
 263              		.section	.text.deccelerer,"ax",%progbits
 264              		.align	2
 265              		.global	deccelerer
 266              		.thumb
 267              		.thumb_func
 269              	deccelerer:
 270              	.LFB135:
 133:Src/freertos.c **** 
 134:Src/freertos.c **** void deccelerer() {
 271              		.loc 1 134 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccYrxLLN.s 			page 8


 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280              	.LVL19:
 135:Src/freertos.c ****     int pwm = PWM_MAX;
 281              		.loc 1 135 0
 282 0002 4FF4A074 		mov	r4, #320
 136:Src/freertos.c ****     while (pwm != 0) {
 283              		.loc 1 136 0
 284 0006 07E0     		b	.L27
 285              	.LVL20:
 286              	.L28:
 137:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 287              		.loc 1 137 0
 288 0008 054B     		ldr	r3, .L30
 289 000a 1B68     		ldr	r3, [r3]
 290 000c 5C63     		str	r4, [r3, #52]
 138:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 291              		.loc 1 138 0
 292 000e 1C64     		str	r4, [r3, #64]
 139:Src/freertos.c ****         pwm -= 20;
 293              		.loc 1 139 0
 294 0010 143C     		subs	r4, r4, #20
 295              	.LVL21:
 140:Src/freertos.c ****         osDelay(50);
 296              		.loc 1 140 0
 297 0012 3220     		movs	r0, #50
 298 0014 FFF7FEFF 		bl	osDelay
 299              	.LVL22:
 300              	.L27:
 136:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 301              		.loc 1 136 0
 302 0018 002C     		cmp	r4, #0
 303 001a F5D1     		bne	.L28
 141:Src/freertos.c ****     }
 142:Src/freertos.c **** }
 304              		.loc 1 142 0
 305 001c 10BD     		pop	{r4, pc}
 306              	.LVL23:
 307              	.L31:
 308 001e 00BF     		.align	2
 309              	.L30:
 310 0020 00000000 		.word	htim3
 311              		.cfi_endproc
 312              	.LFE135:
 314              		.section	.text.reculer_robot,"ax",%progbits
 315              		.align	2
 316              		.global	reculer_robot
 317              		.thumb
 318              		.thumb_func
 320              	reculer_robot:
 321              	.LFB136:
 143:Src/freertos.c **** 
 144:Src/freertos.c **** void reculer_robot() {
 322              		.loc 1 144 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccYrxLLN.s 			page 9


 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 145:Src/freertos.c ****     alumer_droite(1);
 331              		.loc 1 145 0
 332 0002 0120     		movs	r0, #1
 333 0004 FFF7FEFF 		bl	alumer_droite
 334              	.LVL24:
 146:Src/freertos.c ****     alumer_gauche(1);
 335              		.loc 1 146 0
 336 0008 0120     		movs	r0, #1
 337 000a FFF7FEFF 		bl	alumer_gauche
 338              	.LVL25:
 147:Src/freertos.c ****     accelerer();
 339              		.loc 1 147 0
 340 000e FFF7FEFF 		bl	accelerer
 341              	.LVL26:
 148:Src/freertos.c ****     osDelay(1000);
 342              		.loc 1 148 0
 343 0012 4FF47A70 		mov	r0, #1000
 344 0016 FFF7FEFF 		bl	osDelay
 345              	.LVL27:
 149:Src/freertos.c ****     deccelerer();
 346              		.loc 1 149 0
 347 001a FFF7FEFF 		bl	deccelerer
 348              	.LVL28:
 150:Src/freertos.c ****     eteindre_droite();
 349              		.loc 1 150 0
 350 001e FFF7FEFF 		bl	eteindre_droite
 351              	.LVL29:
 151:Src/freertos.c ****     eteindre_gauche();
 352              		.loc 1 151 0
 353 0022 FFF7FEFF 		bl	eteindre_gauche
 354              	.LVL30:
 152:Src/freertos.c ****     deplacement_fini = 1;
 355              		.loc 1 152 0
 356 0026 0122     		movs	r2, #1
 357 0028 014B     		ldr	r3, .L34
 358 002a 1A60     		str	r2, [r3]
 359 002c 08BD     		pop	{r3, pc}
 360              	.L35:
 361 002e 00BF     		.align	2
 362              	.L34:
 363 0030 00000000 		.word	.LANCHOR0
 364              		.cfi_endproc
 365              	.LFE136:
 367              		.section	.text.avancer_robot,"ax",%progbits
 368              		.align	2
 369              		.global	avancer_robot
 370              		.thumb
 371              		.thumb_func
 373              	avancer_robot:
 374              	.LFB137:
 153:Src/freertos.c **** }
 154:Src/freertos.c **** 
ARM GAS  /tmp/ccYrxLLN.s 			page 10


 155:Src/freertos.c **** void avancer_robot() {
 375              		.loc 1 155 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI7:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 156:Src/freertos.c ****     alumer_droite(0);
 384              		.loc 1 156 0
 385 0002 0020     		movs	r0, #0
 386 0004 FFF7FEFF 		bl	alumer_droite
 387              	.LVL31:
 157:Src/freertos.c ****     alumer_gauche(0);
 388              		.loc 1 157 0
 389 0008 0020     		movs	r0, #0
 390 000a FFF7FEFF 		bl	alumer_gauche
 391              	.LVL32:
 158:Src/freertos.c ****     accelerer();
 392              		.loc 1 158 0
 393 000e FFF7FEFF 		bl	accelerer
 394              	.LVL33:
 159:Src/freertos.c ****     osDelay(1000);
 395              		.loc 1 159 0
 396 0012 4FF47A70 		mov	r0, #1000
 397 0016 FFF7FEFF 		bl	osDelay
 398              	.LVL34:
 160:Src/freertos.c ****     deccelerer();
 399              		.loc 1 160 0
 400 001a FFF7FEFF 		bl	deccelerer
 401              	.LVL35:
 161:Src/freertos.c ****     eteindre_droite();
 402              		.loc 1 161 0
 403 001e FFF7FEFF 		bl	eteindre_droite
 404              	.LVL36:
 162:Src/freertos.c ****     eteindre_gauche();
 405              		.loc 1 162 0
 406 0022 FFF7FEFF 		bl	eteindre_gauche
 407              	.LVL37:
 163:Src/freertos.c ****     deplacement_fini = 1;
 408              		.loc 1 163 0
 409 0026 0122     		movs	r2, #1
 410 0028 014B     		ldr	r3, .L38
 411 002a 1A60     		str	r2, [r3]
 412 002c 08BD     		pop	{r3, pc}
 413              	.L39:
 414 002e 00BF     		.align	2
 415              	.L38:
 416 0030 00000000 		.word	.LANCHOR0
 417              		.cfi_endproc
 418              	.LFE137:
 420              		.section	.text.pivoter_gauche,"ax",%progbits
 421              		.align	2
 422              		.global	pivoter_gauche
 423              		.thumb
ARM GAS  /tmp/ccYrxLLN.s 			page 11


 424              		.thumb_func
 426              	pivoter_gauche:
 427              	.LFB138:
 164:Src/freertos.c **** 
 165:Src/freertos.c **** }
 166:Src/freertos.c **** 
 167:Src/freertos.c **** void pivoter_gauche() {
 428              		.loc 1 167 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 08B5     		push	{r3, lr}
 433              	.LCFI8:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 168:Src/freertos.c ****     pwm_max();
 437              		.loc 1 168 0
 438 0002 FFF7FEFF 		bl	pwm_max
 439              	.LVL38:
 169:Src/freertos.c ****     alumer_gauche(1);
 440              		.loc 1 169 0
 441 0006 0120     		movs	r0, #1
 442 0008 FFF7FEFF 		bl	alumer_gauche
 443              	.LVL39:
 170:Src/freertos.c ****     alumer_droite(0);
 444              		.loc 1 170 0
 445 000c 0020     		movs	r0, #0
 446 000e FFF7FEFF 		bl	alumer_droite
 447              	.LVL40:
 171:Src/freertos.c ****     osDelay(230);
 448              		.loc 1 171 0
 449 0012 E620     		movs	r0, #230
 450 0014 FFF7FEFF 		bl	osDelay
 451              	.LVL41:
 172:Src/freertos.c ****     deccelerer();
 452              		.loc 1 172 0
 453 0018 FFF7FEFF 		bl	deccelerer
 454              	.LVL42:
 173:Src/freertos.c ****     eteindre_droite();
 455              		.loc 1 173 0
 456 001c FFF7FEFF 		bl	eteindre_droite
 457              	.LVL43:
 174:Src/freertos.c ****     eteindre_gauche();
 458              		.loc 1 174 0
 459 0020 FFF7FEFF 		bl	eteindre_gauche
 460              	.LVL44:
 175:Src/freertos.c ****     deplacement_fini = 1;
 461              		.loc 1 175 0
 462 0024 0122     		movs	r2, #1
 463 0026 014B     		ldr	r3, .L42
 464 0028 1A60     		str	r2, [r3]
 465 002a 08BD     		pop	{r3, pc}
 466              	.L43:
 467              		.align	2
 468              	.L42:
 469 002c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccYrxLLN.s 			page 12


 470              		.cfi_endproc
 471              	.LFE138:
 473              		.section	.text.pivoter_droite,"ax",%progbits
 474              		.align	2
 475              		.global	pivoter_droite
 476              		.thumb
 477              		.thumb_func
 479              	pivoter_droite:
 480              	.LFB139:
 176:Src/freertos.c **** }
 177:Src/freertos.c **** 
 178:Src/freertos.c **** void pivoter_droite() {
 481              		.loc 1 178 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 179:Src/freertos.c ****     pwm_max();
 490              		.loc 1 179 0
 491 0002 FFF7FEFF 		bl	pwm_max
 492              	.LVL45:
 180:Src/freertos.c ****     alumer_droite(1);
 493              		.loc 1 180 0
 494 0006 0120     		movs	r0, #1
 495 0008 FFF7FEFF 		bl	alumer_droite
 496              	.LVL46:
 181:Src/freertos.c ****     alumer_gauche(0);
 497              		.loc 1 181 0
 498 000c 0020     		movs	r0, #0
 499 000e FFF7FEFF 		bl	alumer_gauche
 500              	.LVL47:
 182:Src/freertos.c ****     osDelay(220);
 501              		.loc 1 182 0
 502 0012 DC20     		movs	r0, #220
 503 0014 FFF7FEFF 		bl	osDelay
 504              	.LVL48:
 183:Src/freertos.c ****     deccelerer();
 505              		.loc 1 183 0
 506 0018 FFF7FEFF 		bl	deccelerer
 507              	.LVL49:
 184:Src/freertos.c ****     eteindre_droite();
 508              		.loc 1 184 0
 509 001c FFF7FEFF 		bl	eteindre_droite
 510              	.LVL50:
 185:Src/freertos.c ****     eteindre_gauche();
 511              		.loc 1 185 0
 512 0020 FFF7FEFF 		bl	eteindre_gauche
 513              	.LVL51:
 186:Src/freertos.c ****     deplacement_fini = 1;
 514              		.loc 1 186 0
 515 0024 0122     		movs	r2, #1
 516 0026 014B     		ldr	r3, .L46
 517 0028 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccYrxLLN.s 			page 13


 518 002a 08BD     		pop	{r3, pc}
 519              	.L47:
 520              		.align	2
 521              	.L46:
 522 002c 00000000 		.word	.LANCHOR0
 523              		.cfi_endproc
 524              	.LFE139:
 526              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 527              		.align	2
 528              		.global	HAL_ADC_ConvCpltCallback
 529              		.thumb
 530              		.thumb_func
 532              	HAL_ADC_ConvCpltCallback:
 533              	.LFB140:
 187:Src/freertos.c **** }
 188:Src/freertos.c **** /* END Fonctions pour les moteurs */
 189:Src/freertos.c **** 
 190:Src/freertos.c **** /* BEGIN Fonctions ADC */
 191:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 534              		.loc 1 191 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL52:
 539 0000 08B5     		push	{r3, lr}
 540              	.LCFI10:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 192:Src/freertos.c ****     UNUSED(hadc);
 193:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 544              		.loc 1 193 0
 545 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 546              	.LVL53:
 547 0006 034B     		ldr	r3, .L50
 548 0008 1860     		str	r0, [r3]
 194:Src/freertos.c ****     flag_adc = 1;
 549              		.loc 1 194 0
 550 000a 0122     		movs	r2, #1
 551 000c 024B     		ldr	r3, .L50+4
 552 000e 1A60     		str	r2, [r3]
 553 0010 08BD     		pop	{r3, pc}
 554              	.L51:
 555 0012 00BF     		.align	2
 556              	.L50:
 557 0014 00000000 		.word	.LANCHOR1
 558 0018 00000000 		.word	.LANCHOR2
 559              		.cfi_endproc
 560              	.LFE140:
 562              		.section	.text._write,"ax",%progbits
 563              		.align	2
 564              		.global	_write
 565              		.thumb
 566              		.thumb_func
 568              	_write:
 569              	.LFB141:
 195:Src/freertos.c **** }
ARM GAS  /tmp/ccYrxLLN.s 			page 14


 196:Src/freertos.c **** 
 197:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 570              		.loc 1 197 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              	.LVL54:
 575 0000 10B5     		push	{r4, lr}
 576              	.LCFI11:
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 4, -8
 579              		.cfi_offset 14, -4
 580 0002 1446     		mov	r4, r2
 198:Src/freertos.c ****     UNUSED(file);
 199:Src/freertos.c **** 
 200:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 581              		.loc 1 200 0
 582 0004 42F21073 		movw	r3, #10000
 583 0008 92B2     		uxth	r2, r2
 584              	.LVL55:
 585 000a 0248     		ldr	r0, .L54
 586              	.LVL56:
 587 000c FFF7FEFF 		bl	HAL_UART_Transmit
 588              	.LVL57:
 201:Src/freertos.c ****     return len;
 202:Src/freertos.c **** }
 589              		.loc 1 202 0
 590 0010 2046     		mov	r0, r4
 591 0012 10BD     		pop	{r4, pc}
 592              	.LVL58:
 593              	.L55:
 594              		.align	2
 595              	.L54:
 596 0014 00000000 		.word	huart2
 597              		.cfi_endproc
 598              	.LFE141:
 600              		.section	.text.EnvoiMessage,"ax",%progbits
 601              		.align	2
 602              		.global	EnvoiMessage
 603              		.thumb
 604              		.thumb_func
 606              	EnvoiMessage:
 607              	.LFB142:
 203:Src/freertos.c **** /* END Fonctions ADC */
 204:Src/freertos.c **** 
 205:Src/freertos.c **** /* BEGIN Fonctions UART */
 206:Src/freertos.c **** void EnvoiMessage(uint8_t data){
 608              		.loc 1 206 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 8
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL59:
 613 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 614              	.LCFI12:
 615              		.cfi_def_cfa_offset 32
 616              		.cfi_offset 4, -32
 617              		.cfi_offset 5, -28
ARM GAS  /tmp/ccYrxLLN.s 			page 15


 618              		.cfi_offset 6, -24
 619              		.cfi_offset 7, -20
 620              		.cfi_offset 8, -16
 621              		.cfi_offset 9, -12
 622              		.cfi_offset 10, -8
 623              		.cfi_offset 14, -4
 624 0004 82B0     		sub	sp, sp, #8
 625              	.LCFI13:
 626              		.cfi_def_cfa_offset 40
 207:Src/freertos.c ****     uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit, k, 
 208:Src/freertos.c **** 
 209:Src/freertos.c ****     eun = (data & 0x01);
 627              		.loc 1 209 0
 628 0006 00F00107 		and	r7, r0, #1
 629              	.LVL60:
 210:Src/freertos.c ****     edeux = (data & 0x02)/2;
 630              		.loc 1 210 0
 631 000a C0F34005 		ubfx	r5, r0, #1, #1
 632              	.LVL61:
 211:Src/freertos.c ****     equatre =(data & 0x04)/4;
 633              		.loc 1 211 0
 634 000e 00F00403 		and	r3, r0, #4
 635 0012 DBB2     		uxtb	r3, r3
 636 0014 0033     		adds	r3, r3, #0
 637 0016 18BF     		it	ne
 638 0018 0123     		movne	r3, #1
 639              	.LVL62:
 212:Src/freertos.c ****     ehuit = (data & 0x08)/8;
 640              		.loc 1 212 0
 641 001a 00F00801 		and	r1, r0, #8
 642 001e C9B2     		uxtb	r1, r1
 643 0020 C910     		asrs	r1, r1, #3
 644 0022 CEB2     		uxtb	r6, r1
 645              	.LVL63:
 213:Src/freertos.c ****     eseize = (data & 0x10)/16;
 646              		.loc 1 213 0
 647 0024 00F01004 		and	r4, r0, #16
 648 0028 E4B2     		uxtb	r4, r4
 649 002a 2411     		asrs	r4, r4, #4
 650 002c 5FFA84F8 		uxtb	r8, r4
 651              	.LVL64:
 214:Src/freertos.c ****     etrentedeux = (data & 0x20)/32;
 652              		.loc 1 214 0
 653 0030 00F02002 		and	r2, r0, #32
 654 0034 D2B2     		uxtb	r2, r2
 655 0036 0032     		adds	r2, r2, #0
 656 0038 18BF     		it	ne
 657 003a 0122     		movne	r2, #1
 658              	.LVL65:
 215:Src/freertos.c ****     esoixantequatre = (data & 0x40)/64;
 659              		.loc 1 215 0
 660 003c 00F04009 		and	r9, r0, #64
 661 0040 5FFA89F9 		uxtb	r9, r9
 662 0044 4FEAA919 		asr	r9, r9, #6
 663 0048 5FFA89FC 		uxtb	ip, r9
 664              	.LVL66:
 216:Src/freertos.c ****     ecentvingthuit = (data & 0x80)/128;
ARM GAS  /tmp/ccYrxLLN.s 			page 16


 665              		.loc 1 216 0
 666 004c 00F08000 		and	r0, r0, #128
 667              	.LVL67:
 668 0050 0030     		adds	r0, r0, #0
 669 0052 18BF     		it	ne
 670 0054 0120     		movne	r0, #1
 671              	.LVL68:
 217:Src/freertos.c **** 
 218:Src/freertos.c ****     b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequatre^e
 672              		.loc 1 218 0
 673 0056 82EA000A 		eor	r10, r2, r0
 674 005a 8CEA000E 		eor	lr, ip, r0
 675 005e 0EEB4A0E 		add	lr, lr, r10, lsl #1
 676 0062 82EA0C0C 		eor	ip, r2, ip
 677              	.LVL69:
 678 0066 0CEB4E0E 		add	lr, ip, lr, lsl #1
 679 006a 00EB4E00 		add	r0, r0, lr, lsl #1
 680              	.LVL70:
 681 006e 09EB4000 		add	r0, r9, r0, lsl #1
 682 0072 02EB4000 		add	r0, r2, r0, lsl #1
 683 0076 8DF80700 		strb	r0, [sp, #7]
 219:Src/freertos.c ****     k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + equatr
 684              		.loc 1 219 0
 685 007a 83EA0800 		eor	r0, r3, r8
 686 007e 86EA0802 		eor	r2, r6, r8
 687              	.LVL71:
 688 0082 02EB4002 		add	r2, r2, r0, lsl #1
 689 0086 5E40     		eors	r6, r6, r3
 690              	.LVL72:
 691 0088 06EB4206 		add	r6, r6, r2, lsl #1
 692 008c 04EB4606 		add	r6, r4, r6, lsl #1
 693 0090 01EB4601 		add	r1, r1, r6, lsl #1
 694              	.LVL73:
 695 0094 03EB4103 		add	r3, r3, r1, lsl #1
 696              	.LVL74:
 697 0098 8DF80630 		strb	r3, [sp, #6]
 698 009c EBB2     		uxtb	r3, r5
 220:Src/freertos.c ****     z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 699              		.loc 1 220 0
 700 009e 03EB4702 		add	r2, r3, r7, lsl #1
 701 00a2 7D40     		eors	r5, r5, r7
 702              	.LVL75:
 703 00a4 05EB4205 		add	r5, r5, r2, lsl #1
 704 00a8 03EB8505 		add	r5, r3, r5, lsl #2
 705 00ac 07EB4507 		add	r7, r7, r5, lsl #1
 706              	.LVL76:
 707 00b0 8DF80570 		strb	r7, [sp, #5]
 221:Src/freertos.c **** 
 222:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 708              		.loc 1 222 0
 709 00b4 124C     		ldr	r4, .L64
 710 00b6 4EF6EE63 		movw	r3, #61166
 711              	.LVL77:
 712 00ba 0122     		movs	r2, #1
 713 00bc 0DF10701 		add	r1, sp, #7
 714 00c0 2046     		mov	r0, r4
 715 00c2 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccYrxLLN.s 			page 17


 716              	.LVL78:
 223:Src/freertos.c ****     osDelay(2);
 717              		.loc 1 223 0
 718 00c6 0220     		movs	r0, #2
 719 00c8 FFF7FEFF 		bl	osDelay
 720              	.LVL79:
 224:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 721              		.loc 1 224 0
 722 00cc 4EF6EE63 		movw	r3, #61166
 723 00d0 0122     		movs	r2, #1
 724 00d2 0DF10601 		add	r1, sp, #6
 725 00d6 2046     		mov	r0, r4
 726 00d8 FFF7FEFF 		bl	HAL_UART_Transmit
 727              	.LVL80:
 225:Src/freertos.c ****     osDelay(2);
 728              		.loc 1 225 0
 729 00dc 0220     		movs	r0, #2
 730 00de FFF7FEFF 		bl	osDelay
 731              	.LVL81:
 226:Src/freertos.c ****     HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 732              		.loc 1 226 0
 733 00e2 4EF6EE63 		movw	r3, #61166
 734 00e6 0122     		movs	r2, #1
 735 00e8 0DF10501 		add	r1, sp, #5
 736 00ec 2046     		mov	r0, r4
 737 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 738              	.LVL82:
 227:Src/freertos.c ****     osDelay(2);
 739              		.loc 1 227 0
 740 00f2 0220     		movs	r0, #2
 741 00f4 FFF7FEFF 		bl	osDelay
 742              	.LVL83:
 228:Src/freertos.c **** }
 743              		.loc 1 228 0
 744 00f8 02B0     		add	sp, sp, #8
 745              	.LCFI14:
 746              		.cfi_def_cfa_offset 32
 747              		@ sp needed
 748 00fa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 749              	.LVL84:
 750              	.L65:
 751 00fe 00BF     		.align	2
 752              	.L64:
 753 0100 00000000 		.word	huart1
 754              		.cfi_endproc
 755              	.LFE142:
 757              		.section	.text.ReceptionMessage,"ax",%progbits
 758              		.align	2
 759              		.global	ReceptionMessage
 760              		.thumb
 761              		.thumb_func
 763              	ReceptionMessage:
 764              	.LFB143:
 229:Src/freertos.c **** 
 230:Src/freertos.c **** int ReceptionMessage(){
 765              		.loc 1 230 0
 766              		.cfi_startproc
ARM GAS  /tmp/ccYrxLLN.s 			page 18


 767              		@ args = 0, pretend = 0, frame = 8
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 30B5     		push	{r4, r5, lr}
 770              	.LCFI15:
 771              		.cfi_def_cfa_offset 12
 772              		.cfi_offset 4, -12
 773              		.cfi_offset 5, -8
 774              		.cfi_offset 14, -4
 775 0002 83B0     		sub	sp, sp, #12
 776              	.LCFI16:
 777              		.cfi_def_cfa_offset 24
 231:Src/freertos.c ****     uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 232:Src/freertos.c ****     uint8_t rec[3];
 233:Src/freertos.c ****     HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 778              		.loc 1 233 0
 779 0004 224C     		ldr	r4, .L72
 780 0006 4EF6EE63 		movw	r3, #61166
 781 000a 0122     		movs	r2, #1
 782 000c 0DF10701 		add	r1, sp, #7
 783 0010 2046     		mov	r0, r4
 784 0012 FFF7FEFF 		bl	HAL_UART_Receive
 785              	.LVL85:
 234:Src/freertos.c ****     HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
 786              		.loc 1 234 0
 787 0016 4EF6EE63 		movw	r3, #61166
 788 001a 0122     		movs	r2, #1
 789 001c 0DF10601 		add	r1, sp, #6
 790 0020 2046     		mov	r0, r4
 791 0022 FFF7FEFF 		bl	HAL_UART_Receive
 792              	.LVL86:
 235:Src/freertos.c ****     HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 793              		.loc 1 235 0
 794 0026 4EF6EE63 		movw	r3, #61166
 795 002a 0122     		movs	r2, #1
 796 002c 0DF10501 		add	r1, sp, #5
 797 0030 2046     		mov	r0, r4
 798 0032 FFF7FEFF 		bl	HAL_UART_Receive
 799              	.LVL87:
 236:Src/freertos.c **** 
 237:Src/freertos.c ****     rec[0] = r;
 800              		.loc 1 237 0
 801 0036 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 238:Src/freertos.c ****     rec[1] = m;
 802              		.loc 1 238 0
 803 003a 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 239:Src/freertos.c ****     rec[2] = n;
 804              		.loc 1 239 0
 805 003e 9DF80550 		ldrb	r5, [sp, #5]	@ zero_extendqisi2
 806              	.LVL88:
 240:Src/freertos.c ****     ok = 1;
 241:Src/freertos.c ****     for (i =0; i<3; i++) {
 807              		.loc 1 241 0
 808 0042 0023     		movs	r3, #0
 809 0044 01E0     		b	.L67
 810              	.LVL89:
 811              	.L68:
 812 0046 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccYrxLLN.s 			page 19


 813              	.LVL90:
 814 0048 DBB2     		uxtb	r3, r3
 815              	.LVL91:
 816              	.L67:
 817              		.loc 1 241 0 is_stmt 0 discriminator 1
 818 004a 022B     		cmp	r3, #2
 819 004c FBD9     		bls	.L68
 242:Src/freertos.c ****         run = (rec[i] & 0x01);
 243:Src/freertos.c ****         rdeux = (rec[i] & 0x02)/2;
 244:Src/freertos.c ****         rquatre =(rec[i] & 0x04)/4;
 245:Src/freertos.c ****         rhuit = (rec[i] & 0x08)/8;
 246:Src/freertos.c ****         rseize = (rec[i] & 0x10)/16;
 247:Src/freertos.c ****         rtrentedeux = (rec[i] & 0x20)/32;
 248:Src/freertos.c ****         if ((run^rdeux) != rhuit) ok =0;
 249:Src/freertos.c ****         if ((rdeux^rquatre) != rseize) ok =0;
 250:Src/freertos.c ****         if ((rquatre^run) != rtrentedeux) ok = 0;
 251:Src/freertos.c ****     }
 252:Src/freertos.c ****     r =  (r & 0x07)*32;
 820              		.loc 1 252 0 is_stmt 1
 821 004e 01F00703 		and	r3, r1, #7
 822              	.LVL92:
 823 0052 5901     		lsls	r1, r3, #5
 824 0054 8DF80710 		strb	r1, [sp, #7]
 253:Src/freertos.c ****     m =  (m & 0x07)*4;
 825              		.loc 1 253 0
 826 0058 02F00702 		and	r2, r2, #7
 827 005c 9300     		lsls	r3, r2, #2
 828 005e 8DF80630 		strb	r3, [sp, #6]
 254:Src/freertos.c ****     n =  (n & 0x07);
 829              		.loc 1 254 0
 830 0062 05F00705 		and	r5, r5, #7
 831 0066 8DF80550 		strb	r5, [sp, #5]
 255:Src/freertos.c ****     v =  r + m + n; ok = 1;
 832              		.loc 1 255 0
 833 006a 0B44     		add	r3, r3, r1
 834 006c 1D44     		add	r5, r5, r3
 835 006e EDB2     		uxtb	r5, r5
 836              	.LVL93:
 837              	.LBB2:
 256:Src/freertos.c ****     if (ok == 1) {
 257:Src/freertos.c ****         for (int i = 0; i<5; i++) {
 838              		.loc 1 257 0
 839 0070 0024     		movs	r4, #0
 840 0072 08E0     		b	.L69
 841              	.LVL94:
 842              	.L70:
 258:Src/freertos.c ****             HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 843              		.loc 1 258 0 discriminator 3
 844 0074 4021     		movs	r1, #64
 845 0076 0748     		ldr	r0, .L72+4
 846 0078 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 847              	.LVL95:
 259:Src/freertos.c ****             osDelay(500);
 848              		.loc 1 259 0 discriminator 3
 849 007c 4FF4FA70 		mov	r0, #500
 850 0080 FFF7FEFF 		bl	osDelay
 851              	.LVL96:
ARM GAS  /tmp/ccYrxLLN.s 			page 20


 257:Src/freertos.c ****             HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 852              		.loc 1 257 0 discriminator 3
 853 0084 0134     		adds	r4, r4, #1
 854              	.LVL97:
 855              	.L69:
 257:Src/freertos.c ****             HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 856              		.loc 1 257 0 is_stmt 0 discriminator 1
 857 0086 042C     		cmp	r4, #4
 858 0088 F4DD     		ble	.L70
 859              	.LBE2:
 260:Src/freertos.c ****         }
 261:Src/freertos.c ****         return(v);
 262:Src/freertos.c ****     }
 263:Src/freertos.c ****     else return(0);
 264:Src/freertos.c **** }
 860              		.loc 1 264 0 is_stmt 1
 861 008a 2846     		mov	r0, r5
 862 008c 03B0     		add	sp, sp, #12
 863              	.LCFI17:
 864              		.cfi_def_cfa_offset 12
 865              		@ sp needed
 866 008e 30BD     		pop	{r4, r5, pc}
 867              	.LVL98:
 868              	.L73:
 869              		.align	2
 870              	.L72:
 871 0090 00000000 		.word	huart1
 872 0094 00040048 		.word	1207960576
 873              		.cfi_endproc
 874              	.LFE143:
 876              		.section	.text.recoitpos,"ax",%progbits
 877              		.align	2
 878              		.global	recoitpos
 879              		.thumb
 880              		.thumb_func
 882              	recoitpos:
 883              	.LFB144:
 265:Src/freertos.c **** 
 266:Src/freertos.c **** void recoitpos(){
 884              		.loc 1 266 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888 0000 38B5     		push	{r3, r4, r5, lr}
 889              	.LCFI18:
 890              		.cfi_def_cfa_offset 16
 891              		.cfi_offset 3, -16
 892              		.cfi_offset 4, -12
 893              		.cfi_offset 5, -8
 894              		.cfi_offset 14, -4
 267:Src/freertos.c ****     uint8_t a, x, y, c;
 268:Src/freertos.c ****     a = ReceptionMessage();
 895              		.loc 1 268 0
 896 0002 FFF7FEFF 		bl	ReceptionMessage
 897              	.LVL99:
 898 0006 C0B2     		uxtb	r0, r0
 899              	.LVL100:
ARM GAS  /tmp/ccYrxLLN.s 			page 21


 269:Src/freertos.c ****     x = a & 0xF0;
 900              		.loc 1 269 0
 901 0008 00F0F005 		and	r5, r0, #240
 902              	.LVL101:
 270:Src/freertos.c ****     y = a & 0x0F;
 903              		.loc 1 270 0
 904 000c 00F00F04 		and	r4, r0, #15
 905              	.LVL102:
 271:Src/freertos.c ****     c = ReceptionMessage();
 906              		.loc 1 271 0
 907 0010 FFF7FEFF 		bl	ReceptionMessage
 908              	.LVL103:
 272:Src/freertos.c ****     robot2.posx = x;
 909              		.loc 1 272 0
 910 0014 024B     		ldr	r3, .L76
 911 0016 1D60     		str	r5, [r3]
 273:Src/freertos.c ****     robot2.posy = y;
 912              		.loc 1 273 0
 913 0018 5C60     		str	r4, [r3, #4]
 274:Src/freertos.c ****     robot2.orientation = c;
 914              		.loc 1 274 0
 915 001a C0B2     		uxtb	r0, r0
 916 001c 9860     		str	r0, [r3, #8]
 917 001e 38BD     		pop	{r3, r4, r5, pc}
 918              	.LVL104:
 919              	.L77:
 920              		.align	2
 921              	.L76:
 922 0020 00000000 		.word	robot2
 923              		.cfi_endproc
 924              	.LFE144:
 926              		.section	.text.envoipos,"ax",%progbits
 927              		.align	2
 928              		.global	envoipos
 929              		.thumb
 930              		.thumb_func
 932              	envoipos:
 933              	.LFB145:
 275:Src/freertos.c **** }
 276:Src/freertos.c **** 
 277:Src/freertos.c **** void envoipos(uint8_t x, uint8_t y , uint8_t c){
 934              		.loc 1 277 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              	.LVL105:
 939 0000 10B5     		push	{r4, lr}
 940              	.LCFI19:
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 1446     		mov	r4, r2
 278:Src/freertos.c ****      x = x*16 + y;
 945              		.loc 1 278 0
 946 0004 0001     		lsls	r0, r0, #4
 947              	.LVL106:
 948 0006 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/ccYrxLLN.s 			page 22


 949 0008 0844     		add	r0, r0, r1
 950              	.LVL107:
 279:Src/freertos.c ****      EnvoiMessage(x);
 951              		.loc 1 279 0
 952 000a C0B2     		uxtb	r0, r0
 953 000c FFF7FEFF 		bl	EnvoiMessage
 954              	.LVL108:
 280:Src/freertos.c ****      EnvoiMessage(c);
 955              		.loc 1 280 0
 956 0010 2046     		mov	r0, r4
 957 0012 FFF7FEFF 		bl	EnvoiMessage
 958              	.LVL109:
 959 0016 10BD     		pop	{r4, pc}
 960              		.cfi_endproc
 961              	.LFE145:
 963              		.section	.text.Traduction,"ax",%progbits
 964              		.align	2
 965              		.global	Traduction
 966              		.thumb
 967              		.thumb_func
 969              	Traduction:
 970              	.LFB146:
 281:Src/freertos.c **** }
 282:Src/freertos.c **** 
 283:Src/freertos.c **** void Traduction(uint8_t msg){
 971              		.loc 1 283 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              	.LVL110:
 976 0000 10B5     		push	{r4, lr}
 977              	.LCFI20:
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 4, -8
 980              		.cfi_offset 14, -4
 981 0002 0446     		mov	r4, r0
 284:Src/freertos.c ****     if (msg == 0x05) {
 982              		.loc 1 284 0
 983 0004 0528     		cmp	r0, #5
 984 0006 05D1     		bne	.L81
 285:Src/freertos.c ****        envoipos(robot1.posx, robot1.posy, robot1.orientation);
 985              		.loc 1 285 0
 986 0008 174B     		ldr	r3, .L88
 987 000a 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 988 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 989 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 990              	.LVL111:
 991 0010 FFF7FEFF 		bl	envoipos
 992              	.LVL112:
 993              	.L81:
 286:Src/freertos.c ****     }
 287:Src/freertos.c **** 
 288:Src/freertos.c ****     if (msg == 0x06) {
 289:Src/freertos.c **** 
 290:Src/freertos.c ****     }
 291:Src/freertos.c **** 
 292:Src/freertos.c ****     if (msg == 0x07) {
ARM GAS  /tmp/ccYrxLLN.s 			page 23


 994              		.loc 1 292 0
 995 0014 072C     		cmp	r4, #7
 996 0016 02D1     		bne	.L82
 293:Src/freertos.c ****         flag_haut = 1;
 997              		.loc 1 293 0
 998 0018 0122     		movs	r2, #1
 999 001a 144B     		ldr	r3, .L88+4
 1000 001c 1A60     		str	r2, [r3]
 1001              	.L82:
 294:Src/freertos.c ****     }
 295:Src/freertos.c **** 
 296:Src/freertos.c ****     if (msg == 0x08) {
 1002              		.loc 1 296 0
 1003 001e 082C     		cmp	r4, #8
 1004 0020 02D1     		bne	.L83
 297:Src/freertos.c ****         flag_bas = 1;
 1005              		.loc 1 297 0
 1006 0022 0122     		movs	r2, #1
 1007 0024 124B     		ldr	r3, .L88+8
 1008 0026 1A60     		str	r2, [r3]
 1009              	.L83:
 298:Src/freertos.c ****     }
 299:Src/freertos.c **** 
 300:Src/freertos.c ****     if (msg == 0x09) {
 1010              		.loc 1 300 0
 1011 0028 092C     		cmp	r4, #9
 1012 002a 02D1     		bne	.L84
 301:Src/freertos.c ****         flag_droite = 1;
 1013              		.loc 1 301 0
 1014 002c 0122     		movs	r2, #1
 1015 002e 114B     		ldr	r3, .L88+12
 1016 0030 1A60     		str	r2, [r3]
 1017              	.L84:
 302:Src/freertos.c ****     }
 303:Src/freertos.c **** 
 304:Src/freertos.c ****     if (msg == 0x0A) {
 1018              		.loc 1 304 0
 1019 0032 0A2C     		cmp	r4, #10
 1020 0034 02D1     		bne	.L85
 305:Src/freertos.c ****         flag_gauche = 1;
 1021              		.loc 1 305 0
 1022 0036 0122     		movs	r2, #1
 1023 0038 0F4B     		ldr	r3, .L88+16
 1024 003a 1A60     		str	r2, [r3]
 1025              	.L85:
 306:Src/freertos.c ****     }
 307:Src/freertos.c **** 
 308:Src/freertos.c ****     if (msg == 0x0B) {
 309:Src/freertos.c ****     }
 310:Src/freertos.c **** 
 311:Src/freertos.c ****     if (msg == 0x0C) {
 312:Src/freertos.c ****     }
 313:Src/freertos.c **** 
 314:Src/freertos.c ****     if (msg == 0x0D) {
 1026              		.loc 1 314 0
 1027 003c 0D2C     		cmp	r4, #13
 1028 003e 12D1     		bne	.L80
ARM GAS  /tmp/ccYrxLLN.s 			page 24


 1029              	.LBB3:
 315:Src/freertos.c ****         uint8_t a;
 316:Src/freertos.c ****         srand(time(NULL));
 1030              		.loc 1 316 0
 1031 0040 0020     		movs	r0, #0
 1032 0042 FFF7FEFF 		bl	time
 1033              	.LVL113:
 1034 0046 FFF7FEFF 		bl	srand
 1035              	.LVL114:
 317:Src/freertos.c ****         a = rand()%100;
 1036              		.loc 1 317 0
 1037 004a FFF7FEFF 		bl	rand
 1038              	.LVL115:
 1039 004e 0B4B     		ldr	r3, .L88+20
 1040 0050 83FB0032 		smull	r3, r2, r3, r0
 1041 0054 C317     		asrs	r3, r0, #31
 1042 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1043 005a 6422     		movs	r2, #100
 1044 005c 02FB1303 		mls	r3, r2, r3, r0
 1045              	.LVL116:
 318:Src/freertos.c ****         EnvoiMessage(a);
 1046              		.loc 1 318 0
 1047 0060 D8B2     		uxtb	r0, r3
 1048 0062 FFF7FEFF 		bl	EnvoiMessage
 1049              	.LVL117:
 1050              	.L80:
 1051 0066 10BD     		pop	{r4, pc}
 1052              	.L89:
 1053              		.align	2
 1054              	.L88:
 1055 0068 00000000 		.word	robot1
 1056 006c 00000000 		.word	.LANCHOR3
 1057 0070 00000000 		.word	.LANCHOR4
 1058 0074 00000000 		.word	.LANCHOR5
 1059 0078 00000000 		.word	.LANCHOR6
 1060 007c 1F85EB51 		.word	1374389535
 1061              	.LBE3:
 1062              		.cfi_endproc
 1063              	.LFE146:
 1065              		.section	.text.WaitFor,"ax",%progbits
 1066              		.align	2
 1067              		.global	WaitFor
 1068              		.thumb
 1069              		.thumb_func
 1071              	WaitFor:
 1072              	.LFB147:
 319:Src/freertos.c ****     }
 320:Src/freertos.c **** 
 321:Src/freertos.c ****     if (msg == 0x10) {
 322:Src/freertos.c ****     }
 323:Src/freertos.c **** 
 324:Src/freertos.c ****     if (msg == 0x11) {
 325:Src/freertos.c ****     }
 326:Src/freertos.c **** 
 327:Src/freertos.c ****     if (msg == 0x12) {
 328:Src/freertos.c ****     }
 329:Src/freertos.c **** 
ARM GAS  /tmp/ccYrxLLN.s 			page 25


 330:Src/freertos.c ****     if (msg == 0x13) {
 331:Src/freertos.c ****     }
 332:Src/freertos.c **** }
 333:Src/freertos.c **** 
 334:Src/freertos.c **** void WaitFor(uint8_t z) {
 1073              		.loc 1 334 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077              	.LVL118:
 1078 0000 10B5     		push	{r4, lr}
 1079              	.LCFI21:
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 4, -8
 1082              		.cfi_offset 14, -4
 1083 0002 0446     		mov	r4, r0
 1084              	.LVL119:
 1085              	.L91:
 335:Src/freertos.c ****     while (z != ReceptionMessage()) ;
 1086              		.loc 1 335 0 discriminator 1
 1087 0004 FFF7FEFF 		bl	ReceptionMessage
 1088              	.LVL120:
 1089 0008 8442     		cmp	r4, r0
 1090 000a FBD1     		bne	.L91
 336:Src/freertos.c **** }
 1091              		.loc 1 336 0
 1092 000c 10BD     		pop	{r4, pc}
 1093              		.cfi_endproc
 1094              	.LFE147:
 1096 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1097              		.align	2
 1098              		.global	TaPosition
 1099              		.thumb
 1100              		.thumb_func
 1102              	TaPosition:
 1103              	.LFB148:
 337:Src/freertos.c **** 
 338:Src/freertos.c **** void TaPosition() {
 1104              		.loc 1 338 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 0, uses_anonymous_args = 0
 1108 0000 08B5     		push	{r3, lr}
 1109              	.LCFI22:
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 3, -8
 1112              		.cfi_offset 14, -4
 339:Src/freertos.c ****     EnvoiMessage(0x05);
 1113              		.loc 1 339 0
 1114 0002 0520     		movs	r0, #5
 1115 0004 FFF7FEFF 		bl	EnvoiMessage
 1116              	.LVL121:
 1117 0008 08BD     		pop	{r3, pc}
 1118              		.cfi_endproc
 1119              	.LFE148:
 1121 000a 00BF     		.section	.text.ok,"ax",%progbits
 1122              		.align	2
ARM GAS  /tmp/ccYrxLLN.s 			page 26


 1123              		.global	ok
 1124              		.thumb
 1125              		.thumb_func
 1127              	ok:
 1128              	.LFB149:
 340:Src/freertos.c **** }
 341:Src/freertos.c **** 
 342:Src/freertos.c **** void ok() {
 1129              		.loc 1 342 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133 0000 08B5     		push	{r3, lr}
 1134              	.LCFI23:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 3, -8
 1137              		.cfi_offset 14, -4
 343:Src/freertos.c ****     EnvoiMessage(0x06);
 1138              		.loc 1 343 0
 1139 0002 0620     		movs	r0, #6
 1140 0004 FFF7FEFF 		bl	EnvoiMessage
 1141              	.LVL122:
 1142 0008 08BD     		pop	{r3, pc}
 1143              		.cfi_endproc
 1144              	.LFE149:
 1146 000a 00BF     		.section	.text.Monte,"ax",%progbits
 1147              		.align	2
 1148              		.global	Monte
 1149              		.thumb
 1150              		.thumb_func
 1152              	Monte:
 1153              	.LFB150:
 344:Src/freertos.c **** }
 345:Src/freertos.c **** 
 346:Src/freertos.c **** void Monte() {
 1154              		.loc 1 346 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158 0000 08B5     		push	{r3, lr}
 1159              	.LCFI24:
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 3, -8
 1162              		.cfi_offset 14, -4
 347:Src/freertos.c ****     EnvoiMessage(0x07);
 1163              		.loc 1 347 0
 1164 0002 0720     		movs	r0, #7
 1165 0004 FFF7FEFF 		bl	EnvoiMessage
 1166              	.LVL123:
 348:Src/freertos.c ****     WaitFor(0x06);
 1167              		.loc 1 348 0
 1168 0008 0620     		movs	r0, #6
 1169 000a FFF7FEFF 		bl	WaitFor
 1170              	.LVL124:
 1171 000e 08BD     		pop	{r3, pc}
 1172              		.cfi_endproc
 1173              	.LFE150:
ARM GAS  /tmp/ccYrxLLN.s 			page 27


 1175              		.section	.text.Descend,"ax",%progbits
 1176              		.align	2
 1177              		.global	Descend
 1178              		.thumb
 1179              		.thumb_func
 1181              	Descend:
 1182              	.LFB151:
 349:Src/freertos.c **** }
 350:Src/freertos.c **** 
 351:Src/freertos.c **** void Descend() {
 1183              		.loc 1 351 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187 0000 08B5     		push	{r3, lr}
 1188              	.LCFI25:
 1189              		.cfi_def_cfa_offset 8
 1190              		.cfi_offset 3, -8
 1191              		.cfi_offset 14, -4
 352:Src/freertos.c ****     EnvoiMessage(0x08);
 1192              		.loc 1 352 0
 1193 0002 0820     		movs	r0, #8
 1194 0004 FFF7FEFF 		bl	EnvoiMessage
 1195              	.LVL125:
 353:Src/freertos.c ****     WaitFor(0x06);
 1196              		.loc 1 353 0
 1197 0008 0620     		movs	r0, #6
 1198 000a FFF7FEFF 		bl	WaitFor
 1199              	.LVL126:
 1200 000e 08BD     		pop	{r3, pc}
 1201              		.cfi_endproc
 1202              	.LFE151:
 1204              		.section	.text.Droite,"ax",%progbits
 1205              		.align	2
 1206              		.global	Droite
 1207              		.thumb
 1208              		.thumb_func
 1210              	Droite:
 1211              	.LFB152:
 354:Src/freertos.c **** }
 355:Src/freertos.c **** 
 356:Src/freertos.c **** void Droite() {
 1212              		.loc 1 356 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216 0000 08B5     		push	{r3, lr}
 1217              	.LCFI26:
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 3, -8
 1220              		.cfi_offset 14, -4
 357:Src/freertos.c ****     EnvoiMessage(0x09);
 1221              		.loc 1 357 0
 1222 0002 0920     		movs	r0, #9
 1223 0004 FFF7FEFF 		bl	EnvoiMessage
 1224              	.LVL127:
 358:Src/freertos.c ****     WaitFor(0x06);
ARM GAS  /tmp/ccYrxLLN.s 			page 28


 1225              		.loc 1 358 0
 1226 0008 0620     		movs	r0, #6
 1227 000a FFF7FEFF 		bl	WaitFor
 1228              	.LVL128:
 1229 000e 08BD     		pop	{r3, pc}
 1230              		.cfi_endproc
 1231              	.LFE152:
 1233              		.section	.text.Gauche,"ax",%progbits
 1234              		.align	2
 1235              		.global	Gauche
 1236              		.thumb
 1237              		.thumb_func
 1239              	Gauche:
 1240              	.LFB153:
 359:Src/freertos.c **** }
 360:Src/freertos.c **** 
 361:Src/freertos.c **** void Gauche() {
 1241              		.loc 1 361 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245 0000 08B5     		push	{r3, lr}
 1246              	.LCFI27:
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 3, -8
 1249              		.cfi_offset 14, -4
 362:Src/freertos.c ****     EnvoiMessage(0x0A);
 1250              		.loc 1 362 0
 1251 0002 0A20     		movs	r0, #10
 1252 0004 FFF7FEFF 		bl	EnvoiMessage
 1253              	.LVL129:
 363:Src/freertos.c ****     WaitFor(0x06);
 1254              		.loc 1 363 0
 1255 0008 0620     		movs	r0, #6
 1256 000a FFF7FEFF 		bl	WaitFor
 1257              	.LVL130:
 1258 000e 08BD     		pop	{r3, pc}
 1259              		.cfi_endproc
 1260              	.LFE153:
 1262              		.section	.text.DansUnCoin,"ax",%progbits
 1263              		.align	2
 1264              		.global	DansUnCoin
 1265              		.thumb
 1266              		.thumb_func
 1268              	DansUnCoin:
 1269              	.LFB154:
 364:Src/freertos.c **** }
 365:Src/freertos.c **** 
 366:Src/freertos.c **** void DansUnCoin() {
 1270              		.loc 1 366 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274 0000 08B5     		push	{r3, lr}
 1275              	.LCFI28:
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 3, -8
ARM GAS  /tmp/ccYrxLLN.s 			page 29


 1278              		.cfi_offset 14, -4
 367:Src/freertos.c ****     EnvoiMessage(0x0B);
 1279              		.loc 1 367 0
 1280 0002 0B20     		movs	r0, #11
 1281 0004 FFF7FEFF 		bl	EnvoiMessage
 1282              	.LVL131:
 1283 0008 08BD     		pop	{r3, pc}
 1284              		.cfi_endproc
 1285              	.LFE154:
 1287 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1288              		.align	2
 1289              		.global	Trouve
 1290              		.thumb
 1291              		.thumb_func
 1293              	Trouve:
 1294              	.LFB155:
 368:Src/freertos.c **** }
 369:Src/freertos.c **** 
 370:Src/freertos.c **** void Trouve() {
 1295              		.loc 1 370 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299 0000 08B5     		push	{r3, lr}
 1300              	.LCFI29:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 3, -8
 1303              		.cfi_offset 14, -4
 371:Src/freertos.c ****     EnvoiMessage(0x0C);
 1304              		.loc 1 371 0
 1305 0002 0C20     		movs	r0, #12
 1306 0004 FFF7FEFF 		bl	EnvoiMessage
 1307              	.LVL132:
 1308 0008 08BD     		pop	{r3, pc}
 1309              		.cfi_endproc
 1310              	.LFE155:
 1312 000a 00BF     		.section	.text.Random,"ax",%progbits
 1313              		.align	2
 1314              		.global	Random
 1315              		.thumb
 1316              		.thumb_func
 1318              	Random:
 1319              	.LFB156:
 372:Src/freertos.c **** }
 373:Src/freertos.c **** 
 374:Src/freertos.c **** int Random() {
 1320              		.loc 1 374 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324 0000 10B5     		push	{r4, lr}
 1325              	.LCFI30:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 4, -8
 1328              		.cfi_offset 14, -4
 375:Src/freertos.c ****     int a, p;
 376:Src/freertos.c ****     EnvoiMessage(0x0D);
ARM GAS  /tmp/ccYrxLLN.s 			page 30


 1329              		.loc 1 376 0
 1330 0002 0D20     		movs	r0, #13
 1331 0004 FFF7FEFF 		bl	EnvoiMessage
 1332              	.LVL133:
 377:Src/freertos.c ****     srand(time(NULL));
 1333              		.loc 1 377 0
 1334 0008 0020     		movs	r0, #0
 1335 000a FFF7FEFF 		bl	time
 1336              	.LVL134:
 1337 000e FFF7FEFF 		bl	srand
 1338              	.LVL135:
 378:Src/freertos.c ****     a = rand()%256;
 1339              		.loc 1 378 0
 1340 0012 FFF7FEFF 		bl	rand
 1341              	.LVL136:
 1342 0016 0B4C     		ldr	r4, .L114
 1343 0018 0440     		ands	r4, r4, r0
 1344 001a 002C     		cmp	r4, #0
 1345 001c 03DA     		bge	.L110
 1346 001e 013C     		subs	r4, r4, #1
 1347 0020 64F0FF04 		orn	r4, r4, #255
 1348 0024 0134     		adds	r4, r4, #1
 1349              	.L110:
 1350              	.LVL137:
 379:Src/freertos.c ****     if (ReceptionMessage() < a) {
 1351              		.loc 1 379 0
 1352 0026 FFF7FEFF 		bl	ReceptionMessage
 1353              	.LVL138:
 1354 002a 8442     		cmp	r4, r0
 1355 002c 04DD     		ble	.L111
 1356              	.LVL139:
 380:Src/freertos.c ****         p = 1;
 381:Src/freertos.c ****         EnvoiMessage(0x50);
 1357              		.loc 1 381 0
 1358 002e 5020     		movs	r0, #80
 1359 0030 FFF7FEFF 		bl	EnvoiMessage
 1360              	.LVL140:
 380:Src/freertos.c ****         p = 1;
 1361              		.loc 1 380 0
 1362 0034 0120     		movs	r0, #1
 1363 0036 10BD     		pop	{r4, pc}
 1364              	.LVL141:
 1365              	.L111:
 382:Src/freertos.c ****     }
 383:Src/freertos.c ****     else {
 384:Src/freertos.c ****         p = 0;
 385:Src/freertos.c ****         EnvoiMessage(0x67);
 1366              		.loc 1 385 0
 1367 0038 6720     		movs	r0, #103
 1368 003a FFF7FEFF 		bl	EnvoiMessage
 1369              	.LVL142:
 384:Src/freertos.c ****         EnvoiMessage(0x67);
 1370              		.loc 1 384 0
 1371 003e 0020     		movs	r0, #0
 1372              	.LVL143:
 386:Src/freertos.c ****     }
 387:Src/freertos.c ****     return(p);
ARM GAS  /tmp/ccYrxLLN.s 			page 31


 388:Src/freertos.c **** }
 1373              		.loc 1 388 0
 1374 0040 10BD     		pop	{r4, pc}
 1375              	.LVL144:
 1376              	.L115:
 1377 0042 00BF     		.align	2
 1378              	.L114:
 1379 0044 FF000080 		.word	-2147483393
 1380              		.cfi_endproc
 1381              	.LFE156:
 1383              		.section	.text.Non,"ax",%progbits
 1384              		.align	2
 1385              		.global	Non
 1386              		.thumb
 1387              		.thumb_func
 1389              	Non:
 1390              	.LFB157:
 389:Src/freertos.c **** 
 390:Src/freertos.c **** void Non(){
 1391              		.loc 1 390 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395 0000 08B5     		push	{r3, lr}
 1396              	.LCFI31:
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 3, -8
 1399              		.cfi_offset 14, -4
 391:Src/freertos.c ****     EnvoiMessage(0x10);
 1400              		.loc 1 391 0
 1401 0002 1020     		movs	r0, #16
 1402 0004 FFF7FEFF 		bl	EnvoiMessage
 1403              	.LVL145:
 1404 0008 08BD     		pop	{r3, pc}
 1405              		.cfi_endproc
 1406              	.LFE157:
 1408 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1409              		.align	2
 1410              		.global	MemeCase
 1411              		.thumb
 1412              		.thumb_func
 1414              	MemeCase:
 1415              	.LFB158:
 392:Src/freertos.c **** }
 393:Src/freertos.c **** 
 394:Src/freertos.c **** void MemeCase() {
 1416              		.loc 1 394 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420 0000 08B5     		push	{r3, lr}
 1421              	.LCFI32:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 3, -8
 1424              		.cfi_offset 14, -4
 395:Src/freertos.c ****     EnvoiMessage(0x12);
 1425              		.loc 1 395 0
ARM GAS  /tmp/ccYrxLLN.s 			page 32


 1426 0002 1220     		movs	r0, #18
 1427 0004 FFF7FEFF 		bl	EnvoiMessage
 1428              	.LVL146:
 1429 0008 08BD     		pop	{r3, pc}
 1430              		.cfi_endproc
 1431              	.LFE158:
 1433 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1434              		.align	2
 1435              		.global	TuEsCoin
 1436              		.thumb
 1437              		.thumb_func
 1439              	TuEsCoin:
 1440              	.LFB159:
 396:Src/freertos.c **** }
 397:Src/freertos.c **** 
 398:Src/freertos.c **** void TuEsCoin(){
 1441              		.loc 1 398 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445 0000 08B5     		push	{r3, lr}
 1446              	.LCFI33:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 3, -8
 1449              		.cfi_offset 14, -4
 399:Src/freertos.c ****     EnvoiMessage(0x13);
 1450              		.loc 1 399 0
 1451 0002 1320     		movs	r0, #19
 1452 0004 FFF7FEFF 		bl	EnvoiMessage
 1453              	.LVL147:
 1454 0008 08BD     		pop	{r3, pc}
 1455              		.cfi_endproc
 1456              	.LFE159:
 1458 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1459              		.align	2
 1460              		.global	deplacement
 1461              		.thumb
 1462              		.thumb_func
 1464              	deplacement:
 1465              	.LFB160:
 400:Src/freertos.c **** }
 401:Src/freertos.c **** /* END Fonctions UART */
 402:Src/freertos.c **** 
 403:Src/freertos.c **** /* BEGIN Fonctions IA */
 404:Src/freertos.c **** void deplacement(int distance)
 405:Src/freertos.c **** {
 1466              		.loc 1 405 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              	.LVL148:
 1471 0000 38B5     		push	{r3, r4, r5, lr}
 1472              	.LCFI34:
 1473              		.cfi_def_cfa_offset 16
 1474              		.cfi_offset 3, -16
 1475              		.cfi_offset 4, -12
 1476              		.cfi_offset 5, -8
ARM GAS  /tmp/ccYrxLLN.s 			page 33


 1477              		.cfi_offset 14, -4
 1478              	.LVL149:
 406:Src/freertos.c ****   int i =0;
 407:Src/freertos.c ****   if (distance > 0)
 1479              		.loc 1 407 0
 1480 0002 051E     		subs	r5, r0, #0
 1481 0004 05DC     		bgt	.L128
 1482 0006 0024     		movs	r4, #0
 1483 0008 0AE0     		b	.L124
 1484              	.LVL150:
 1485              	.L125:
 408:Src/freertos.c ****   {
 409:Src/freertos.c ****     for (i = 0; i < distance; i++)
 410:Src/freertos.c ****     {
 411:Src/freertos.c ****       avancer_robot();
 1486              		.loc 1 411 0 discriminator 3
 1487 000a FFF7FEFF 		bl	avancer_robot
 1488              	.LVL151:
 409:Src/freertos.c ****     {
 1489              		.loc 1 409 0 discriminator 3
 1490 000e 0134     		adds	r4, r4, #1
 1491              	.LVL152:
 1492 0010 00E0     		b	.L123
 1493              	.LVL153:
 1494              	.L128:
 1495 0012 0024     		movs	r4, #0
 1496              	.LVL154:
 1497              	.L123:
 409:Src/freertos.c ****     {
 1498              		.loc 1 409 0 is_stmt 0 discriminator 1
 1499 0014 AC42     		cmp	r4, r5
 1500 0016 F8DB     		blt	.L125
 1501 0018 38BD     		pop	{r3, r4, r5, pc}
 1502              	.LVL155:
 1503              	.L127:
 412:Src/freertos.c ****     }
 413:Src/freertos.c ****   }
 414:Src/freertos.c ****   else
 415:Src/freertos.c ****   {
 416:Src/freertos.c ****     for (i = 0; i < -distance; i++)
 417:Src/freertos.c ****     {
 418:Src/freertos.c ****       reculer_robot();
 1504              		.loc 1 418 0 is_stmt 1 discriminator 3
 1505 001a FFF7FEFF 		bl	reculer_robot
 1506              	.LVL156:
 416:Src/freertos.c ****     {
 1507              		.loc 1 416 0 discriminator 3
 1508 001e 0134     		adds	r4, r4, #1
 1509              	.LVL157:
 1510              	.L124:
 416:Src/freertos.c ****     {
 1511              		.loc 1 416 0 is_stmt 0 discriminator 1
 1512 0020 6B42     		negs	r3, r5
 1513 0022 9C42     		cmp	r4, r3
 1514 0024 F9DB     		blt	.L127
 1515 0026 38BD     		pop	{r3, r4, r5, pc}
 1516              		.cfi_endproc
ARM GAS  /tmp/ccYrxLLN.s 			page 34


 1517              	.LFE160:
 1519              		.section	.text.motor,"ax",%progbits
 1520              		.align	2
 1521              		.global	motor
 1522              		.thumb
 1523              		.thumb_func
 1525              	motor:
 1526              	.LFB161:
 419:Src/freertos.c ****     }
 420:Src/freertos.c ****   }
 421:Src/freertos.c **** }
 422:Src/freertos.c **** /* END Fonctions IA */
 423:Src/freertos.c **** 
 424:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 425:Src/freertos.c **** 
 426:Src/freertos.c **** /* Hook prototypes */
 427:Src/freertos.c **** 
 428:Src/freertos.c **** /* USER CODE BEGIN Application */
 429:Src/freertos.c **** void motor(void const * argument)
 430:Src/freertos.c **** {
 1527              		.loc 1 430 0 is_stmt 1
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 8
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              	.LVL158:
 1532 0000 10B5     		push	{r4, lr}
 1533              	.LCFI35:
 1534              		.cfi_def_cfa_offset 8
 1535              		.cfi_offset 4, -8
 1536              		.cfi_offset 14, -4
 1537 0002 82B0     		sub	sp, sp, #8
 1538              	.LCFI36:
 1539              		.cfi_def_cfa_offset 16
 431:Src/freertos.c ****   /* USER CODE BEGIN motor */
 432:Src/freertos.c ****   UNUSED(argument);
 433:Src/freertos.c **** 
 434:Src/freertos.c ****   //HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 435:Src/freertos.c ****   //HAL_TIM_Base_Start(&htim3);
 436:Src/freertos.c ****   //HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 437:Src/freertos.c ****   //HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 438:Src/freertos.c **** 
 439:Src/freertos.c ****   uint8_t a = 0x0;
 1540              		.loc 1 439 0
 1541 0004 0023     		movs	r3, #0
 1542 0006 8DF80730 		strb	r3, [sp, #7]
 1543              	.LVL159:
 1544              	.L134:
 440:Src/freertos.c ****   int i;
 441:Src/freertos.c ****   /* Infinite loop */
 442:Src/freertos.c ****   for(;;)
 443:Src/freertos.c ****   {
 444:Src/freertos.c ****       HAL_UART_Receive(&huart1, &a, sizeof(uint8_t), 0xFFFFF);
 1545              		.loc 1 444 0
 1546 000a 0E4B     		ldr	r3, .L137
 1547 000c 0122     		movs	r2, #1
 1548 000e 0DF10701 		add	r1, sp, #7
 1549 0012 0D48     		ldr	r0, .L137+4
ARM GAS  /tmp/ccYrxLLN.s 			page 35


 1550 0014 FFF7FEFF 		bl	HAL_UART_Receive
 1551              	.LVL160:
 445:Src/freertos.c ****       if (a == 0x06) {
 1552              		.loc 1 445 0
 1553 0018 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1554 001c 062B     		cmp	r3, #6
 1555 001e 0DD1     		bne	.L132
 1556 0020 09E0     		b	.L135
 1557              	.LVL161:
 1558              	.L133:
 446:Src/freertos.c ****           for (i = 0; i<2;i++) {
 447:Src/freertos.c ****               HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 1559              		.loc 1 447 0 discriminator 3
 1560 0022 4021     		movs	r1, #64
 1561 0024 0948     		ldr	r0, .L137+8
 1562 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1563              	.LVL162:
 448:Src/freertos.c ****               osDelay(500);
 1564              		.loc 1 448 0 discriminator 3
 1565 002a 4FF4FA70 		mov	r0, #500
 1566 002e FFF7FEFF 		bl	osDelay
 1567              	.LVL163:
 446:Src/freertos.c ****           for (i = 0; i<2;i++) {
 1568              		.loc 1 446 0 discriminator 3
 1569 0032 0134     		adds	r4, r4, #1
 1570              	.LVL164:
 1571 0034 00E0     		b	.L131
 1572              	.LVL165:
 1573              	.L135:
 1574 0036 0024     		movs	r4, #0
 1575              	.L131:
 1576              	.LVL166:
 446:Src/freertos.c ****           for (i = 0; i<2;i++) {
 1577              		.loc 1 446 0 is_stmt 0 discriminator 1
 1578 0038 012C     		cmp	r4, #1
 1579 003a F2DD     		ble	.L133
 1580              	.LVL167:
 1581              	.L132:
 449:Src/freertos.c ****            }
 450:Src/freertos.c ****       }
 451:Src/freertos.c ****       osDelay(1);
 1582              		.loc 1 451 0 is_stmt 1
 1583 003c 0120     		movs	r0, #1
 1584 003e FFF7FEFF 		bl	osDelay
 1585              	.LVL168:
 452:Src/freertos.c ****   }
 1586              		.loc 1 452 0
 1587 0042 E2E7     		b	.L134
 1588              	.L138:
 1589              		.align	2
 1590              	.L137:
 1591 0044 FFFF0F00 		.word	1048575
 1592 0048 00000000 		.word	huart1
 1593 004c 00040048 		.word	1207960576
 1594              		.cfi_endproc
 1595              	.LFE161:
 1597              		.section	.text.adcControl,"ax",%progbits
ARM GAS  /tmp/ccYrxLLN.s 			page 36


 1598              		.align	2
 1599              		.global	adcControl
 1600              		.thumb
 1601              		.thumb_func
 1603              	adcControl:
 1604              	.LFB162:
 453:Src/freertos.c ****   /* USER CODE END motor */
 454:Src/freertos.c **** }
 455:Src/freertos.c **** 
 456:Src/freertos.c **** void adcControl(void const * argument)
 457:Src/freertos.c **** {
 1605              		.loc 1 457 0
 1606              		.cfi_startproc
 1607              		@ Volatile: function does not return.
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL169:
 1611 0000 08B5     		push	{r3, lr}
 1612              	.LCFI37:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 3, -8
 1615              		.cfi_offset 14, -4
 1616              	.LVL170:
 1617              	.L140:
 458:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 459:Src/freertos.c ****   /* Infinite loop */
 460:Src/freertos.c ****   for(;;)
 461:Src/freertos.c ****   {
 462:Src/freertos.c ****     //HAL_ADC_Start_IT(&hadc1);
 463:Src/freertos.c ****     //osDelay(1000);
 464:Src/freertos.c ****     //if (flag_adc == 1) {
 465:Src/freertos.c ****         //printf("Value : %lu\n\r", adcValue);
 466:Src/freertos.c ****         //flag_adc = 0;
 467:Src/freertos.c ****     //}
 468:Src/freertos.c ****     osDelay(1);
 1618              		.loc 1 468 0 discriminator 1
 1619 0002 0120     		movs	r0, #1
 1620 0004 FFF7FEFF 		bl	osDelay
 1621              	.LVL171:
 1622 0008 FBE7     		b	.L140
 1623              		.cfi_endproc
 1624              	.LFE162:
 1626 000a 00BF     		.section	.text.uart,"ax",%progbits
 1627              		.align	2
 1628              		.global	uart
 1629              		.thumb
 1630              		.thumb_func
 1632              	uart:
 1633              	.LFB163:
 469:Src/freertos.c ****   }
 470:Src/freertos.c ****   /* USER CODE END adcControl */
 471:Src/freertos.c **** }
 472:Src/freertos.c **** 
 473:Src/freertos.c **** void uart(void const * argument)
 474:Src/freertos.c **** {
 1634              		.loc 1 474 0
 1635              		.cfi_startproc
ARM GAS  /tmp/ccYrxLLN.s 			page 37


 1636              		@ Volatile: function does not return.
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              	.LVL172:
 1640 0000 08B5     		push	{r3, lr}
 1641              	.LCFI38:
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 3, -8
 1644              		.cfi_offset 14, -4
 1645              	.LVL173:
 1646              	.L143:
 475:Src/freertos.c ****   /* USER CODE BEGIN uart */
 476:Src/freertos.c ****   /* Infinite loop */
 477:Src/freertos.c ****   for(;;)
 478:Src/freertos.c ****   {
 479:Src/freertos.c ****     osDelay(1);
 1647              		.loc 1 479 0 discriminator 1
 1648 0002 0120     		movs	r0, #1
 1649 0004 FFF7FEFF 		bl	osDelay
 1650              	.LVL174:
 1651 0008 FBE7     		b	.L143
 1652              		.cfi_endproc
 1653              	.LFE163:
 1655              		.comm	robot2,12,4
 1656              		.comm	robot1,12,4
 1657              		.global	flag_gauche
 1658              		.global	flag_droite
 1659              		.global	flag_bas
 1660              		.global	flag_haut
 1661              		.global	deplacement_fini
 1662              		.global	adcValue
 1663              		.global	flag_adc
 1664 000a 00BF     		.section	.bss.flag_adc,"aw",%nobits
 1665              		.align	2
 1666              		.set	.LANCHOR2,. + 0
 1669              	flag_adc:
 1670 0000 00000000 		.space	4
 1671              		.section	.bss.flag_gauche,"aw",%nobits
 1672              		.align	2
 1673              		.set	.LANCHOR6,. + 0
 1676              	flag_gauche:
 1677 0000 00000000 		.space	4
 1678              		.section	.bss.flag_droite,"aw",%nobits
 1679              		.align	2
 1680              		.set	.LANCHOR5,. + 0
 1683              	flag_droite:
 1684 0000 00000000 		.space	4
 1685              		.section	.bss.deplacement_fini,"aw",%nobits
 1686              		.align	2
 1687              		.set	.LANCHOR0,. + 0
 1690              	deplacement_fini:
 1691 0000 00000000 		.space	4
 1692              		.section	.bss.flag_haut,"aw",%nobits
 1693              		.align	2
 1694              		.set	.LANCHOR3,. + 0
 1697              	flag_haut:
 1698 0000 00000000 		.space	4
ARM GAS  /tmp/ccYrxLLN.s 			page 38


 1699              		.section	.bss.adcValue,"aw",%nobits
 1700              		.align	2
 1701              		.set	.LANCHOR1,. + 0
 1704              	adcValue:
 1705 0000 00000000 		.space	4
 1706              		.section	.bss.flag_bas,"aw",%nobits
 1707              		.align	2
 1708              		.set	.LANCHOR4,. + 0
 1711              	flag_bas:
 1712 0000 00000000 		.space	4
 1713              		.text
 1714              	.Letext0:
 1715              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1716              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1717              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1718              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1719              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1720              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1721              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1722              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1723              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1724              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 1725              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1726              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1727              		.file 14 "/usr/include/newlib/time.h"
 1728              		.file 15 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/ccYrxLLN.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccYrxLLN.s:22     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccYrxLLN.s:27     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccYrxLLN.s:63     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccYrxLLN.s:68     .text.alumer_droite:0000000000000000 $t
     /tmp/ccYrxLLN.s:73     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccYrxLLN.s:105    .text.alumer_droite:0000000000000024 $d
     /tmp/ccYrxLLN.s:110    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccYrxLLN.s:115    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccYrxLLN.s:143    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccYrxLLN.s:148    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccYrxLLN.s:153    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccYrxLLN.s:180    .text.eteindre_droite:000000000000001c $d
     /tmp/ccYrxLLN.s:185    .text.pwm_max:0000000000000000 $t
     /tmp/ccYrxLLN.s:190    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccYrxLLN.s:208    .text.pwm_max:0000000000000010 $d
     /tmp/ccYrxLLN.s:213    .text.accelerer:0000000000000000 $t
     /tmp/ccYrxLLN.s:218    .text.accelerer:0000000000000000 accelerer
     /tmp/ccYrxLLN.s:259    .text.accelerer:0000000000000020 $d
     /tmp/ccYrxLLN.s:264    .text.deccelerer:0000000000000000 $t
     /tmp/ccYrxLLN.s:269    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccYrxLLN.s:310    .text.deccelerer:0000000000000020 $d
     /tmp/ccYrxLLN.s:315    .text.reculer_robot:0000000000000000 $t
     /tmp/ccYrxLLN.s:320    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccYrxLLN.s:363    .text.reculer_robot:0000000000000030 $d
     /tmp/ccYrxLLN.s:368    .text.avancer_robot:0000000000000000 $t
     /tmp/ccYrxLLN.s:373    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccYrxLLN.s:416    .text.avancer_robot:0000000000000030 $d
     /tmp/ccYrxLLN.s:421    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccYrxLLN.s:426    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccYrxLLN.s:469    .text.pivoter_gauche:000000000000002c $d
     /tmp/ccYrxLLN.s:474    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccYrxLLN.s:479    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccYrxLLN.s:522    .text.pivoter_droite:000000000000002c $d
     /tmp/ccYrxLLN.s:527    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccYrxLLN.s:532    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccYrxLLN.s:557    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccYrxLLN.s:563    .text._write:0000000000000000 $t
     /tmp/ccYrxLLN.s:568    .text._write:0000000000000000 _write
     /tmp/ccYrxLLN.s:596    .text._write:0000000000000014 $d
     /tmp/ccYrxLLN.s:601    .text.EnvoiMessage:0000000000000000 $t
     /tmp/ccYrxLLN.s:606    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/ccYrxLLN.s:753    .text.EnvoiMessage:0000000000000100 $d
     /tmp/ccYrxLLN.s:758    .text.ReceptionMessage:0000000000000000 $t
     /tmp/ccYrxLLN.s:763    .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/ccYrxLLN.s:871    .text.ReceptionMessage:0000000000000090 $d
     /tmp/ccYrxLLN.s:877    .text.recoitpos:0000000000000000 $t
     /tmp/ccYrxLLN.s:882    .text.recoitpos:0000000000000000 recoitpos
     /tmp/ccYrxLLN.s:922    .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/ccYrxLLN.s:927    .text.envoipos:0000000000000000 $t
     /tmp/ccYrxLLN.s:932    .text.envoipos:0000000000000000 envoipos
     /tmp/ccYrxLLN.s:964    .text.Traduction:0000000000000000 $t
     /tmp/ccYrxLLN.s:969    .text.Traduction:0000000000000000 Traduction
     /tmp/ccYrxLLN.s:1055   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
ARM GAS  /tmp/ccYrxLLN.s 			page 40


     /tmp/ccYrxLLN.s:1066   .text.WaitFor:0000000000000000 $t
     /tmp/ccYrxLLN.s:1071   .text.WaitFor:0000000000000000 WaitFor
     /tmp/ccYrxLLN.s:1097   .text.TaPosition:0000000000000000 $t
     /tmp/ccYrxLLN.s:1102   .text.TaPosition:0000000000000000 TaPosition
     /tmp/ccYrxLLN.s:1122   .text.ok:0000000000000000 $t
     /tmp/ccYrxLLN.s:1127   .text.ok:0000000000000000 ok
     /tmp/ccYrxLLN.s:1147   .text.Monte:0000000000000000 $t
     /tmp/ccYrxLLN.s:1152   .text.Monte:0000000000000000 Monte
     /tmp/ccYrxLLN.s:1176   .text.Descend:0000000000000000 $t
     /tmp/ccYrxLLN.s:1181   .text.Descend:0000000000000000 Descend
     /tmp/ccYrxLLN.s:1205   .text.Droite:0000000000000000 $t
     /tmp/ccYrxLLN.s:1210   .text.Droite:0000000000000000 Droite
     /tmp/ccYrxLLN.s:1234   .text.Gauche:0000000000000000 $t
     /tmp/ccYrxLLN.s:1239   .text.Gauche:0000000000000000 Gauche
     /tmp/ccYrxLLN.s:1263   .text.DansUnCoin:0000000000000000 $t
     /tmp/ccYrxLLN.s:1268   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/ccYrxLLN.s:1288   .text.Trouve:0000000000000000 $t
     /tmp/ccYrxLLN.s:1293   .text.Trouve:0000000000000000 Trouve
     /tmp/ccYrxLLN.s:1313   .text.Random:0000000000000000 $t
     /tmp/ccYrxLLN.s:1318   .text.Random:0000000000000000 Random
     /tmp/ccYrxLLN.s:1379   .text.Random:0000000000000044 $d
     /tmp/ccYrxLLN.s:1384   .text.Non:0000000000000000 $t
     /tmp/ccYrxLLN.s:1389   .text.Non:0000000000000000 Non
     /tmp/ccYrxLLN.s:1409   .text.MemeCase:0000000000000000 $t
     /tmp/ccYrxLLN.s:1414   .text.MemeCase:0000000000000000 MemeCase
     /tmp/ccYrxLLN.s:1434   .text.TuEsCoin:0000000000000000 $t
     /tmp/ccYrxLLN.s:1439   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/ccYrxLLN.s:1459   .text.deplacement:0000000000000000 $t
     /tmp/ccYrxLLN.s:1464   .text.deplacement:0000000000000000 deplacement
     /tmp/ccYrxLLN.s:1520   .text.motor:0000000000000000 $t
     /tmp/ccYrxLLN.s:1525   .text.motor:0000000000000000 motor
     /tmp/ccYrxLLN.s:1591   .text.motor:0000000000000044 $d
     /tmp/ccYrxLLN.s:1598   .text.adcControl:0000000000000000 $t
     /tmp/ccYrxLLN.s:1603   .text.adcControl:0000000000000000 adcControl
     /tmp/ccYrxLLN.s:1627   .text.uart:0000000000000000 $t
     /tmp/ccYrxLLN.s:1632   .text.uart:0000000000000000 uart
     /tmp/ccYrxLLN.s:1676   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/ccYrxLLN.s:1683   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/ccYrxLLN.s:1711   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/ccYrxLLN.s:1697   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/ccYrxLLN.s:1690   .bss.deplacement_fini:0000000000000000 deplacement_fini
     /tmp/ccYrxLLN.s:1704   .bss.adcValue:0000000000000000 adcValue
     /tmp/ccYrxLLN.s:1669   .bss.flag_adc:0000000000000000 flag_adc
     /tmp/ccYrxLLN.s:1665   .bss.flag_adc:0000000000000000 $d
     /tmp/ccYrxLLN.s:1672   .bss.flag_gauche:0000000000000000 $d
     /tmp/ccYrxLLN.s:1679   .bss.flag_droite:0000000000000000 $d
     /tmp/ccYrxLLN.s:1686   .bss.deplacement_fini:0000000000000000 $d
     /tmp/ccYrxLLN.s:1693   .bss.flag_haut:0000000000000000 $d
     /tmp/ccYrxLLN.s:1700   .bss.adcValue:0000000000000000 $d
     /tmp/ccYrxLLN.s:1707   .bss.flag_bas:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
osDelay
HAL_ADC_GetValue
ARM GAS  /tmp/ccYrxLLN.s 			page 41


HAL_UART_Transmit
huart2
huart1
HAL_UART_Receive
HAL_GPIO_TogglePin
time
srand
rand
