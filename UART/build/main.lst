ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f3xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** UART_HandleTypeDef huart1;
  59:Src/main.c    **** 
  60:Src/main.c    **** osThreadId defaultTaskHandle;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** static void MX_GPIO_Init(void);
  70:Src/main.c    **** static void MX_USART1_UART_Init(void);
  71:Src/main.c    **** void StartDefaultTask(void const * argument);
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END 1 */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Src/main.c    ****   HAL_Init();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN Init */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the system clock */
  99:Src/main.c    ****   SystemClock_Config();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Initialize all configured peripherals */
 106:Src/main.c    ****   MX_GPIO_Init();
 107:Src/main.c    ****   MX_USART1_UART_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN 2 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 114:Src/main.c    ****   /* add mutexes, ... */
 115:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 118:Src/main.c    ****   /* add semaphores, ... */
 119:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 122:Src/main.c    ****   /* start timers, add new ones, ... */
 123:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Create the thread(s) */
 126:Src/main.c    ****   /* definition and creation of defaultTask */
 127:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 128:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 131:Src/main.c    ****   /* add threads, ... */
 132:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 135:Src/main.c    ****   /* add queues, ... */
 136:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 137:Src/main.c    ****  
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Start scheduler */
 140:Src/main.c    ****   osKernelStart();
 141:Src/main.c    ****   
 142:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* Infinite loop */
 145:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 146:Src/main.c    ****   while (1)
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 4


 147:Src/main.c    ****   {
 148:Src/main.c    ****   /* USER CODE END WHILE */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE BEGIN 3 */
 151:Src/main.c    **** 
 152:Src/main.c    ****   }
 153:Src/main.c    ****   /* USER CODE END 3 */
 154:Src/main.c    **** 
 155:Src/main.c    **** }
 156:Src/main.c    **** 
 157:Src/main.c    **** /** System Clock Configuration
 158:Src/main.c    **** */
 159:Src/main.c    **** void SystemClock_Config(void)
 160:Src/main.c    **** {
 161:Src/main.c    **** 
 162:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 163:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 164:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 167:Src/main.c    ****     */
 168:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 169:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 170:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Src/main.c    ****   {
 174:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 175:Src/main.c    ****   }
 176:Src/main.c    **** 
 177:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 178:Src/main.c    ****     */
 179:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 182:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 184:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 185:Src/main.c    **** 
 186:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 187:Src/main.c    ****   {
 188:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 189:Src/main.c    ****   }
 190:Src/main.c    **** 
 191:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 192:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 193:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 196:Src/main.c    ****   }
 197:Src/main.c    **** 
 198:Src/main.c    ****     /**Configure the Systick interrupt time 
 199:Src/main.c    ****     */
 200:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 201:Src/main.c    **** 
 202:Src/main.c    ****     /**Configure the Systick 
 203:Src/main.c    ****     */
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 5


 204:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 207:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 208:Src/main.c    **** }
 209:Src/main.c    **** 
 210:Src/main.c    **** /* USART1 init function */
 211:Src/main.c    **** static void MX_USART1_UART_Init(void)
 212:Src/main.c    **** {
 213:Src/main.c    **** 
 214:Src/main.c    ****   huart1.Instance = USART1;
 215:Src/main.c    ****   huart1.Init.BaudRate = 38400;
 216:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_7B;
 217:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 218:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 219:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 220:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 221:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 222:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 223:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 224:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 225:Src/main.c    ****   {
 226:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 227:Src/main.c    ****   }
 228:Src/main.c    **** 
 229:Src/main.c    **** }
 230:Src/main.c    **** 
 231:Src/main.c    **** /** Configure pins as 
 232:Src/main.c    ****         * Analog 
 233:Src/main.c    ****         * Input 
 234:Src/main.c    ****         * Output
 235:Src/main.c    ****         * EVENT_OUT
 236:Src/main.c    ****         * EXTI
 237:Src/main.c    ****      PA2   ------> USART2_TX
 238:Src/main.c    ****      PA15   ------> USART2_RX
 239:Src/main.c    **** */
 240:Src/main.c    **** static void MX_GPIO_Init(void)
 241:Src/main.c    **** {
  27              		.loc 1 241 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39              	.LBB2:
 242:Src/main.c    **** 
 243:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* GPIO Ports Clock Enable */
 246:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  40              		.loc 1 246 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 6


  41 0004 204B     		ldr	r3, .L3
  42 0006 5A69     		ldr	r2, [r3, #20]
  43 0008 42F48002 		orr	r2, r2, #4194304
  44 000c 5A61     		str	r2, [r3, #20]
  45 000e 5A69     		ldr	r2, [r3, #20]
  46 0010 02F48002 		and	r2, r2, #4194304
  47 0014 0192     		str	r2, [sp, #4]
  48 0016 019A     		ldr	r2, [sp, #4]
  49              	.LBE2:
  50              	.LBB3:
 247:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  51              		.loc 1 247 0
  52 0018 5A69     		ldr	r2, [r3, #20]
  53 001a 42F40032 		orr	r2, r2, #131072
  54 001e 5A61     		str	r2, [r3, #20]
  55 0020 5B69     		ldr	r3, [r3, #20]
  56 0022 03F40033 		and	r3, r3, #131072
  57 0026 0293     		str	r3, [sp, #8]
  58 0028 029B     		ldr	r3, [sp, #8]
  59              	.LBE3:
 248:Src/main.c    **** 
 249:Src/main.c    ****   /*Configure GPIO pin Output Level */
 250:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, del_Pin|Led_Pin, GPIO_PIN_RESET);
  60              		.loc 1 250 0
  61 002a 0022     		movs	r2, #0
  62 002c A021     		movs	r1, #160
  63 002e 4FF09040 		mov	r0, #1207959552
  64 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  65              	.LVL0:
 251:Src/main.c    **** 
 252:Src/main.c    ****   /*Configure GPIO pins : PA2 PA15 */
 253:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_15;
  66              		.loc 1 253 0
  67 0036 48F20403 		movw	r3, #32772
  68 003a 0393     		str	r3, [sp, #12]
 254:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  69              		.loc 1 254 0
  70 003c 0223     		movs	r3, #2
  71 003e 0493     		str	r3, [sp, #16]
 255:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  72              		.loc 1 255 0
  73 0040 0024     		movs	r4, #0
  74 0042 0594     		str	r4, [sp, #20]
 256:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  75              		.loc 1 256 0
  76 0044 0323     		movs	r3, #3
  77 0046 0693     		str	r3, [sp, #24]
 257:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  78              		.loc 1 257 0
  79 0048 0723     		movs	r3, #7
  80 004a 0793     		str	r3, [sp, #28]
 258:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  81              		.loc 1 258 0
  82 004c 03A9     		add	r1, sp, #12
  83 004e 4FF09040 		mov	r0, #1207959552
  84 0052 FFF7FEFF 		bl	HAL_GPIO_Init
  85              	.LVL1:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 7


 259:Src/main.c    **** 
 260:Src/main.c    ****   /*Configure GPIO pin : del_Pin */
 261:Src/main.c    ****   GPIO_InitStruct.Pin = del_Pin;
  86              		.loc 1 261 0
  87 0056 2023     		movs	r3, #32
  88 0058 0393     		str	r3, [sp, #12]
 262:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  89              		.loc 1 262 0
  90 005a 0123     		movs	r3, #1
  91 005c 0493     		str	r3, [sp, #16]
 263:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 263 0
  93 005e 0594     		str	r4, [sp, #20]
 264:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  94              		.loc 1 264 0
  95 0060 0694     		str	r4, [sp, #24]
 265:Src/main.c    ****   HAL_GPIO_Init(del_GPIO_Port, &GPIO_InitStruct);
  96              		.loc 1 265 0
  97 0062 03A9     		add	r1, sp, #12
  98 0064 4FF09040 		mov	r0, #1207959552
  99 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 100              	.LVL2:
 266:Src/main.c    **** 
 267:Src/main.c    ****   /*Configure GPIO pin : Led_Pin */
 268:Src/main.c    ****   GPIO_InitStruct.Pin = Led_Pin;
 101              		.loc 1 268 0
 102 006c 8023     		movs	r3, #128
 103 006e 0393     		str	r3, [sp, #12]
 269:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 104              		.loc 1 269 0
 105 0070 1123     		movs	r3, #17
 106 0072 0493     		str	r3, [sp, #16]
 270:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 107              		.loc 1 270 0
 108 0074 0594     		str	r4, [sp, #20]
 271:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 109              		.loc 1 271 0
 110 0076 0694     		str	r4, [sp, #24]
 272:Src/main.c    ****   HAL_GPIO_Init(Led_GPIO_Port, &GPIO_InitStruct);
 111              		.loc 1 272 0
 112 0078 03A9     		add	r1, sp, #12
 113 007a 4FF09040 		mov	r0, #1207959552
 114 007e FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL3:
 273:Src/main.c    **** 
 274:Src/main.c    **** }
 116              		.loc 1 274 0
 117 0082 08B0     		add	sp, sp, #32
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 8
 120              		@ sp needed
 121 0084 10BD     		pop	{r4, pc}
 122              	.L4:
 123 0086 00BF     		.align	2
 124              	.L3:
 125 0088 00100240 		.word	1073876992
 126              		.cfi_endproc
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 8


 127              	.LFE132:
 129              		.section	.text.StartDefaultTask,"ax",%progbits
 130              		.align	1
 131              		.global	StartDefaultTask
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	StartDefaultTask:
 138              	.LFB133:
 275:Src/main.c    **** 
 276:Src/main.c    **** /* USER CODE BEGIN 4 */
 277:Src/main.c    **** 
 278:Src/main.c    **** /* USER CODE END 4 */
 279:Src/main.c    **** 
 280:Src/main.c    **** /* StartDefaultTask function */
 281:Src/main.c    **** void StartDefaultTask(void const * argument)
 282:Src/main.c    **** {
 139              		.loc 1 282 0
 140              		.cfi_startproc
 141              		@ Volatile: function does not return.
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              	.LVL4:
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI3:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 150              	.LVL5:
 151              	.L6:
 283:Src/main.c    ****   for(;;)
 284:Src/main.c    ****   {
 285:Src/main.c    ****         Traduction(ReceptionMessage());
 152              		.loc 1 285 0 discriminator 1
 153 0002 FFF7FEFF 		bl	ReceptionMessage
 154              	.LVL6:
 155 0006 C0B2     		uxtb	r0, r0
 156 0008 FFF7FEFF 		bl	Traduction
 157              	.LVL7:
 158 000c F9E7     		b	.L6
 159              		.cfi_endproc
 160              	.LFE133:
 162              		.section	.text._Error_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	_Error_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	_Error_Handler:
 171              	.LFB134:
 286:Src/main.c    ****   }
 287:Src/main.c    **** }
 288:Src/main.c    **** /**
 289:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 290:Src/main.c    ****   * @param  None
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 9


 291:Src/main.c    ****   * @retval None
 292:Src/main.c    ****   */
 293:Src/main.c    **** void _Error_Handler(char * file, int line)
 294:Src/main.c    **** {
 172              		.loc 1 294 0
 173              		.cfi_startproc
 174              		@ Volatile: function does not return.
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL8:
 179              	.L9:
 180 0000 FEE7     		b	.L9
 181              		.cfi_endproc
 182              	.LFE134:
 184              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	MX_USART1_UART_Init:
 192              	.LFB131:
 212:Src/main.c    **** 
 193              		.loc 1 212 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 212:Src/main.c    **** 
 197              		.loc 1 212 0
 198 0000 08B5     		push	{r3, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 214:Src/main.c    ****   huart1.Init.BaudRate = 38400;
 203              		.loc 1 214 0
 204 0002 0D48     		ldr	r0, .L14
 205 0004 0D4B     		ldr	r3, .L14+4
 206 0006 0360     		str	r3, [r0]
 215:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_7B;
 207              		.loc 1 215 0
 208 0008 4FF41643 		mov	r3, #38400
 209 000c 4360     		str	r3, [r0, #4]
 216:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 210              		.loc 1 216 0
 211 000e 4FF08053 		mov	r3, #268435456
 212 0012 8360     		str	r3, [r0, #8]
 217:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 213              		.loc 1 217 0
 214 0014 0023     		movs	r3, #0
 215 0016 C360     		str	r3, [r0, #12]
 218:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 216              		.loc 1 218 0
 217 0018 0361     		str	r3, [r0, #16]
 219:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 218              		.loc 1 219 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 10


 219 001a 0C22     		movs	r2, #12
 220 001c 4261     		str	r2, [r0, #20]
 220:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 221              		.loc 1 220 0
 222 001e 8361     		str	r3, [r0, #24]
 221:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 223              		.loc 1 221 0
 224 0020 C361     		str	r3, [r0, #28]
 222:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 225              		.loc 1 222 0
 226 0022 0362     		str	r3, [r0, #32]
 223:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 227              		.loc 1 223 0
 228 0024 4362     		str	r3, [r0, #36]
 224:Src/main.c    ****   {
 229              		.loc 1 224 0
 230 0026 FFF7FEFF 		bl	HAL_UART_Init
 231              	.LVL9:
 232 002a 00B9     		cbnz	r0, .L13
 233 002c 08BD     		pop	{r3, pc}
 234              	.L13:
 226:Src/main.c    ****   }
 235              		.loc 1 226 0
 236 002e E221     		movs	r1, #226
 237 0030 0348     		ldr	r0, .L14+8
 238 0032 FFF7FEFF 		bl	_Error_Handler
 239              	.LVL10:
 240              	.L15:
 241 0036 00BF     		.align	2
 242              	.L14:
 243 0038 00000000 		.word	huart1
 244 003c 00380140 		.word	1073821696
 245 0040 00000000 		.word	.LC2
 246              		.cfi_endproc
 247              	.LFE131:
 249              		.section	.text.SystemClock_Config,"ax",%progbits
 250              		.align	1
 251              		.global	SystemClock_Config
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	SystemClock_Config:
 258              	.LFB130:
 160:Src/main.c    **** 
 259              		.loc 1 160 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 88
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 00B5     		push	{lr}
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 14, -4
 267 0002 97B0     		sub	sp, sp, #92
 268              	.LCFI6:
 269              		.cfi_def_cfa_offset 96
 168:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 11


 270              		.loc 1 168 0
 271 0004 0223     		movs	r3, #2
 272 0006 0C93     		str	r3, [sp, #48]
 169:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 273              		.loc 1 169 0
 274 0008 0123     		movs	r3, #1
 275 000a 1093     		str	r3, [sp, #64]
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 276              		.loc 1 170 0
 277 000c 1023     		movs	r3, #16
 278 000e 1193     		str	r3, [sp, #68]
 171:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 279              		.loc 1 171 0
 280 0010 0023     		movs	r3, #0
 281 0012 1393     		str	r3, [sp, #76]
 172:Src/main.c    ****   {
 282              		.loc 1 172 0
 283 0014 0CA8     		add	r0, sp, #48
 284 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 285              	.LVL11:
 286 001a 30BB     		cbnz	r0, .L21
 179:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 287              		.loc 1 179 0
 288 001c 0F23     		movs	r3, #15
 289 001e 0793     		str	r3, [sp, #28]
 181:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 290              		.loc 1 181 0
 291 0020 0021     		movs	r1, #0
 292 0022 0891     		str	r1, [sp, #32]
 182:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 293              		.loc 1 182 0
 294 0024 0991     		str	r1, [sp, #36]
 183:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 295              		.loc 1 183 0
 296 0026 0A91     		str	r1, [sp, #40]
 184:Src/main.c    **** 
 297              		.loc 1 184 0
 298 0028 0B91     		str	r1, [sp, #44]
 186:Src/main.c    ****   {
 299              		.loc 1 186 0
 300 002a 07A8     		add	r0, sp, #28
 301 002c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 302              	.LVL12:
 303 0030 F8B9     		cbnz	r0, .L22
 191:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 304              		.loc 1 191 0
 305 0032 0123     		movs	r3, #1
 306 0034 0193     		str	r3, [sp, #4]
 192:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 307              		.loc 1 192 0
 308 0036 0023     		movs	r3, #0
 309 0038 0393     		str	r3, [sp, #12]
 193:Src/main.c    ****   {
 310              		.loc 1 193 0
 311 003a 01A8     		add	r0, sp, #4
 312 003c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 313              	.LVL13:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 12


 314 0040 D8B9     		cbnz	r0, .L23
 200:Src/main.c    **** 
 315              		.loc 1 200 0
 316 0042 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 317              	.LVL14:
 318 0046 0F4B     		ldr	r3, .L24
 319 0048 A3FB0030 		umull	r3, r0, r3, r0
 320 004c 8009     		lsrs	r0, r0, #6
 321 004e FFF7FEFF 		bl	HAL_SYSTICK_Config
 322              	.LVL15:
 204:Src/main.c    **** 
 323              		.loc 1 204 0
 324 0052 0420     		movs	r0, #4
 325 0054 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 326              	.LVL16:
 207:Src/main.c    **** }
 327              		.loc 1 207 0
 328 0058 0022     		movs	r2, #0
 329 005a 0F21     		movs	r1, #15
 330 005c 4FF0FF30 		mov	r0, #-1
 331 0060 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 332              	.LVL17:
 208:Src/main.c    **** 
 333              		.loc 1 208 0
 334 0064 17B0     		add	sp, sp, #92
 335              	.LCFI7:
 336              		.cfi_remember_state
 337              		.cfi_def_cfa_offset 4
 338              		@ sp needed
 339 0066 5DF804FB 		ldr	pc, [sp], #4
 340              	.L21:
 341              	.LCFI8:
 342              		.cfi_restore_state
 174:Src/main.c    ****   }
 343              		.loc 1 174 0
 344 006a AE21     		movs	r1, #174
 345 006c 0648     		ldr	r0, .L24+4
 346 006e FFF7FEFF 		bl	_Error_Handler
 347              	.LVL18:
 348              	.L22:
 188:Src/main.c    ****   }
 349              		.loc 1 188 0
 350 0072 BC21     		movs	r1, #188
 351 0074 0448     		ldr	r0, .L24+4
 352 0076 FFF7FEFF 		bl	_Error_Handler
 353              	.LVL19:
 354              	.L23:
 195:Src/main.c    ****   }
 355              		.loc 1 195 0
 356 007a C321     		movs	r1, #195
 357 007c 0248     		ldr	r0, .L24+4
 358 007e FFF7FEFF 		bl	_Error_Handler
 359              	.LVL20:
 360              	.L25:
 361 0082 00BF     		.align	2
 362              	.L24:
 363 0084 D34D6210 		.word	274877907
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 13


 364 0088 00000000 		.word	.LC2
 365              		.cfi_endproc
 366              	.LFE130:
 368              		.section	.text.main,"ax",%progbits
 369              		.align	1
 370              		.global	main
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	main:
 377              	.LFB129:
  83:Src/main.c    **** 
 378              		.loc 1 83 0
 379              		.cfi_startproc
 380              		@ Volatile: function does not return.
 381              		@ args = 0, pretend = 0, frame = 24
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 00B5     		push	{lr}
 384              	.LCFI9:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 14, -4
 387 0002 87B0     		sub	sp, sp, #28
 388              	.LCFI10:
 389              		.cfi_def_cfa_offset 32
  92:Src/main.c    **** 
 390              		.loc 1 92 0
 391 0004 FFF7FEFF 		bl	HAL_Init
 392              	.LVL21:
  99:Src/main.c    **** 
 393              		.loc 1 99 0
 394 0008 FFF7FEFF 		bl	SystemClock_Config
 395              	.LVL22:
 106:Src/main.c    ****   MX_USART1_UART_Init();
 396              		.loc 1 106 0
 397 000c FFF7FEFF 		bl	MX_GPIO_Init
 398              	.LVL23:
 107:Src/main.c    **** 
 399              		.loc 1 107 0
 400 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 401              	.LVL24:
 127:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 402              		.loc 1 127 0
 403 0014 01AC     		add	r4, sp, #4
 404 0016 074D     		ldr	r5, .L29
 405 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 406 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 407 001c 2B68     		ldr	r3, [r5]
 408 001e 2360     		str	r3, [r4]
 128:Src/main.c    **** 
 409              		.loc 1 128 0
 410 0020 0021     		movs	r1, #0
 411 0022 01A8     		add	r0, sp, #4
 412 0024 FFF7FEFF 		bl	osThreadCreate
 413              	.LVL25:
 414 0028 034B     		ldr	r3, .L29+4
 415 002a 1860     		str	r0, [r3]
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 14


 140:Src/main.c    ****   
 416              		.loc 1 140 0
 417 002c FFF7FEFF 		bl	osKernelStart
 418              	.LVL26:
 419              	.L27:
 420 0030 FEE7     		b	.L27
 421              	.L30:
 422 0032 00BF     		.align	2
 423              	.L29:
 424 0034 00000000 		.word	.LANCHOR0
 425 0038 00000000 		.word	defaultTaskHandle
 426              		.cfi_endproc
 427              	.LFE129:
 429              		.comm	defaultTaskHandle,4,4
 430              		.comm	huart1,112,4
 431              		.section	.rodata
 432              		.align	2
 433              		.set	.LANCHOR0,. + 0
 434              	.LC3:
 435 0000 00000000 		.word	.LC0
 436 0004 00000000 		.word	StartDefaultTask
 437 0008 0000     		.short	0
 438 000a 0000     		.space	2
 439 000c 00000000 		.word	0
 440 0010 80000000 		.word	128
 441              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 442              		.align	2
 443              	.LC2:
 444 0000 5372632F 		.ascii	"Src/main.c\000"
 444      6D61696E 
 444      2E6300
 445              		.section	.rodata.str1.4,"aMS",%progbits,1
 446              		.align	2
 447              	.LC0:
 448 0000 64656661 		.ascii	"defaultTask\000"
 448      756C7454 
 448      61736B00 
 449              		.text
 450              	.Letext0:
 451              		.file 2 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\machine\\_default_types
 452              		.file 3 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\_stdint.h"
 453              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 454              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 455              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 456              		.file 7 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\lock.h"
 457              		.file 8 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\_types.h"
 458              		.file 9 "c:\\users\\victor\\desktop\\projet_robot\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef
 459              		.file 10 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\reent.h"
 460              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 461              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 462              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 463              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 464              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 465              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 466              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 467              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 468              		.file 19 "Inc/FreeRTOSConfig.h"
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 15


 469              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 470              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:125    .text.MX_GPIO_Init:00000088 $d
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:130    .text.StartDefaultTask:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:137    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:163    .text._Error_Handler:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:170    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:185    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:191    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:243    .text.MX_USART1_UART_Init:00000038 $d
                            *COM*:00000070 huart1
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:250    .text.SystemClock_Config:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:257    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:363    .text.SystemClock_Config:00000084 $d
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:369    .text.main:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:376    .text.main:00000000 main
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:424    .text.main:00000034 $d
                            *COM*:00000004 defaultTaskHandle
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:432    .rodata:00000000 $d
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:442    .rodata.MX_USART1_UART_Init.str1.4:00000000 $d
C:\Users\Victor\AppData\Local\Temp\ccaejcg3.s:446    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ReceptionMessage
Traduction
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
osThreadCreate
osKernelStart
