ARM GAS  /tmp/ccc1QhbW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"freertos.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.alumer_gauche,"ax",%progbits
  21              		.align	2
  22              		.global	alumer_gauche
  23              		.thumb
  24              		.thumb_func
  26              	alumer_gauche:
  27              	.LFB128:
  28              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   * This notice applies to any and all portions of this file
   7:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether
   9:Src/freertos.c ****   * inserted by the user or by software development tools
  10:Src/freertos.c ****   * are owned by their respective copyright owners.
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * Copyright (c) 2017 STMicroelectronics International N.V.
  13:Src/freertos.c ****   * All rights reserved.
  14:Src/freertos.c ****   *
  15:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without
  16:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/freertos.c ****   *
  18:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice,
  19:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  20:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  23:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other
  24:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products
  25:Src/freertos.c ****   *    derived from this software without specific written permission.
  26:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this
  27:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under
  30:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under
ARM GAS  /tmp/ccc1QhbW.s 			page 2


  31:Src/freertos.c ****   *    this license.
  32:Src/freertos.c ****   *
  33:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  34:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  35:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  36:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  38:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  41:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  42:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  43:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/freertos.c ****   *
  46:Src/freertos.c ****   ******************************************************************************
  47:Src/freertos.c ****   */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/freertos.c **** #include "FreeRTOS.h"
  51:Src/freertos.c **** #include "task.h"
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* USER CODE BEGIN Includes */
  54:Src/freertos.c **** #include "cmsis_os.h"
  55:Src/freertos.c **** #include "main.h"
  56:Src/freertos.c **** #include "stm32f3xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** #include <time.h>
  59:Src/freertos.c **** #include <stdlib.h>
  60:Src/freertos.c **** 
  61:Src/freertos.c **** #define PWM_MAX 320
  62:Src/freertos.c **** #define DELAY 1000
  63:Src/freertos.c **** #define OK 0x06
  64:Src/freertos.c **** /* USER CODE END Includes */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* USER CODE BEGIN Variables */
  69:Src/freertos.c **** extern TIM_HandleTypeDef htim3;
  70:Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  71:Src/freertos.c **** extern UART_HandleTypeDef huart2;
  72:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  73:Src/freertos.c **** 
  74:Src/freertos.c **** int flag_adc = 0;
  75:Src/freertos.c **** uint32_t adcValue = 0;
  76:Src/freertos.c **** 
  77:Src/freertos.c **** int flag_deplacement_fini = 0;
  78:Src/freertos.c **** int flag_rotation_finie =0;
  79:Src/freertos.c **** 
  80:Src/freertos.c **** int flag_haut = 0;
  81:Src/freertos.c **** int flag_bas = 0;
  82:Src/freertos.c **** int flag_droite = 0;
  83:Src/freertos.c **** int flag_gauche = 0;
  84:Src/freertos.c **** int flag_distance = 0;
  85:Src/freertos.c **** int flag_cap =0;
  86:Src/freertos.c **** int flag_present = 0;
  87:Src/freertos.c **** 
ARM GAS  /tmp/ccc1QhbW.s 			page 3


  88:Src/freertos.c **** struct Robot {
  89:Src/freertos.c ****     int posx;
  90:Src/freertos.c ****     int posy;
  91:Src/freertos.c ****     int orientation;
  92:Src/freertos.c **** };
  93:Src/freertos.c **** 
  94:Src/freertos.c **** struct Robot robot1, robot2; // Nous sommes robot1 et l'autre robot est  robot2
  95:Src/freertos.c **** 
  96:Src/freertos.c **** /* USER CODE END Variables */
  97:Src/freertos.c **** 
  98:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  99:Src/freertos.c **** 
 100:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 101:Src/freertos.c **** 
 102:Src/freertos.c **** /* BEGIN Fonctions pour les moteurs */
 103:Src/freertos.c **** void alumer_gauche(int sens) {
  29              		.loc 1 103 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 104:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, !sens);
  41              		.loc 1 104 0
  42 0002 074C     		ldr	r4, .L3
  43 0004 0546     		mov	r5, r0
  44 0006 B0FA80F2 		clz	r2, r0
  45 000a 5209     		lsrs	r2, r2, #5
  46 000c 2046     		mov	r0, r4
  47              	.LVL1:
  48 000e 0221     		movs	r1, #2
  49 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL2:
 105:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, sens);
  51              		.loc 1 105 0
  52 0014 2046     		mov	r0, r4
  53 0016 0121     		movs	r1, #1
  54 0018 EAB2     		uxtb	r2, r5
  55 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL3:
  57 001e 38BD     		pop	{r3, r4, r5, pc}
  58              	.LVL4:
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0020 00140048 		.word	1207964672
  63              		.cfi_endproc
  64              	.LFE128:
  66              		.section	.text.alumer_droite,"ax",%progbits
  67              		.align	2
  68              		.global	alumer_droite
ARM GAS  /tmp/ccc1QhbW.s 			page 4


  69              		.thumb
  70              		.thumb_func
  72              	alumer_droite:
  73              	.LFB129:
 106:Src/freertos.c **** }
 107:Src/freertos.c **** 
 108:Src/freertos.c **** void alumer_droite(int sens) {
  74              		.loc 1 108 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL5:
  79 0000 10B5     		push	{r4, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 4, -8
  83              		.cfi_offset 14, -4
 109:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, !sens);
  84              		.loc 1 109 0
  85 0002 0446     		mov	r4, r0
  86 0004 B0FA80F2 		clz	r2, r0
  87 0008 5209     		lsrs	r2, r2, #5
  88 000a 4FF09040 		mov	r0, #1207959552
  89              	.LVL6:
  90 000e 4FF40061 		mov	r1, #2048
  91 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL7:
 110:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, sens);
  93              		.loc 1 110 0
  94 0016 0348     		ldr	r0, .L7
  95 0018 2021     		movs	r1, #32
  96 001a E2B2     		uxtb	r2, r4
  97 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL8:
  99 0020 10BD     		pop	{r4, pc}
 100              	.LVL9:
 101              	.L8:
 102 0022 00BF     		.align	2
 103              	.L7:
 104 0024 00040048 		.word	1207960576
 105              		.cfi_endproc
 106              	.LFE129:
 108              		.section	.text.eteindre_gauche,"ax",%progbits
 109              		.align	2
 110              		.global	eteindre_gauche
 111              		.thumb
 112              		.thumb_func
 114              	eteindre_gauche:
 115              	.LFB130:
 111:Src/freertos.c **** }
 112:Src/freertos.c **** 
 113:Src/freertos.c **** void eteindre_gauche() {
 116              		.loc 1 113 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccc1QhbW.s 			page 5


 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 114:Src/freertos.c ****     HAL_GPIO_WritePin(ain1_GPIO_Port, ain1_Pin, 0);
 125              		.loc 1 114 0
 126 0002 064C     		ldr	r4, .L11
 127 0004 2046     		mov	r0, r4
 128 0006 0221     		movs	r1, #2
 129 0008 0022     		movs	r2, #0
 130 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL10:
 115:Src/freertos.c ****     HAL_GPIO_WritePin(ain2_GPIO_Port, ain2_Pin, 0);
 132              		.loc 1 115 0
 133 000e 2046     		mov	r0, r4
 134 0010 0121     		movs	r1, #1
 135 0012 0022     		movs	r2, #0
 136 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL11:
 138 0018 10BD     		pop	{r4, pc}
 139              	.L12:
 140 001a 00BF     		.align	2
 141              	.L11:
 142 001c 00140048 		.word	1207964672
 143              		.cfi_endproc
 144              	.LFE130:
 146              		.section	.text.eteindre_droite,"ax",%progbits
 147              		.align	2
 148              		.global	eteindre_droite
 149              		.thumb
 150              		.thumb_func
 152              	eteindre_droite:
 153              	.LFB131:
 116:Src/freertos.c **** }
 117:Src/freertos.c **** 
 118:Src/freertos.c **** void eteindre_droite() {
 154              		.loc 1 118 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
 119:Src/freertos.c ****     HAL_GPIO_WritePin(bin1_GPIO_Port, bin1_Pin, 0);
 163              		.loc 1 119 0
 164 0002 4FF09040 		mov	r0, #1207959552
 165 0006 4FF40061 		mov	r1, #2048
 166 000a 0022     		movs	r2, #0
 167 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL12:
 120:Src/freertos.c ****     HAL_GPIO_WritePin(bin2_GPIO_Port, bin2_Pin, 0);
 169              		.loc 1 120 0
 170 0010 0248     		ldr	r0, .L15
 171 0012 2021     		movs	r1, #32
 172 0014 0022     		movs	r2, #0
ARM GAS  /tmp/ccc1QhbW.s 			page 6


 173 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 174              	.LVL13:
 175 001a 08BD     		pop	{r3, pc}
 176              	.L16:
 177              		.align	2
 178              	.L15:
 179 001c 00040048 		.word	1207960576
 180              		.cfi_endproc
 181              	.LFE131:
 183              		.section	.text.pwm_max,"ax",%progbits
 184              		.align	2
 185              		.global	pwm_max
 186              		.thumb
 187              		.thumb_func
 189              	pwm_max:
 190              	.LFB132:
 121:Src/freertos.c **** }
 122:Src/freertos.c **** 
 123:Src/freertos.c **** void pwm_max() {
 191              		.loc 1 123 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 124:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, PWM_MAX);
 196              		.loc 1 124 0
 197 0000 034B     		ldr	r3, .L18
 198 0002 1B68     		ldr	r3, [r3]
 199 0004 4FF4A072 		mov	r2, #320
 200 0008 5A63     		str	r2, [r3, #52]
 125:Src/freertos.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, PWM_MAX);
 201              		.loc 1 125 0
 202 000a 1A64     		str	r2, [r3, #64]
 203 000c 7047     		bx	lr
 204              	.L19:
 205 000e 00BF     		.align	2
 206              	.L18:
 207 0010 00000000 		.word	htim3
 208              		.cfi_endproc
 209              	.LFE132:
 211              		.section	.text.accelerer,"ax",%progbits
 212              		.align	2
 213              		.global	accelerer
 214              		.thumb
 215              		.thumb_func
 217              	accelerer:
 218              	.LFB133:
 126:Src/freertos.c **** }
 127:Src/freertos.c **** 
 128:Src/freertos.c **** void accelerer() {
 219              		.loc 1 128 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccc1QhbW.s 			page 7


 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
 228              	.LVL14:
 129:Src/freertos.c ****     int pwm = 0;
 229              		.loc 1 129 0
 230 0002 0024     		movs	r4, #0
 130:Src/freertos.c ****     while (pwm != PWM_MAX) {
 231              		.loc 1 130 0
 232 0004 07E0     		b	.L21
 233              	.LVL15:
 234              	.L22:
 131:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 235              		.loc 1 131 0
 236 0006 064B     		ldr	r3, .L24
 237 0008 1B68     		ldr	r3, [r3]
 238 000a 5C63     		str	r4, [r3, #52]
 132:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 239              		.loc 1 132 0
 240 000c 1C64     		str	r4, [r3, #64]
 133:Src/freertos.c ****         pwm += 20;
 241              		.loc 1 133 0
 242 000e 1434     		adds	r4, r4, #20
 243              	.LVL16:
 134:Src/freertos.c ****         osDelay(50);
 244              		.loc 1 134 0
 245 0010 3220     		movs	r0, #50
 246 0012 FFF7FEFF 		bl	osDelay
 247              	.LVL17:
 248              	.L21:
 130:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 249              		.loc 1 130 0
 250 0016 B4F5A07F 		cmp	r4, #320
 251 001a F4D1     		bne	.L22
 135:Src/freertos.c ****     }
 136:Src/freertos.c **** }
 252              		.loc 1 136 0
 253 001c 10BD     		pop	{r4, pc}
 254              	.LVL18:
 255              	.L25:
 256 001e 00BF     		.align	2
 257              	.L24:
 258 0020 00000000 		.word	htim3
 259              		.cfi_endproc
 260              	.LFE133:
 262              		.section	.text.deccelerer,"ax",%progbits
 263              		.align	2
 264              		.global	deccelerer
 265              		.thumb
 266              		.thumb_func
 268              	deccelerer:
 269              	.LFB134:
 137:Src/freertos.c **** 
 138:Src/freertos.c **** void deccelerer() {
 270              		.loc 1 138 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccc1QhbW.s 			page 8


 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI5:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279              	.LVL19:
 139:Src/freertos.c ****     int pwm = PWM_MAX;
 280              		.loc 1 139 0
 281 0002 4FF4A074 		mov	r4, #320
 140:Src/freertos.c ****     while (pwm != 0) {
 282              		.loc 1 140 0
 283 0006 07E0     		b	.L27
 284              	.LVL20:
 285              	.L28:
 141:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 286              		.loc 1 141 0
 287 0008 054B     		ldr	r3, .L30
 288 000a 1B68     		ldr	r3, [r3]
 289 000c 5C63     		str	r4, [r3, #52]
 142:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, pwm);
 290              		.loc 1 142 0
 291 000e 1C64     		str	r4, [r3, #64]
 143:Src/freertos.c ****         pwm -= 20;
 292              		.loc 1 143 0
 293 0010 143C     		subs	r4, r4, #20
 294              	.LVL21:
 144:Src/freertos.c ****         osDelay(50);
 295              		.loc 1 144 0
 296 0012 3220     		movs	r0, #50
 297 0014 FFF7FEFF 		bl	osDelay
 298              	.LVL22:
 299              	.L27:
 140:Src/freertos.c ****         __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pwm);
 300              		.loc 1 140 0
 301 0018 002C     		cmp	r4, #0
 302 001a F5D1     		bne	.L28
 145:Src/freertos.c ****     }
 146:Src/freertos.c **** }
 303              		.loc 1 146 0
 304 001c 10BD     		pop	{r4, pc}
 305              	.LVL23:
 306              	.L31:
 307 001e 00BF     		.align	2
 308              	.L30:
 309 0020 00000000 		.word	htim3
 310              		.cfi_endproc
 311              	.LFE134:
 313              		.section	.text.avancer_robot,"ax",%progbits
 314              		.align	2
 315              		.global	avancer_robot
 316              		.thumb
 317              		.thumb_func
 319              	avancer_robot:
 320              	.LFB135:
 147:Src/freertos.c **** 
 148:Src/freertos.c **** void avancer_robot() {
 321              		.loc 1 148 0
ARM GAS  /tmp/ccc1QhbW.s 			page 9


 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI6:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 149:Src/freertos.c ****     alumer_droite(0);
 330              		.loc 1 149 0
 331 0002 0020     		movs	r0, #0
 332 0004 FFF7FEFF 		bl	alumer_droite
 333              	.LVL24:
 150:Src/freertos.c ****     alumer_gauche(0);
 334              		.loc 1 150 0
 335 0008 0020     		movs	r0, #0
 336 000a FFF7FEFF 		bl	alumer_gauche
 337              	.LVL25:
 151:Src/freertos.c ****     accelerer();
 338              		.loc 1 151 0
 339 000e FFF7FEFF 		bl	accelerer
 340              	.LVL26:
 152:Src/freertos.c ****     osDelay(470);//robot2 : 470 robot1 : 850
 341              		.loc 1 152 0
 342 0012 4FF4EB70 		mov	r0, #470
 343 0016 FFF7FEFF 		bl	osDelay
 344              	.LVL27:
 153:Src/freertos.c ****     deccelerer();
 345              		.loc 1 153 0
 346 001a FFF7FEFF 		bl	deccelerer
 347              	.LVL28:
 154:Src/freertos.c ****     eteindre_droite();
 348              		.loc 1 154 0
 349 001e FFF7FEFF 		bl	eteindre_droite
 350              	.LVL29:
 155:Src/freertos.c ****     eteindre_gauche();
 351              		.loc 1 155 0
 352 0022 FFF7FEFF 		bl	eteindre_gauche
 353              	.LVL30:
 354 0026 08BD     		pop	{r3, pc}
 355              		.cfi_endproc
 356              	.LFE135:
 358              		.section	.text.reculer_robot,"ax",%progbits
 359              		.align	2
 360              		.global	reculer_robot
 361              		.thumb
 362              		.thumb_func
 364              	reculer_robot:
 365              	.LFB136:
 156:Src/freertos.c **** }
 157:Src/freertos.c **** 
 158:Src/freertos.c **** void reculer_robot() {
 366              		.loc 1 158 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccc1QhbW.s 			page 10


 371              	.LCFI7:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 159:Src/freertos.c ****     alumer_droite(1);
 375              		.loc 1 159 0
 376 0002 0120     		movs	r0, #1
 377 0004 FFF7FEFF 		bl	alumer_droite
 378              	.LVL31:
 160:Src/freertos.c ****     alumer_gauche(1);
 379              		.loc 1 160 0
 380 0008 0120     		movs	r0, #1
 381 000a FFF7FEFF 		bl	alumer_gauche
 382              	.LVL32:
 161:Src/freertos.c ****     accelerer();
 383              		.loc 1 161 0
 384 000e FFF7FEFF 		bl	accelerer
 385              	.LVL33:
 162:Src/freertos.c ****     osDelay(470);//robot2 : 470 robot1 : 850
 386              		.loc 1 162 0
 387 0012 4FF4EB70 		mov	r0, #470
 388 0016 FFF7FEFF 		bl	osDelay
 389              	.LVL34:
 163:Src/freertos.c ****     deccelerer();
 390              		.loc 1 163 0
 391 001a FFF7FEFF 		bl	deccelerer
 392              	.LVL35:
 164:Src/freertos.c ****     eteindre_droite();
 393              		.loc 1 164 0
 394 001e FFF7FEFF 		bl	eteindre_droite
 395              	.LVL36:
 165:Src/freertos.c ****     eteindre_gauche();
 396              		.loc 1 165 0
 397 0022 FFF7FEFF 		bl	eteindre_gauche
 398              	.LVL37:
 399 0026 08BD     		pop	{r3, pc}
 400              		.cfi_endproc
 401              	.LFE136:
 403              		.section	.text.pivoter_gauche,"ax",%progbits
 404              		.align	2
 405              		.global	pivoter_gauche
 406              		.thumb
 407              		.thumb_func
 409              	pivoter_gauche:
 410              	.LFB137:
 166:Src/freertos.c **** }
 167:Src/freertos.c **** 
 168:Src/freertos.c **** 
 169:Src/freertos.c **** void pivoter_gauche() {
 411              		.loc 1 169 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI8:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
ARM GAS  /tmp/ccc1QhbW.s 			page 11


 419              		.cfi_offset 14, -4
 170:Src/freertos.c ****     pwm_max();
 420              		.loc 1 170 0
 421 0002 FFF7FEFF 		bl	pwm_max
 422              	.LVL38:
 171:Src/freertos.c ****     alumer_gauche(1);
 423              		.loc 1 171 0
 424 0006 0120     		movs	r0, #1
 425 0008 FFF7FEFF 		bl	alumer_gauche
 426              	.LVL39:
 172:Src/freertos.c ****     alumer_droite(0);
 427              		.loc 1 172 0
 428 000c 0020     		movs	r0, #0
 429 000e FFF7FEFF 		bl	alumer_droite
 430              	.LVL40:
 173:Src/freertos.c ****     osDelay(40);//robot 2 : 40 robot1 : 130
 431              		.loc 1 173 0
 432 0012 2820     		movs	r0, #40
 433 0014 FFF7FEFF 		bl	osDelay
 434              	.LVL41:
 174:Src/freertos.c ****     deccelerer();
 435              		.loc 1 174 0
 436 0018 FFF7FEFF 		bl	deccelerer
 437              	.LVL42:
 175:Src/freertos.c ****     eteindre_droite();
 438              		.loc 1 175 0
 439 001c FFF7FEFF 		bl	eteindre_droite
 440              	.LVL43:
 176:Src/freertos.c ****     eteindre_gauche();
 441              		.loc 1 176 0
 442 0020 FFF7FEFF 		bl	eteindre_gauche
 443              	.LVL44:
 444 0024 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE137:
 448 0026 00BF     		.section	.text.pivoter_droite,"ax",%progbits
 449              		.align	2
 450              		.global	pivoter_droite
 451              		.thumb
 452              		.thumb_func
 454              	pivoter_droite:
 455              	.LFB138:
 177:Src/freertos.c **** }
 178:Src/freertos.c **** 
 179:Src/freertos.c **** void pivoter_droite() {
 456              		.loc 1 179 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI9:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
 180:Src/freertos.c ****     pwm_max();
 465              		.loc 1 180 0
 466 0002 FFF7FEFF 		bl	pwm_max
ARM GAS  /tmp/ccc1QhbW.s 			page 12


 467              	.LVL45:
 181:Src/freertos.c ****     alumer_droite(1);
 468              		.loc 1 181 0
 469 0006 0120     		movs	r0, #1
 470 0008 FFF7FEFF 		bl	alumer_droite
 471              	.LVL46:
 182:Src/freertos.c ****     alumer_gauche(0);
 472              		.loc 1 182 0
 473 000c 0020     		movs	r0, #0
 474 000e FFF7FEFF 		bl	alumer_gauche
 475              	.LVL47:
 183:Src/freertos.c ****     osDelay(40);
 476              		.loc 1 183 0
 477 0012 2820     		movs	r0, #40
 478 0014 FFF7FEFF 		bl	osDelay
 479              	.LVL48:
 184:Src/freertos.c ****     deccelerer();
 480              		.loc 1 184 0
 481 0018 FFF7FEFF 		bl	deccelerer
 482              	.LVL49:
 185:Src/freertos.c ****     eteindre_droite();
 483              		.loc 1 185 0
 484 001c FFF7FEFF 		bl	eteindre_droite
 485              	.LVL50:
 186:Src/freertos.c ****     eteindre_gauche();
 486              		.loc 1 186 0
 487 0020 FFF7FEFF 		bl	eteindre_gauche
 488              	.LVL51:
 489 0024 08BD     		pop	{r3, pc}
 490              		.cfi_endproc
 491              	.LFE138:
 493 0026 00BF     		.section	.text.gestion_moteurs,"ax",%progbits
 494              		.align	2
 495              		.global	gestion_moteurs
 496              		.thumb
 497              		.thumb_func
 499              	gestion_moteurs:
 500              	.LFB139:
 187:Src/freertos.c **** }
 188:Src/freertos.c **** 
 189:Src/freertos.c **** void gestion_moteurs()
 190:Src/freertos.c **** {
 501              		.loc 1 190 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI10:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 191:Src/freertos.c ****     if (flag_distance > 0) {
 510              		.loc 1 191 0
 511 0002 1A4B     		ldr	r3, .L48
 512 0004 1B68     		ldr	r3, [r3]
 513 0006 002B     		cmp	r3, #0
 514 0008 05DD     		ble	.L41
ARM GAS  /tmp/ccc1QhbW.s 			page 13


 192:Src/freertos.c ****       avancer_robot();
 515              		.loc 1 192 0
 516 000a FFF7FEFF 		bl	avancer_robot
 517              	.LVL52:
 193:Src/freertos.c ****       flag_distance --;
 518              		.loc 1 193 0
 519 000e 174A     		ldr	r2, .L48
 520 0010 1368     		ldr	r3, [r2]
 521 0012 013B     		subs	r3, r3, #1
 522 0014 1360     		str	r3, [r2]
 523              	.L41:
 194:Src/freertos.c ****     }
 195:Src/freertos.c **** 
 196:Src/freertos.c ****     if (flag_distance < 0) {
 524              		.loc 1 196 0
 525 0016 154B     		ldr	r3, .L48
 526 0018 1B68     		ldr	r3, [r3]
 527 001a 002B     		cmp	r3, #0
 528 001c 05DA     		bge	.L42
 197:Src/freertos.c ****       reculer_robot();
 529              		.loc 1 197 0
 530 001e FFF7FEFF 		bl	reculer_robot
 531              	.LVL53:
 198:Src/freertos.c ****       flag_distance ++;
 532              		.loc 1 198 0
 533 0022 124A     		ldr	r2, .L48
 534 0024 1368     		ldr	r3, [r2]
 535 0026 0133     		adds	r3, r3, #1
 536 0028 1360     		str	r3, [r2]
 537              	.L42:
 199:Src/freertos.c ****     }
 200:Src/freertos.c **** 
 201:Src/freertos.c ****     if(flag_distance == 0){
 538              		.loc 1 201 0
 539 002a 104B     		ldr	r3, .L48
 540 002c 1B68     		ldr	r3, [r3]
 541 002e 13B9     		cbnz	r3, .L43
 202:Src/freertos.c ****       flag_deplacement_fini = 1;
 542              		.loc 1 202 0
 543 0030 0122     		movs	r2, #1
 544 0032 0F4B     		ldr	r3, .L48+4
 545 0034 1A60     		str	r2, [r3]
 546              	.L43:
 203:Src/freertos.c ****     }
 204:Src/freertos.c **** 
 205:Src/freertos.c ****     if (flag_cap > 0) {
 547              		.loc 1 205 0
 548 0036 0F4B     		ldr	r3, .L48+8
 549 0038 1B68     		ldr	r3, [r3]
 550 003a 002B     		cmp	r3, #0
 551 003c 05DD     		ble	.L44
 206:Src/freertos.c ****       pivoter_droite();
 552              		.loc 1 206 0
 553 003e FFF7FEFF 		bl	pivoter_droite
 554              	.LVL54:
 207:Src/freertos.c ****       flag_cap --;
 555              		.loc 1 207 0
ARM GAS  /tmp/ccc1QhbW.s 			page 14


 556 0042 0C4A     		ldr	r2, .L48+8
 557 0044 1368     		ldr	r3, [r2]
 558 0046 013B     		subs	r3, r3, #1
 559 0048 1360     		str	r3, [r2]
 560              	.L44:
 208:Src/freertos.c ****     }
 209:Src/freertos.c **** 
 210:Src/freertos.c ****     if (flag_cap < 0) {
 561              		.loc 1 210 0
 562 004a 0A4B     		ldr	r3, .L48+8
 563 004c 1B68     		ldr	r3, [r3]
 564 004e 002B     		cmp	r3, #0
 565 0050 05DA     		bge	.L45
 211:Src/freertos.c ****       pivoter_gauche();
 566              		.loc 1 211 0
 567 0052 FFF7FEFF 		bl	pivoter_gauche
 568              	.LVL55:
 212:Src/freertos.c ****       flag_cap ++;
 569              		.loc 1 212 0
 570 0056 074A     		ldr	r2, .L48+8
 571 0058 1368     		ldr	r3, [r2]
 572 005a 0133     		adds	r3, r3, #1
 573 005c 1360     		str	r3, [r2]
 574              	.L45:
 213:Src/freertos.c ****     }
 214:Src/freertos.c **** 
 215:Src/freertos.c ****     if(flag_cap == 0){
 575              		.loc 1 215 0
 576 005e 054B     		ldr	r3, .L48+8
 577 0060 1B68     		ldr	r3, [r3]
 578 0062 13B9     		cbnz	r3, .L40
 216:Src/freertos.c ****       flag_rotation_finie = 1;
 579              		.loc 1 216 0
 580 0064 0122     		movs	r2, #1
 581 0066 044B     		ldr	r3, .L48+12
 582 0068 1A60     		str	r2, [r3]
 583              	.L40:
 584 006a 08BD     		pop	{r3, pc}
 585              	.L49:
 586              		.align	2
 587              	.L48:
 588 006c 00000000 		.word	.LANCHOR0
 589 0070 00000000 		.word	.LANCHOR1
 590 0074 00000000 		.word	.LANCHOR2
 591 0078 00000000 		.word	.LANCHOR3
 592              		.cfi_endproc
 593              	.LFE139:
 595              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 596              		.align	2
 597              		.global	HAL_ADC_ConvCpltCallback
 598              		.thumb
 599              		.thumb_func
 601              	HAL_ADC_ConvCpltCallback:
 602              	.LFB140:
 217:Src/freertos.c ****     }
 218:Src/freertos.c **** }
 219:Src/freertos.c **** 
ARM GAS  /tmp/ccc1QhbW.s 			page 15


 220:Src/freertos.c **** /* END Fonctions pour les moteurs */
 221:Src/freertos.c **** 
 222:Src/freertos.c **** /* BEGIN Fonctions ADC */
 223:Src/freertos.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 603              		.loc 1 223 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              	.LVL56:
 608 0000 08B5     		push	{r3, lr}
 609              	.LCFI11:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 3, -8
 612              		.cfi_offset 14, -4
 224:Src/freertos.c ****     UNUSED(hadc);
 225:Src/freertos.c ****     adcValue = HAL_ADC_GetValue(hadc);
 613              		.loc 1 225 0
 614 0002 FFF7FEFF 		bl	HAL_ADC_GetValue
 615              	.LVL57:
 616 0006 034B     		ldr	r3, .L52
 617 0008 1860     		str	r0, [r3]
 226:Src/freertos.c ****     flag_adc = 1;
 618              		.loc 1 226 0
 619 000a 0122     		movs	r2, #1
 620 000c 024B     		ldr	r3, .L52+4
 621 000e 1A60     		str	r2, [r3]
 622 0010 08BD     		pop	{r3, pc}
 623              	.L53:
 624 0012 00BF     		.align	2
 625              	.L52:
 626 0014 00000000 		.word	.LANCHOR4
 627 0018 00000000 		.word	.LANCHOR5
 628              		.cfi_endproc
 629              	.LFE140:
 631              		.section	.text._write,"ax",%progbits
 632              		.align	2
 633              		.global	_write
 634              		.thumb
 635              		.thumb_func
 637              	_write:
 638              	.LFB141:
 227:Src/freertos.c **** }
 228:Src/freertos.c **** 
 229:Src/freertos.c **** int _write(int file, char *ptr, int len) {
 639              		.loc 1 229 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              	.LVL58:
 644 0000 10B5     		push	{r4, lr}
 645              	.LCFI12:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 4, -8
 648              		.cfi_offset 14, -4
 649 0002 1446     		mov	r4, r2
 230:Src/freertos.c ****     UNUSED(file);
 231:Src/freertos.c **** 
ARM GAS  /tmp/ccc1QhbW.s 			page 16


 232:Src/freertos.c ****     HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 10000);
 650              		.loc 1 232 0
 651 0004 0348     		ldr	r0, .L56
 652              	.LVL59:
 653 0006 92B2     		uxth	r2, r2
 654              	.LVL60:
 655 0008 42F21073 		movw	r3, #10000
 656 000c FFF7FEFF 		bl	HAL_UART_Transmit
 657              	.LVL61:
 233:Src/freertos.c ****     return len;
 234:Src/freertos.c **** }
 658              		.loc 1 234 0
 659 0010 2046     		mov	r0, r4
 660 0012 10BD     		pop	{r4, pc}
 661              	.LVL62:
 662              	.L57:
 663              		.align	2
 664              	.L56:
 665 0014 00000000 		.word	huart2
 666              		.cfi_endproc
 667              	.LFE141:
 669              		.section	.text.distance,"ax",%progbits
 670              		.align	2
 671              		.global	distance
 672              		.thumb
 673              		.thumb_func
 675              	distance:
 676              	.LFB142:
 235:Src/freertos.c **** 
 236:Src/freertos.c **** int distance() {
 677              		.loc 1 236 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL63:
 237:Src/freertos.c ****     int value = 0;
 238:Src/freertos.c ****     if (adcValue >= 3800) {
 683              		.loc 1 238 0
 684 0000 294B     		ldr	r3, .L89
 685 0002 1B68     		ldr	r3, [r3]
 686 0004 40F6D762 		movw	r2, #3799
 687 0008 9342     		cmp	r3, r2
 688 000a 01D8     		bhi	.L74
 237:Src/freertos.c ****     int value = 0;
 689              		.loc 1 237 0
 690 000c 0020     		movs	r0, #0
 691 000e 00E0     		b	.L59
 692              	.L74:
 239:Src/freertos.c ****         value = 6;
 693              		.loc 1 239 0
 694 0010 0620     		movs	r0, #6
 695              	.L59:
 696              	.LVL64:
 240:Src/freertos.c ****     }
 241:Src/freertos.c ****     if (adcValue >= 3750 && adcValue < 3800) {
 697              		.loc 1 241 0
ARM GAS  /tmp/ccc1QhbW.s 			page 17


 698 0012 A3F6A662 		subw	r2, r3, #3750
 699 0016 312A     		cmp	r2, #49
 700 0018 00D8     		bhi	.L60
 242:Src/freertos.c ****         value = 7;
 701              		.loc 1 242 0
 702 001a 0720     		movs	r0, #7
 703              	.LVL65:
 704              	.L60:
 243:Src/freertos.c ****     }
 244:Src/freertos.c ****     if (adcValue >= 3430 && adcValue < 3750) {
 705              		.loc 1 244 0
 706 001c A3F66652 		subw	r2, r3, #3430
 707 0020 B2F5A07F 		cmp	r2, #320
 708 0024 00D2     		bcs	.L61
 245:Src/freertos.c ****         value = 8;
 709              		.loc 1 245 0
 710 0026 0820     		movs	r0, #8
 711              	.LVL66:
 712              	.L61:
 246:Src/freertos.c ****     }
 247:Src/freertos.c ****     if (adcValue >= 3140 && adcValue < 3420) {
 713              		.loc 1 247 0
 714 0028 A3F64442 		subw	r2, r3, #3140
 715 002c B2F58C7F 		cmp	r2, #280
 716 0030 00D2     		bcs	.L62
 248:Src/freertos.c ****         value = 9;
 717              		.loc 1 248 0
 718 0032 0920     		movs	r0, #9
 719              	.LVL67:
 720              	.L62:
 249:Src/freertos.c ****     }
 250:Src/freertos.c ****     if (adcValue >= 2880 && adcValue < 3140) {
 721              		.loc 1 250 0
 722 0034 A3F53462 		sub	r2, r3, #2880
 723 0038 B2F5827F 		cmp	r2, #260
 724 003c 00D2     		bcs	.L63
 251:Src/freertos.c ****         value = 10;
 725              		.loc 1 251 0
 726 003e 0A20     		movs	r0, #10
 727              	.LVL68:
 728              	.L63:
 252:Src/freertos.c ****     }
 253:Src/freertos.c ****     if (adcValue >= 2690 && adcValue < 2880) {
 729              		.loc 1 253 0
 730 0040 A3F68222 		subw	r2, r3, #2690
 731 0044 BD2A     		cmp	r2, #189
 732 0046 00D8     		bhi	.L64
 254:Src/freertos.c ****         value = 11;
 733              		.loc 1 254 0
 734 0048 0B20     		movs	r0, #11
 735              	.LVL69:
 736              	.L64:
 255:Src/freertos.c ****     }
 256:Src/freertos.c ****     if (adcValue >= 2510 && adcValue < 2690) {
 737              		.loc 1 256 0
 738 004a A3F6CE12 		subw	r2, r3, #2510
 739 004e B32A     		cmp	r2, #179
ARM GAS  /tmp/ccc1QhbW.s 			page 18


 740 0050 00D8     		bhi	.L65
 257:Src/freertos.c ****         value = 12;
 741              		.loc 1 257 0
 742 0052 0C20     		movs	r0, #12
 743              	.LVL70:
 744              	.L65:
 258:Src/freertos.c ****     }
 259:Src/freertos.c ****     if (adcValue >= 2460 && adcValue < 2510) {
 745              		.loc 1 259 0
 746 0054 A3F69C12 		subw	r2, r3, #2460
 747 0058 312A     		cmp	r2, #49
 748 005a 00D8     		bhi	.L66
 260:Src/freertos.c ****         value = 13;
 749              		.loc 1 260 0
 750 005c 0D20     		movs	r0, #13
 751              	.LVL71:
 752              	.L66:
 261:Src/freertos.c ****     }
 262:Src/freertos.c ****     if (adcValue >= 2250 && adcValue < 2460) {
 753              		.loc 1 262 0
 754 005e A3F6CA02 		subw	r2, r3, #2250
 755 0062 D12A     		cmp	r2, #209
 756 0064 00D8     		bhi	.L67
 263:Src/freertos.c ****         value = 14;
 757              		.loc 1 263 0
 758 0066 0E20     		movs	r0, #14
 759              	.LVL72:
 760              	.L67:
 264:Src/freertos.c ****     }
 265:Src/freertos.c ****     if (adcValue >= 2140 && adcValue < 2250) {
 761              		.loc 1 265 0
 762 0068 A3F65C02 		subw	r2, r3, #2140
 763 006c 6D2A     		cmp	r2, #109
 764 006e 00D8     		bhi	.L68
 266:Src/freertos.c ****         value = 15;
 765              		.loc 1 266 0
 766 0070 0F20     		movs	r0, #15
 767              	.LVL73:
 768              	.L68:
 267:Src/freertos.c ****     }
 268:Src/freertos.c ****     if (adcValue >= 2070 && adcValue < 2140) {
 769              		.loc 1 268 0
 770 0072 A3F61602 		subw	r2, r3, #2070
 771 0076 452A     		cmp	r2, #69
 772 0078 00D8     		bhi	.L69
 269:Src/freertos.c ****         value = 16;
 773              		.loc 1 269 0
 774 007a 1020     		movs	r0, #16
 775              	.LVL74:
 776              	.L69:
 270:Src/freertos.c ****     }
 271:Src/freertos.c ****     if (adcValue >= 1970 && adcValue < 2070) {
 777              		.loc 1 271 0
 778 007c A3F2B272 		subw	r2, r3, #1970
 779 0080 632A     		cmp	r2, #99
 780 0082 00D8     		bhi	.L70
 272:Src/freertos.c ****         value = 17;
ARM GAS  /tmp/ccc1QhbW.s 			page 19


 781              		.loc 1 272 0
 782 0084 1120     		movs	r0, #17
 783              	.LVL75:
 784              	.L70:
 273:Src/freertos.c ****     }
 274:Src/freertos.c ****     if (adcValue >= 1910 && adcValue < 1970) {
 785              		.loc 1 274 0
 786 0086 A3F27672 		subw	r2, r3, #1910
 787 008a 3B2A     		cmp	r2, #59
 788 008c 00D8     		bhi	.L71
 275:Src/freertos.c ****         value = 18;
 789              		.loc 1 275 0
 790 008e 1220     		movs	r0, #18
 791              	.LVL76:
 792              	.L71:
 276:Src/freertos.c ****     }
 277:Src/freertos.c ****     if (adcValue >= 1850 && adcValue < 1910) {
 793              		.loc 1 277 0
 794 0090 A3F23A72 		subw	r2, r3, #1850
 795 0094 3B2A     		cmp	r2, #59
 796 0096 00D8     		bhi	.L72
 278:Src/freertos.c ****         value = 19;
 797              		.loc 1 278 0
 798 0098 1320     		movs	r0, #19
 799              	.LVL77:
 800              	.L72:
 279:Src/freertos.c ****     }
 280:Src/freertos.c ****     if (adcValue >= 1780 && adcValue < 1850) {
 801              		.loc 1 280 0
 802 009a A3F2F463 		subw	r3, r3, #1780
 803 009e 452B     		cmp	r3, #69
 804 00a0 00D8     		bhi	.L73
 281:Src/freertos.c ****         value = 20;
 805              		.loc 1 281 0
 806 00a2 1420     		movs	r0, #20
 807              	.LVL78:
 808              	.L73:
 282:Src/freertos.c ****     }
 283:Src/freertos.c ****      //printf(" %d\n\r", adcValue);
 284:Src/freertos.c ****      //printf(" %d\n\r", value);
 285:Src/freertos.c ****     return(value);
 286:Src/freertos.c **** }
 809              		.loc 1 286 0
 810 00a4 7047     		bx	lr
 811              	.L90:
 812 00a6 00BF     		.align	2
 813              	.L89:
 814 00a8 00000000 		.word	.LANCHOR4
 815              		.cfi_endproc
 816              	.LFE142:
 818              		.section	.text.estPresent,"ax",%progbits
 819              		.align	2
 820              		.global	estPresent
 821              		.thumb
 822              		.thumb_func
 824              	estPresent:
 825              	.LFB143:
ARM GAS  /tmp/ccc1QhbW.s 			page 20


 287:Src/freertos.c **** 
 288:Src/freertos.c **** void estPresent() {
 826              		.loc 1 288 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830 0000 08B5     		push	{r3, lr}
 831              	.LCFI13:
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 3, -8
 834              		.cfi_offset 14, -4
 289:Src/freertos.c ****     int value;
 290:Src/freertos.c ****     value = distance();
 835              		.loc 1 290 0
 836 0002 FFF7FEFF 		bl	distance
 837              	.LVL79:
 291:Src/freertos.c ****     if (value != 0 && value <= 20) {
 838              		.loc 1 291 0
 839 0006 28B1     		cbz	r0, .L92
 840              		.loc 1 291 0 is_stmt 0 discriminator 1
 841 0008 1428     		cmp	r0, #20
 842 000a 03DC     		bgt	.L92
 292:Src/freertos.c ****         flag_present = 1;
 843              		.loc 1 292 0 is_stmt 1
 844 000c 0122     		movs	r2, #1
 845 000e 034B     		ldr	r3, .L95
 846 0010 1A60     		str	r2, [r3]
 847 0012 08BD     		pop	{r3, pc}
 848              	.L92:
 293:Src/freertos.c ****     }
 294:Src/freertos.c ****     else{
 295:Src/freertos.c ****         flag_present = 0;
 849              		.loc 1 295 0
 850 0014 0022     		movs	r2, #0
 851 0016 014B     		ldr	r3, .L95
 852 0018 1A60     		str	r2, [r3]
 853 001a 08BD     		pop	{r3, pc}
 854              	.L96:
 855              		.align	2
 856              	.L95:
 857 001c 00000000 		.word	.LANCHOR6
 858              		.cfi_endproc
 859              	.LFE143:
 861              		.section	.text.EnvoiMessage,"ax",%progbits
 862              		.align	2
 863              		.global	EnvoiMessage
 864              		.thumb
 865              		.thumb_func
 867              	EnvoiMessage:
 868              	.LFB144:
 296:Src/freertos.c ****     }
 297:Src/freertos.c ****      //printf("%d\n\r", flag_present);
 298:Src/freertos.c **** }
 299:Src/freertos.c **** 
 300:Src/freertos.c **** /* END Fonctions ADC */
 301:Src/freertos.c **** 
 302:Src/freertos.c **** /* BEGIN Fonctions UART */
ARM GAS  /tmp/ccc1QhbW.s 			page 21


 303:Src/freertos.c ****     void EnvoiMessage(uint8_t data){
 869              		.loc 1 303 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL80:
 874 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 875              	.LCFI14:
 876              		.cfi_def_cfa_offset 32
 877              		.cfi_offset 4, -32
 878              		.cfi_offset 5, -28
 879              		.cfi_offset 6, -24
 880              		.cfi_offset 7, -20
 881              		.cfi_offset 8, -16
 882              		.cfi_offset 9, -12
 883              		.cfi_offset 10, -8
 884              		.cfi_offset 14, -4
 885 0004 82B0     		sub	sp, sp, #8
 886              	.LCFI15:
 887              		.cfi_def_cfa_offset 40
 304:Src/freertos.c ****         uint8_t eun, b, edeux, equatre, ehuit,eseize, etrentedeux, esoixantequatre, ecentvingthuit,
 305:Src/freertos.c **** 
 306:Src/freertos.c ****         eun = (data & 0x01);
 888              		.loc 1 306 0
 889 0006 00F0010E 		and	lr, r0, #1
 890              	.LVL81:
 307:Src/freertos.c ****         edeux = (data & 0x02)/2;
 891              		.loc 1 307 0
 892 000a C0F34006 		ubfx	r6, r0, #1, #1
 893              	.LVL82:
 308:Src/freertos.c ****         equatre =(data & 0x04)/4;
 894              		.loc 1 308 0
 895 000e 00F00403 		and	r3, r0, #4
 896 0012 DBB2     		uxtb	r3, r3
 897 0014 9B10     		asrs	r3, r3, #2
 898 0016 DBB2     		uxtb	r3, r3
 899              	.LVL83:
 309:Src/freertos.c ****         ehuit = (data & 0x08)/8;
 900              		.loc 1 309 0
 901 0018 00F00801 		and	r1, r0, #8
 902 001c C9B2     		uxtb	r1, r1
 903 001e C910     		asrs	r1, r1, #3
 904 0020 CFB2     		uxtb	r7, r1
 905              	.LVL84:
 310:Src/freertos.c ****         eseize = (data & 0x10)/16;
 906              		.loc 1 310 0
 907 0022 00F01004 		and	r4, r0, #16
 908 0026 E4B2     		uxtb	r4, r4
 909 0028 2411     		asrs	r4, r4, #4
 910 002a 5FFA84FC 		uxtb	ip, r4
 911              	.LVL85:
 311:Src/freertos.c ****         etrentedeux = (data & 0x20)/32;
 912              		.loc 1 311 0
 913 002e 00F02002 		and	r2, r0, #32
 914 0032 D2B2     		uxtb	r2, r2
 915 0034 5211     		asrs	r2, r2, #5
 916 0036 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccc1QhbW.s 			page 22


 917              	.LVL86:
 312:Src/freertos.c ****         esoixantequatre = (data & 0x40)/64;
 918              		.loc 1 312 0
 919 0038 00F04005 		and	r5, r0, #64
 920 003c EDB2     		uxtb	r5, r5
 921 003e AD11     		asrs	r5, r5, #6
 922 0040 5FFA85F8 		uxtb	r8, r5
 923              	.LVL87:
 313:Src/freertos.c ****         ecentvingthuit = (data & 0x80)/128;
 924              		.loc 1 313 0
 925 0044 00F08000 		and	r0, r0, #128
 926              	.LVL88:
 927 0048 C011     		asrs	r0, r0, #7
 928 004a C0B2     		uxtb	r0, r0
 929              	.LVL89:
 314:Src/freertos.c **** 
 315:Src/freertos.c ****         b =  (ecentvingthuit^etrentedeux)*32 + (ecentvingthuit^esoixantequatre)*16 + (esoixantequat
 930              		.loc 1 315 0
 931 004c 80EA020A 		eor	r10, r0, r2
 932 0050 80EA0809 		eor	r9, r0, r8
 933 0054 09EB4A09 		add	r9, r9, r10, lsl #1
 934 0058 88EA0208 		eor	r8, r8, r2
 935              	.LVL90:
 936 005c 08EB4908 		add	r8, r8, r9, lsl #1
 937 0060 00EB4800 		add	r0, r0, r8, lsl #1
 938              	.LVL91:
 939 0064 05EB4000 		add	r0, r5, r0, lsl #1
 940 0068 02EB4002 		add	r2, r2, r0, lsl #1
 941              	.LVL92:
 942 006c 8DF80720 		strb	r2, [sp, #7]
 316:Src/freertos.c ****         k = (eseize^equatre)*32 +  (eseize^ehuit)*16 + (ehuit^equatre)*8 + eseize*4  + ehuit*2 + eq
 943              		.loc 1 316 0
 944 0070 8CEA0302 		eor	r2, ip, r3
 945 0074 8CEA070C 		eor	ip, ip, r7
 946              	.LVL93:
 947 0078 0CEB420C 		add	ip, ip, r2, lsl #1
 948 007c 5F40     		eors	r7, r7, r3
 949              	.LVL94:
 950 007e 07EB4C07 		add	r7, r7, ip, lsl #1
 951 0082 04EB4707 		add	r7, r4, r7, lsl #1
 952 0086 01EB4701 		add	r1, r1, r7, lsl #1
 953              	.LVL95:
 954 008a 03EB4103 		add	r3, r3, r1, lsl #1
 955              	.LVL96:
 956 008e 8DF80630 		strb	r3, [sp, #6]
 317:Src/freertos.c ****         z = (0^eun)*32 + (0^edeux)*16 + (eun^edeux)*8 +edeux*2  + eun;
 957              		.loc 1 317 0
 958 0092 F3B2     		uxtb	r3, r6
 959 0094 03EB4E02 		add	r2, r3, lr, lsl #1
 960 0098 86EA0E06 		eor	r6, r6, lr
 961              	.LVL97:
 962 009c 06EB4206 		add	r6, r6, r2, lsl #1
 963 00a0 03EB8606 		add	r6, r3, r6, lsl #2
 964 00a4 0EEB460E 		add	lr, lr, r6, lsl #1
 965              	.LVL98:
 966 00a8 8DF805E0 		strb	lr, [sp, #5]
 318:Src/freertos.c **** 
ARM GAS  /tmp/ccc1QhbW.s 			page 23


 319:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &b, sizeof(data), 0xEEEE);
 967              		.loc 1 319 0
 968 00ac 124C     		ldr	r4, .L105
 969              	.LVL99:
 970 00ae 2046     		mov	r0, r4
 971 00b0 0DF10701 		add	r1, sp, #7
 972 00b4 0122     		movs	r2, #1
 973 00b6 4EF6EE63 		movw	r3, #61166
 974              	.LVL100:
 975 00ba FFF7FEFF 		bl	HAL_UART_Transmit
 976              	.LVL101:
 320:Src/freertos.c ****         osDelay(2);
 977              		.loc 1 320 0
 978 00be 0220     		movs	r0, #2
 979 00c0 FFF7FEFF 		bl	osDelay
 980              	.LVL102:
 321:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &k, sizeof(data), 0xEEEE);
 981              		.loc 1 321 0
 982 00c4 2046     		mov	r0, r4
 983 00c6 0DF10601 		add	r1, sp, #6
 984 00ca 0122     		movs	r2, #1
 985 00cc 4EF6EE63 		movw	r3, #61166
 986 00d0 FFF7FEFF 		bl	HAL_UART_Transmit
 987              	.LVL103:
 322:Src/freertos.c ****         osDelay(2);
 988              		.loc 1 322 0
 989 00d4 0220     		movs	r0, #2
 990 00d6 FFF7FEFF 		bl	osDelay
 991              	.LVL104:
 323:Src/freertos.c ****         HAL_UART_Transmit(&huart1, &z, sizeof(data), 0xEEEE);
 992              		.loc 1 323 0
 993 00da 2046     		mov	r0, r4
 994 00dc 0DF10501 		add	r1, sp, #5
 995 00e0 0122     		movs	r2, #1
 996 00e2 4EF6EE63 		movw	r3, #61166
 997 00e6 FFF7FEFF 		bl	HAL_UART_Transmit
 998              	.LVL105:
 324:Src/freertos.c ****         osDelay(2);
 999              		.loc 1 324 0
 1000 00ea 0220     		movs	r0, #2
 1001 00ec FFF7FEFF 		bl	osDelay
 1002              	.LVL106:
 325:Src/freertos.c ****     }
 1003              		.loc 1 325 0
 1004 00f0 02B0     		add	sp, sp, #8
 1005              	.LCFI16:
 1006              		.cfi_def_cfa_offset 32
 1007              		@ sp needed
 1008 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1009              	.LVL107:
 1010              	.L106:
 1011 00f6 00BF     		.align	2
 1012              	.L105:
 1013 00f8 00000000 		.word	huart1
 1014              		.cfi_endproc
 1015              	.LFE144:
 1017              		.section	.text.ReceptionMessage,"ax",%progbits
ARM GAS  /tmp/ccc1QhbW.s 			page 24


 1018              		.align	2
 1019              		.global	ReceptionMessage
 1020              		.thumb
 1021              		.thumb_func
 1023              	ReceptionMessage:
 1024              	.LFB145:
 326:Src/freertos.c **** 
 327:Src/freertos.c ****     int ReceptionMessage(){
 1025              		.loc 1 327 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 8
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1030              	.LCFI17:
 1031              		.cfi_def_cfa_offset 28
 1032              		.cfi_offset 4, -28
 1033              		.cfi_offset 5, -24
 1034              		.cfi_offset 6, -20
 1035              		.cfi_offset 7, -16
 1036              		.cfi_offset 8, -12
 1037              		.cfi_offset 9, -8
 1038              		.cfi_offset 14, -4
 1039 0004 83B0     		sub	sp, sp, #12
 1040              	.LCFI18:
 1041              		.cfi_def_cfa_offset 40
 328:Src/freertos.c ****         uint8_t r, m, n, v, run, rdeux, rquatre, rhuit, rseize, rtrentedeux, ok, i;
 329:Src/freertos.c ****         uint8_t rec[3];
 330:Src/freertos.c ****         HAL_UART_Receive(&huart1, &r, sizeof(uint8_t), 0xEEEE);
 1042              		.loc 1 330 0
 1043 0006 414C     		ldr	r4, .L125
 1044 0008 2046     		mov	r0, r4
 1045 000a 0DF10701 		add	r1, sp, #7
 1046 000e 0122     		movs	r2, #1
 1047 0010 4EF6EE63 		movw	r3, #61166
 1048 0014 FFF7FEFF 		bl	HAL_UART_Receive
 1049              	.LVL108:
 331:Src/freertos.c ****         HAL_UART_Receive(&huart1, &m, sizeof(uint8_t), 0xEEEE);
 1050              		.loc 1 331 0
 1051 0018 2046     		mov	r0, r4
 1052 001a 0DF10601 		add	r1, sp, #6
 1053 001e 0122     		movs	r2, #1
 1054 0020 4EF6EE63 		movw	r3, #61166
 1055 0024 FFF7FEFF 		bl	HAL_UART_Receive
 1056              	.LVL109:
 332:Src/freertos.c ****         HAL_UART_Receive(&huart1, &n, sizeof(uint8_t), 0xEEEE);
 1057              		.loc 1 332 0
 1058 0028 2046     		mov	r0, r4
 1059 002a 0DF10501 		add	r1, sp, #5
 1060 002e 0122     		movs	r2, #1
 1061 0030 4EF6EE63 		movw	r3, #61166
 1062 0034 FFF7FEFF 		bl	HAL_UART_Receive
 1063              	.LVL110:
 333:Src/freertos.c **** 
 334:Src/freertos.c ****         rec[0] = r;
 1064              		.loc 1 334 0
 1065 0038 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 1066 003c 8DF800C0 		strb	ip, [sp]
ARM GAS  /tmp/ccc1QhbW.s 			page 25


 335:Src/freertos.c ****         rec[1] = m;
 1067              		.loc 1 335 0
 1068 0040 9DF80650 		ldrb	r5, [sp, #6]	@ zero_extendqisi2
 1069 0044 8DF80150 		strb	r5, [sp, #1]
 336:Src/freertos.c ****         rec[2] = n;
 1070              		.loc 1 336 0
 1071 0048 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
 1072 004c 8DF80280 		strb	r8, [sp, #2]
 1073              	.LVL111:
 337:Src/freertos.c ****         ok = 1;
 338:Src/freertos.c ****         for (i =0; i<3; i++) {
 1074              		.loc 1 338 0
 1075 0050 0024     		movs	r4, #0
 337:Src/freertos.c ****         ok = 1;
 1076              		.loc 1 337 0
 1077 0052 4FF0010E 		mov	lr, #1
 1078              		.loc 1 338 0
 1079 0056 2DE0     		b	.L108
 1080              	.LVL112:
 1081              	.L116:
 339:Src/freertos.c ****             run = (rec[i] & 0x01);
 1082              		.loc 1 339 0
 1083 0058 02AB     		add	r3, sp, #8
 1084 005a 2344     		add	r3, r3, r4
 1085 005c 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1086 0060 03F00106 		and	r6, r3, #1
 1087              	.LVL113:
 340:Src/freertos.c ****             rdeux = (rec[i] & 0x02)/2;
 1088              		.loc 1 340 0
 1089 0064 C3F34007 		ubfx	r7, r3, #1, #1
 1090              	.LVL114:
 341:Src/freertos.c ****             rquatre =(rec[i] & 0x04)/4;
 1091              		.loc 1 341 0
 1092 0068 03F00402 		and	r2, r3, #4
 1093 006c D2B2     		uxtb	r2, r2
 1094 006e 9210     		asrs	r2, r2, #2
 1095 0070 D2B2     		uxtb	r2, r2
 1096              	.LVL115:
 342:Src/freertos.c ****             rhuit = (rec[i] & 0x08)/8;
 1097              		.loc 1 342 0
 1098 0072 03F00800 		and	r0, r3, #8
 1099 0076 C0B2     		uxtb	r0, r0
 1100 0078 C010     		asrs	r0, r0, #3
 1101 007a C0B2     		uxtb	r0, r0
 1102              	.LVL116:
 343:Src/freertos.c ****             rseize = (rec[i] & 0x10)/16;
 1103              		.loc 1 343 0
 1104 007c 03F01001 		and	r1, r3, #16
 1105 0080 C9B2     		uxtb	r1, r1
 1106 0082 0911     		asrs	r1, r1, #4
 1107 0084 C9B2     		uxtb	r1, r1
 1108              	.LVL117:
 344:Src/freertos.c ****             rtrentedeux = (rec[i] & 0x20)/32;
 1109              		.loc 1 344 0
 1110 0086 03F02003 		and	r3, r3, #32
 1111 008a DBB2     		uxtb	r3, r3
 1112 008c 5B11     		asrs	r3, r3, #5
ARM GAS  /tmp/ccc1QhbW.s 			page 26


 1113 008e DBB2     		uxtb	r3, r3
 1114              	.LVL118:
 345:Src/freertos.c ****             if ((run^rdeux) != rhuit) ok =0;
 1115              		.loc 1 345 0
 1116 0090 86EA0709 		eor	r9, r6, r7
 1117 0094 8145     		cmp	r9, r0
 1118 0096 01D0     		beq	.L113
 1119 0098 4FF0000E 		mov	lr, #0
 1120              	.LVL119:
 1121              	.L113:
 346:Src/freertos.c ****             if ((rdeux^rquatre) != rseize) ok =0;
 1122              		.loc 1 346 0
 1123 009c 5740     		eors	r7, r7, r2
 1124              	.LVL120:
 1125 009e 8F42     		cmp	r7, r1
 1126 00a0 01D0     		beq	.L114
 1127 00a2 4FF0000E 		mov	lr, #0
 1128              	.LVL121:
 1129              	.L114:
 347:Src/freertos.c ****             if ((rquatre^run) != rtrentedeux) ok = 0;
 1130              		.loc 1 347 0
 1131 00a6 7240     		eors	r2, r2, r6
 1132              	.LVL122:
 1133 00a8 9A42     		cmp	r2, r3
 1134 00aa 01D0     		beq	.L115
 1135 00ac 4FF0000E 		mov	lr, #0
 1136              	.LVL123:
 1137              	.L115:
 338:Src/freertos.c ****             run = (rec[i] & 0x01);
 1138              		.loc 1 338 0 discriminator 2
 1139 00b0 0134     		adds	r4, r4, #1
 1140              	.LVL124:
 1141 00b2 E4B2     		uxtb	r4, r4
 1142              	.LVL125:
 1143              	.L108:
 338:Src/freertos.c ****             run = (rec[i] & 0x01);
 1144              		.loc 1 338 0 is_stmt 0 discriminator 1
 1145 00b4 022C     		cmp	r4, #2
 1146 00b6 CFD9     		bls	.L116
 348:Src/freertos.c ****         }
 349:Src/freertos.c ****         r =  (r & 0x07)*32;
 1147              		.loc 1 349 0 is_stmt 1
 1148 00b8 0CF0070C 		and	ip, ip, #7
 1149 00bc 4FEA4C1C 		lsl	ip, ip, #5
 1150 00c0 8DF807C0 		strb	ip, [sp, #7]
 350:Src/freertos.c ****         m =  (m & 0x07)*4;
 1151              		.loc 1 350 0
 1152 00c4 05F00703 		and	r3, r5, #7
 1153 00c8 9D00     		lsls	r5, r3, #2
 1154 00ca 8DF80650 		strb	r5, [sp, #6]
 351:Src/freertos.c ****         n =  (n & 0x07);
 1155              		.loc 1 351 0
 1156 00ce 08F00708 		and	r8, r8, #7
 1157 00d2 8DF80580 		strb	r8, [sp, #5]
 352:Src/freertos.c ****         v =  r + m + n;
 1158              		.loc 1 352 0
 1159 00d6 6544     		add	r5, r5, ip
ARM GAS  /tmp/ccc1QhbW.s 			page 27


 1160 00d8 4544     		add	r5, r5, r8
 1161 00da EDB2     		uxtb	r5, r5
 1162              	.LVL126:
 353:Src/freertos.c ****         if (ok == 1) {
 1163              		.loc 1 353 0
 1164 00dc BEF1000F 		cmp	lr, #0
 1165 00e0 0CD1     		bne	.L123
 354:Src/freertos.c ****             for (i = 0; i<5; i++)
 355:Src/freertos.c ****             {
 356:Src/freertos.c ****                 HAL_GPIO_TogglePin(led_GPIO_Port, led_Pin);
 357:Src/freertos.c ****                 osDelay(500);
 358:Src/freertos.c ****             }
 359:Src/freertos.c ****             return(v);
 360:Src/freertos.c ****         }
 361:Src/freertos.c ****         else return(0);
 1166              		.loc 1 361 0
 1167 00e2 0020     		movs	r0, #0
 1168 00e4 0EE0     		b	.L118
 1169              	.LVL127:
 1170              	.L119:
 356:Src/freertos.c ****                 osDelay(500);
 1171              		.loc 1 356 0 discriminator 3
 1172 00e6 0A48     		ldr	r0, .L125+4
 1173 00e8 4021     		movs	r1, #64
 1174 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1175              	.LVL128:
 357:Src/freertos.c ****             }
 1176              		.loc 1 357 0 discriminator 3
 1177 00ee 4FF4FA70 		mov	r0, #500
 1178 00f2 FFF7FEFF 		bl	osDelay
 1179              	.LVL129:
 354:Src/freertos.c ****             for (i = 0; i<5; i++)
 1180              		.loc 1 354 0 discriminator 3
 1181 00f6 0134     		adds	r4, r4, #1
 1182              	.LVL130:
 1183 00f8 E4B2     		uxtb	r4, r4
 1184              	.LVL131:
 1185 00fa 00E0     		b	.L117
 1186              	.LVL132:
 1187              	.L123:
 1188 00fc 0024     		movs	r4, #0
 1189              	.LVL133:
 1190              	.L117:
 354:Src/freertos.c ****             for (i = 0; i<5; i++)
 1191              		.loc 1 354 0 is_stmt 0 discriminator 1
 1192 00fe 042C     		cmp	r4, #4
 1193 0100 F1D9     		bls	.L119
 359:Src/freertos.c ****         }
 1194              		.loc 1 359 0 is_stmt 1
 1195 0102 2846     		mov	r0, r5
 1196              	.L118:
 362:Src/freertos.c ****     }
 1197              		.loc 1 362 0
 1198 0104 03B0     		add	sp, sp, #12
 1199              	.LCFI19:
 1200              		.cfi_def_cfa_offset 28
 1201              		@ sp needed
ARM GAS  /tmp/ccc1QhbW.s 			page 28


 1202 0106 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1203              	.LVL134:
 1204              	.L126:
 1205 010a 00BF     		.align	2
 1206              	.L125:
 1207 010c 00000000 		.word	huart1
 1208 0110 00040048 		.word	1207960576
 1209              		.cfi_endproc
 1210              	.LFE145:
 1212              		.section	.text.recoitpos,"ax",%progbits
 1213              		.align	2
 1214              		.global	recoitpos
 1215              		.thumb
 1216              		.thumb_func
 1218              	recoitpos:
 1219              	.LFB146:
 363:Src/freertos.c **** 
 364:Src/freertos.c ****     void recoitpos(){
 1220              		.loc 1 364 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224 0000 38B5     		push	{r3, r4, r5, lr}
 1225              	.LCFI20:
 1226              		.cfi_def_cfa_offset 16
 1227              		.cfi_offset 3, -16
 1228              		.cfi_offset 4, -12
 1229              		.cfi_offset 5, -8
 1230              		.cfi_offset 14, -4
 365:Src/freertos.c ****         uint8_t a, x, y, c;
 366:Src/freertos.c ****         a = ReceptionMessage();
 1231              		.loc 1 366 0
 1232 0002 FFF7FEFF 		bl	ReceptionMessage
 1233              	.LVL135:
 1234 0006 C0B2     		uxtb	r0, r0
 1235              	.LVL136:
 367:Src/freertos.c ****         x = a & 0xF0;
 1236              		.loc 1 367 0
 1237 0008 00F0F005 		and	r5, r0, #240
 1238              	.LVL137:
 368:Src/freertos.c ****         y = a & 0x0F;
 1239              		.loc 1 368 0
 1240 000c 00F00F04 		and	r4, r0, #15
 1241              	.LVL138:
 369:Src/freertos.c ****         c = ReceptionMessage();
 1242              		.loc 1 369 0
 1243 0010 FFF7FEFF 		bl	ReceptionMessage
 1244              	.LVL139:
 370:Src/freertos.c ****         robot2.posx = x;
 1245              		.loc 1 370 0
 1246 0014 024B     		ldr	r3, .L129
 1247 0016 1D60     		str	r5, [r3]
 371:Src/freertos.c ****         robot2.posy = y;
 1248              		.loc 1 371 0
 1249 0018 5C60     		str	r4, [r3, #4]
 372:Src/freertos.c ****         robot2.orientation = c;
 1250              		.loc 1 372 0
ARM GAS  /tmp/ccc1QhbW.s 			page 29


 1251 001a C0B2     		uxtb	r0, r0
 1252 001c 9860     		str	r0, [r3, #8]
 1253 001e 38BD     		pop	{r3, r4, r5, pc}
 1254              	.LVL140:
 1255              	.L130:
 1256              		.align	2
 1257              	.L129:
 1258 0020 00000000 		.word	robot2
 1259              		.cfi_endproc
 1260              	.LFE146:
 1262              		.section	.text.envoipos,"ax",%progbits
 1263              		.align	2
 1264              		.global	envoipos
 1265              		.thumb
 1266              		.thumb_func
 1268              	envoipos:
 1269              	.LFB147:
 373:Src/freertos.c ****     }
 374:Src/freertos.c **** 
 375:Src/freertos.c ****     void envoipos(uint8_t x, uint8_t y , uint8_t c){
 1270              		.loc 1 375 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              	.LVL141:
 1275 0000 10B5     		push	{r4, lr}
 1276              	.LCFI21:
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 4, -8
 1279              		.cfi_offset 14, -4
 1280 0002 1446     		mov	r4, r2
 376:Src/freertos.c ****          x = x*16 + y;
 1281              		.loc 1 376 0
 1282 0004 01EB0010 		add	r0, r1, r0, lsl #4
 1283              	.LVL142:
 377:Src/freertos.c ****          EnvoiMessage(x);
 1284              		.loc 1 377 0
 1285 0008 C0B2     		uxtb	r0, r0
 1286 000a FFF7FEFF 		bl	EnvoiMessage
 1287              	.LVL143:
 378:Src/freertos.c ****          EnvoiMessage(c);
 1288              		.loc 1 378 0
 1289 000e 2046     		mov	r0, r4
 1290 0010 FFF7FEFF 		bl	EnvoiMessage
 1291              	.LVL144:
 1292 0014 10BD     		pop	{r4, pc}
 1293              		.cfi_endproc
 1294              	.LFE147:
 1296 0016 00BF     		.section	.text.Traduction,"ax",%progbits
 1297              		.align	2
 1298              		.global	Traduction
 1299              		.thumb
 1300              		.thumb_func
 1302              	Traduction:
 1303              	.LFB148:
 379:Src/freertos.c ****     }
 380:Src/freertos.c **** 
ARM GAS  /tmp/ccc1QhbW.s 			page 30


 381:Src/freertos.c ****     void Traduction(uint8_t msg){
 1304              		.loc 1 381 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
 1308              	.LVL145:
 1309 0000 10B5     		push	{r4, lr}
 1310              	.LCFI22:
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 4, -8
 1313              		.cfi_offset 14, -4
 1314 0002 0446     		mov	r4, r0
 382:Src/freertos.c ****         if (msg == 0x05) {
 1315              		.loc 1 382 0
 1316 0004 0528     		cmp	r0, #5
 1317 0006 05D1     		bne	.L134
 383:Src/freertos.c ****            envoipos(robot1.posx, robot1.posy, robot1.orientation);
 1318              		.loc 1 383 0
 1319 0008 174B     		ldr	r3, .L141
 1320 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1321              	.LVL146:
 1322 000c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1323 000e 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1324 0010 FFF7FEFF 		bl	envoipos
 1325              	.LVL147:
 1326              	.L134:
 384:Src/freertos.c ****         }
 385:Src/freertos.c **** 
 386:Src/freertos.c ****         if (msg == 0x06) {
 387:Src/freertos.c **** 
 388:Src/freertos.c ****         }
 389:Src/freertos.c **** 
 390:Src/freertos.c ****         if (msg == 0x07) {
 1327              		.loc 1 390 0
 1328 0014 072C     		cmp	r4, #7
 1329 0016 02D1     		bne	.L135
 391:Src/freertos.c ****             flag_haut = 1;
 1330              		.loc 1 391 0
 1331 0018 0122     		movs	r2, #1
 1332 001a 144B     		ldr	r3, .L141+4
 1333 001c 1A60     		str	r2, [r3]
 1334              	.L135:
 392:Src/freertos.c ****         }
 393:Src/freertos.c **** 
 394:Src/freertos.c ****         if (msg == 0x08) {
 1335              		.loc 1 394 0
 1336 001e 082C     		cmp	r4, #8
 1337 0020 02D1     		bne	.L136
 395:Src/freertos.c ****             flag_bas = 1;
 1338              		.loc 1 395 0
 1339 0022 0122     		movs	r2, #1
 1340 0024 124B     		ldr	r3, .L141+8
 1341 0026 1A60     		str	r2, [r3]
 1342              	.L136:
 396:Src/freertos.c ****         }
 397:Src/freertos.c **** 
 398:Src/freertos.c ****         if (msg == 0x09) {
ARM GAS  /tmp/ccc1QhbW.s 			page 31


 1343              		.loc 1 398 0
 1344 0028 092C     		cmp	r4, #9
 1345 002a 02D1     		bne	.L137
 399:Src/freertos.c ****             flag_droite = 1;
 1346              		.loc 1 399 0
 1347 002c 0122     		movs	r2, #1
 1348 002e 114B     		ldr	r3, .L141+12
 1349 0030 1A60     		str	r2, [r3]
 1350              	.L137:
 400:Src/freertos.c ****         }
 401:Src/freertos.c **** 
 402:Src/freertos.c ****         if (msg == 0x0A) {
 1351              		.loc 1 402 0
 1352 0032 0A2C     		cmp	r4, #10
 1353 0034 02D1     		bne	.L138
 403:Src/freertos.c ****             flag_gauche = 1;
 1354              		.loc 1 403 0
 1355 0036 0122     		movs	r2, #1
 1356 0038 0F4B     		ldr	r3, .L141+16
 1357 003a 1A60     		str	r2, [r3]
 1358              	.L138:
 404:Src/freertos.c ****         }
 405:Src/freertos.c **** 
 406:Src/freertos.c ****         if (msg == 0x0B) {
 407:Src/freertos.c ****         }
 408:Src/freertos.c **** 
 409:Src/freertos.c ****         if (msg == 0x0C) {
 410:Src/freertos.c ****         }
 411:Src/freertos.c **** 
 412:Src/freertos.c ****         if (msg == 0x0D) {
 1359              		.loc 1 412 0
 1360 003c 0D2C     		cmp	r4, #13
 1361 003e 12D1     		bne	.L133
 1362              	.LBB2:
 413:Src/freertos.c ****             uint8_t a;
 414:Src/freertos.c ****             srand(time(NULL));
 1363              		.loc 1 414 0
 1364 0040 0020     		movs	r0, #0
 1365 0042 FFF7FEFF 		bl	time
 1366              	.LVL148:
 1367 0046 FFF7FEFF 		bl	srand
 1368              	.LVL149:
 415:Src/freertos.c ****             a = rand()%100;
 1369              		.loc 1 415 0
 1370 004a FFF7FEFF 		bl	rand
 1371              	.LVL150:
 1372 004e 0B4B     		ldr	r3, .L141+20
 1373 0050 83FB0032 		smull	r3, r2, r3, r0
 1374 0054 C317     		asrs	r3, r0, #31
 1375 0056 C3EB6213 		rsb	r3, r3, r2, asr #5
 1376 005a 6422     		movs	r2, #100
 1377 005c 02FB1303 		mls	r3, r2, r3, r0
 1378              	.LVL151:
 416:Src/freertos.c ****             EnvoiMessage(a);
 1379              		.loc 1 416 0
 1380 0060 D8B2     		uxtb	r0, r3
 1381 0062 FFF7FEFF 		bl	EnvoiMessage
ARM GAS  /tmp/ccc1QhbW.s 			page 32


 1382              	.LVL152:
 1383              	.L133:
 1384 0066 10BD     		pop	{r4, pc}
 1385              	.L142:
 1386              		.align	2
 1387              	.L141:
 1388 0068 00000000 		.word	robot1
 1389 006c 00000000 		.word	.LANCHOR7
 1390 0070 00000000 		.word	.LANCHOR8
 1391 0074 00000000 		.word	.LANCHOR9
 1392 0078 00000000 		.word	.LANCHOR10
 1393 007c 1F85EB51 		.word	1374389535
 1394              	.LBE2:
 1395              		.cfi_endproc
 1396              	.LFE148:
 1398              		.section	.text.WaitFor,"ax",%progbits
 1399              		.align	2
 1400              		.global	WaitFor
 1401              		.thumb
 1402              		.thumb_func
 1404              	WaitFor:
 1405              	.LFB149:
 417:Src/freertos.c ****         }
 418:Src/freertos.c **** 
 419:Src/freertos.c ****         if (msg == 0x10) {
 420:Src/freertos.c ****         }
 421:Src/freertos.c **** 
 422:Src/freertos.c ****         if (msg == 0x11) {
 423:Src/freertos.c ****         }
 424:Src/freertos.c **** 
 425:Src/freertos.c ****         if (msg == 0x12) {
 426:Src/freertos.c ****         }
 427:Src/freertos.c **** 
 428:Src/freertos.c ****         if (msg == 0x13) {
 429:Src/freertos.c ****         }
 430:Src/freertos.c ****     }
 431:Src/freertos.c **** 
 432:Src/freertos.c ****     void WaitFor(uint8_t z) {
 1406              		.loc 1 432 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
 1410              	.LVL153:
 1411 0000 10B5     		push	{r4, lr}
 1412              	.LCFI23:
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 4, -8
 1415              		.cfi_offset 14, -4
 1416 0002 0446     		mov	r4, r0
 1417              	.LVL154:
 1418              	.L144:
 433:Src/freertos.c ****         while (z != ReceptionMessage()) ;
 1419              		.loc 1 433 0 discriminator 1
 1420 0004 FFF7FEFF 		bl	ReceptionMessage
 1421              	.LVL155:
 1422 0008 8442     		cmp	r4, r0
 1423 000a FBD1     		bne	.L144
ARM GAS  /tmp/ccc1QhbW.s 			page 33


 434:Src/freertos.c ****     }
 1424              		.loc 1 434 0
 1425 000c 10BD     		pop	{r4, pc}
 1426              		.cfi_endproc
 1427              	.LFE149:
 1429 000e 00BF     		.section	.text.TaPosition,"ax",%progbits
 1430              		.align	2
 1431              		.global	TaPosition
 1432              		.thumb
 1433              		.thumb_func
 1435              	TaPosition:
 1436              	.LFB150:
 435:Src/freertos.c **** 
 436:Src/freertos.c ****     void TaPosition() {
 1437              		.loc 1 436 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 08B5     		push	{r3, lr}
 1442              	.LCFI24:
 1443              		.cfi_def_cfa_offset 8
 1444              		.cfi_offset 3, -8
 1445              		.cfi_offset 14, -4
 437:Src/freertos.c ****         EnvoiMessage(0x05);
 1446              		.loc 1 437 0
 1447 0002 0520     		movs	r0, #5
 1448 0004 FFF7FEFF 		bl	EnvoiMessage
 1449              	.LVL156:
 1450 0008 08BD     		pop	{r3, pc}
 1451              		.cfi_endproc
 1452              	.LFE150:
 1454 000a 00BF     		.section	.text.ok,"ax",%progbits
 1455              		.align	2
 1456              		.global	ok
 1457              		.thumb
 1458              		.thumb_func
 1460              	ok:
 1461              	.LFB151:
 438:Src/freertos.c ****     }
 439:Src/freertos.c **** 
 440:Src/freertos.c ****     void ok() {
 1462              		.loc 1 440 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 08B5     		push	{r3, lr}
 1467              	.LCFI25:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 3, -8
 1470              		.cfi_offset 14, -4
 441:Src/freertos.c ****         EnvoiMessage(0x06);
 1471              		.loc 1 441 0
 1472 0002 0620     		movs	r0, #6
 1473 0004 FFF7FEFF 		bl	EnvoiMessage
 1474              	.LVL157:
 1475 0008 08BD     		pop	{r3, pc}
 1476              		.cfi_endproc
ARM GAS  /tmp/ccc1QhbW.s 			page 34


 1477              	.LFE151:
 1479 000a 00BF     		.section	.text.Monte,"ax",%progbits
 1480              		.align	2
 1481              		.global	Monte
 1482              		.thumb
 1483              		.thumb_func
 1485              	Monte:
 1486              	.LFB152:
 442:Src/freertos.c ****     }
 443:Src/freertos.c **** 
 444:Src/freertos.c ****     void Monte() {
 1487              		.loc 1 444 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 0
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491 0000 08B5     		push	{r3, lr}
 1492              	.LCFI26:
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 3, -8
 1495              		.cfi_offset 14, -4
 445:Src/freertos.c ****         EnvoiMessage(0x07);
 1496              		.loc 1 445 0
 1497 0002 0720     		movs	r0, #7
 1498 0004 FFF7FEFF 		bl	EnvoiMessage
 1499              	.LVL158:
 446:Src/freertos.c ****         WaitFor(0x06);
 1500              		.loc 1 446 0
 1501 0008 0620     		movs	r0, #6
 1502 000a FFF7FEFF 		bl	WaitFor
 1503              	.LVL159:
 1504 000e 08BD     		pop	{r3, pc}
 1505              		.cfi_endproc
 1506              	.LFE152:
 1508              		.section	.text.Descend,"ax",%progbits
 1509              		.align	2
 1510              		.global	Descend
 1511              		.thumb
 1512              		.thumb_func
 1514              	Descend:
 1515              	.LFB153:
 447:Src/freertos.c ****     }
 448:Src/freertos.c **** 
 449:Src/freertos.c ****     void Descend() {
 1516              		.loc 1 449 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520 0000 08B5     		push	{r3, lr}
 1521              	.LCFI27:
 1522              		.cfi_def_cfa_offset 8
 1523              		.cfi_offset 3, -8
 1524              		.cfi_offset 14, -4
 450:Src/freertos.c ****         EnvoiMessage(0x08);
 1525              		.loc 1 450 0
 1526 0002 0820     		movs	r0, #8
 1527 0004 FFF7FEFF 		bl	EnvoiMessage
 1528              	.LVL160:
ARM GAS  /tmp/ccc1QhbW.s 			page 35


 451:Src/freertos.c ****         WaitFor(0x06);
 1529              		.loc 1 451 0
 1530 0008 0620     		movs	r0, #6
 1531 000a FFF7FEFF 		bl	WaitFor
 1532              	.LVL161:
 1533 000e 08BD     		pop	{r3, pc}
 1534              		.cfi_endproc
 1535              	.LFE153:
 1537              		.section	.text.Droite,"ax",%progbits
 1538              		.align	2
 1539              		.global	Droite
 1540              		.thumb
 1541              		.thumb_func
 1543              	Droite:
 1544              	.LFB154:
 452:Src/freertos.c ****     }
 453:Src/freertos.c **** 
 454:Src/freertos.c ****     void Droite() {
 1545              		.loc 1 454 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549 0000 08B5     		push	{r3, lr}
 1550              	.LCFI28:
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 3, -8
 1553              		.cfi_offset 14, -4
 455:Src/freertos.c ****         EnvoiMessage(0x09);
 1554              		.loc 1 455 0
 1555 0002 0920     		movs	r0, #9
 1556 0004 FFF7FEFF 		bl	EnvoiMessage
 1557              	.LVL162:
 456:Src/freertos.c ****         WaitFor(0x06);
 1558              		.loc 1 456 0
 1559 0008 0620     		movs	r0, #6
 1560 000a FFF7FEFF 		bl	WaitFor
 1561              	.LVL163:
 1562 000e 08BD     		pop	{r3, pc}
 1563              		.cfi_endproc
 1564              	.LFE154:
 1566              		.section	.text.Gauche,"ax",%progbits
 1567              		.align	2
 1568              		.global	Gauche
 1569              		.thumb
 1570              		.thumb_func
 1572              	Gauche:
 1573              	.LFB155:
 457:Src/freertos.c ****     }
 458:Src/freertos.c **** 
 459:Src/freertos.c ****     void Gauche() {
 1574              		.loc 1 459 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578 0000 08B5     		push	{r3, lr}
 1579              	.LCFI29:
 1580              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccc1QhbW.s 			page 36


 1581              		.cfi_offset 3, -8
 1582              		.cfi_offset 14, -4
 460:Src/freertos.c ****         EnvoiMessage(0x0A);
 1583              		.loc 1 460 0
 1584 0002 0A20     		movs	r0, #10
 1585 0004 FFF7FEFF 		bl	EnvoiMessage
 1586              	.LVL164:
 461:Src/freertos.c ****         WaitFor(0x06);
 1587              		.loc 1 461 0
 1588 0008 0620     		movs	r0, #6
 1589 000a FFF7FEFF 		bl	WaitFor
 1590              	.LVL165:
 1591 000e 08BD     		pop	{r3, pc}
 1592              		.cfi_endproc
 1593              	.LFE155:
 1595              		.section	.text.DansUnCoin,"ax",%progbits
 1596              		.align	2
 1597              		.global	DansUnCoin
 1598              		.thumb
 1599              		.thumb_func
 1601              	DansUnCoin:
 1602              	.LFB156:
 462:Src/freertos.c ****     }
 463:Src/freertos.c **** 
 464:Src/freertos.c ****     void DansUnCoin() {
 1603              		.loc 1 464 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 0
 1606              		@ frame_needed = 0, uses_anonymous_args = 0
 1607 0000 08B5     		push	{r3, lr}
 1608              	.LCFI30:
 1609              		.cfi_def_cfa_offset 8
 1610              		.cfi_offset 3, -8
 1611              		.cfi_offset 14, -4
 465:Src/freertos.c ****         EnvoiMessage(0x0B);
 1612              		.loc 1 465 0
 1613 0002 0B20     		movs	r0, #11
 1614 0004 FFF7FEFF 		bl	EnvoiMessage
 1615              	.LVL166:
 1616 0008 08BD     		pop	{r3, pc}
 1617              		.cfi_endproc
 1618              	.LFE156:
 1620 000a 00BF     		.section	.text.Trouve,"ax",%progbits
 1621              		.align	2
 1622              		.global	Trouve
 1623              		.thumb
 1624              		.thumb_func
 1626              	Trouve:
 1627              	.LFB157:
 466:Src/freertos.c ****     }
 467:Src/freertos.c **** 
 468:Src/freertos.c ****     void Trouve() {
 1628              		.loc 1 468 0
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 0
 1631              		@ frame_needed = 0, uses_anonymous_args = 0
 1632 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccc1QhbW.s 			page 37


 1633              	.LCFI31:
 1634              		.cfi_def_cfa_offset 8
 1635              		.cfi_offset 3, -8
 1636              		.cfi_offset 14, -4
 469:Src/freertos.c ****         EnvoiMessage(0x0C);
 1637              		.loc 1 469 0
 1638 0002 0C20     		movs	r0, #12
 1639 0004 FFF7FEFF 		bl	EnvoiMessage
 1640              	.LVL167:
 1641 0008 08BD     		pop	{r3, pc}
 1642              		.cfi_endproc
 1643              	.LFE157:
 1645 000a 00BF     		.section	.text.Random,"ax",%progbits
 1646              		.align	2
 1647              		.global	Random
 1648              		.thumb
 1649              		.thumb_func
 1651              	Random:
 1652              	.LFB158:
 470:Src/freertos.c ****     }
 471:Src/freertos.c **** 
 472:Src/freertos.c ****     int Random() {
 1653              		.loc 1 472 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 1657 0000 10B5     		push	{r4, lr}
 1658              	.LCFI32:
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 4, -8
 1661              		.cfi_offset 14, -4
 473:Src/freertos.c ****         int a, p;
 474:Src/freertos.c ****         EnvoiMessage(0x0D);
 1662              		.loc 1 474 0
 1663 0002 0D20     		movs	r0, #13
 1664 0004 FFF7FEFF 		bl	EnvoiMessage
 1665              	.LVL168:
 475:Src/freertos.c ****         srand(time(NULL));
 1666              		.loc 1 475 0
 1667 0008 0020     		movs	r0, #0
 1668 000a FFF7FEFF 		bl	time
 1669              	.LVL169:
 1670 000e FFF7FEFF 		bl	srand
 1671              	.LVL170:
 476:Src/freertos.c ****         a = rand()%256;
 1672              		.loc 1 476 0
 1673 0012 FFF7FEFF 		bl	rand
 1674              	.LVL171:
 1675 0016 0B4C     		ldr	r4, .L167
 1676 0018 0440     		ands	r4, r4, r0
 1677 001a 002C     		cmp	r4, #0
 1678 001c 03DA     		bge	.L163
 1679 001e 013C     		subs	r4, r4, #1
 1680 0020 64F0FF04 		orn	r4, r4, #255
 1681 0024 0134     		adds	r4, r4, #1
 1682              	.L163:
 1683              	.LVL172:
ARM GAS  /tmp/ccc1QhbW.s 			page 38


 477:Src/freertos.c ****         if (ReceptionMessage() < a) {
 1684              		.loc 1 477 0
 1685 0026 FFF7FEFF 		bl	ReceptionMessage
 1686              	.LVL173:
 1687 002a A042     		cmp	r0, r4
 1688 002c 04DA     		bge	.L164
 1689              	.LVL174:
 478:Src/freertos.c ****             p = 1;
 479:Src/freertos.c ****             EnvoiMessage(0x50);
 1690              		.loc 1 479 0
 1691 002e 5020     		movs	r0, #80
 1692 0030 FFF7FEFF 		bl	EnvoiMessage
 1693              	.LVL175:
 478:Src/freertos.c ****             p = 1;
 1694              		.loc 1 478 0
 1695 0034 0120     		movs	r0, #1
 1696 0036 10BD     		pop	{r4, pc}
 1697              	.LVL176:
 1698              	.L164:
 480:Src/freertos.c ****         }
 481:Src/freertos.c ****         else {
 482:Src/freertos.c ****             p = 0;
 483:Src/freertos.c ****             EnvoiMessage(0x67);
 1699              		.loc 1 483 0
 1700 0038 6720     		movs	r0, #103
 1701 003a FFF7FEFF 		bl	EnvoiMessage
 1702              	.LVL177:
 482:Src/freertos.c ****             EnvoiMessage(0x67);
 1703              		.loc 1 482 0
 1704 003e 0020     		movs	r0, #0
 1705              	.LVL178:
 484:Src/freertos.c ****         }
 485:Src/freertos.c ****         return(p);
 486:Src/freertos.c ****     }
 1706              		.loc 1 486 0
 1707 0040 10BD     		pop	{r4, pc}
 1708              	.LVL179:
 1709              	.L168:
 1710 0042 00BF     		.align	2
 1711              	.L167:
 1712 0044 FF000080 		.word	-2147483393
 1713              		.cfi_endproc
 1714              	.LFE158:
 1716              		.section	.text.Non,"ax",%progbits
 1717              		.align	2
 1718              		.global	Non
 1719              		.thumb
 1720              		.thumb_func
 1722              	Non:
 1723              	.LFB159:
 487:Src/freertos.c **** 
 488:Src/freertos.c ****     void Non(){
 1724              		.loc 1 488 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccc1QhbW.s 			page 39


 1729              	.LCFI33:
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
 489:Src/freertos.c ****         EnvoiMessage(0x10);
 1733              		.loc 1 489 0
 1734 0002 1020     		movs	r0, #16
 1735 0004 FFF7FEFF 		bl	EnvoiMessage
 1736              	.LVL180:
 1737 0008 08BD     		pop	{r3, pc}
 1738              		.cfi_endproc
 1739              	.LFE159:
 1741 000a 00BF     		.section	.text.MemeCase,"ax",%progbits
 1742              		.align	2
 1743              		.global	MemeCase
 1744              		.thumb
 1745              		.thumb_func
 1747              	MemeCase:
 1748              	.LFB160:
 490:Src/freertos.c ****     }
 491:Src/freertos.c **** 
 492:Src/freertos.c ****     void MemeCase() {
 1749              		.loc 1 492 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753 0000 08B5     		push	{r3, lr}
 1754              	.LCFI34:
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 3, -8
 1757              		.cfi_offset 14, -4
 493:Src/freertos.c ****         EnvoiMessage(0x12);
 1758              		.loc 1 493 0
 1759 0002 1220     		movs	r0, #18
 1760 0004 FFF7FEFF 		bl	EnvoiMessage
 1761              	.LVL181:
 1762 0008 08BD     		pop	{r3, pc}
 1763              		.cfi_endproc
 1764              	.LFE160:
 1766 000a 00BF     		.section	.text.TuEsCoin,"ax",%progbits
 1767              		.align	2
 1768              		.global	TuEsCoin
 1769              		.thumb
 1770              		.thumb_func
 1772              	TuEsCoin:
 1773              	.LFB161:
 494:Src/freertos.c ****     }
 495:Src/freertos.c **** 
 496:Src/freertos.c ****     void TuEsCoin(){
 1774              		.loc 1 496 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778 0000 08B5     		push	{r3, lr}
 1779              	.LCFI35:
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 3, -8
ARM GAS  /tmp/ccc1QhbW.s 			page 40


 1782              		.cfi_offset 14, -4
 497:Src/freertos.c ****     EnvoiMessage(0x13);
 1783              		.loc 1 497 0
 1784 0002 1320     		movs	r0, #19
 1785 0004 FFF7FEFF 		bl	EnvoiMessage
 1786              	.LVL182:
 1787 0008 08BD     		pop	{r3, pc}
 1788              		.cfi_endproc
 1789              	.LFE161:
 1791 000a 00BF     		.section	.text.deplacement,"ax",%progbits
 1792              		.align	2
 1793              		.global	deplacement
 1794              		.thumb
 1795              		.thumb_func
 1797              	deplacement:
 1798              	.LFB162:
 498:Src/freertos.c **** }
 499:Src/freertos.c **** /* END Fonctions UART */
 500:Src/freertos.c **** 
 501:Src/freertos.c **** /* BEGIN Fonctions IA */
 502:Src/freertos.c **** 
 503:Src/freertos.c **** /*void deplacement(int distance, int cap)//fonction initiale
 504:Src/freertos.c **** {
 505:Src/freertos.c **** 
 506:Src/freertos.c ****     flag_deplacement_fini = 0;
 507:Src/freertos.c ****     flag_distance += distance;
 508:Src/freertos.c ****     flag_rotation_finie = 0;
 509:Src/freertos.c ****     flag_cap += cap;
 510:Src/freertos.c **** }*/
 511:Src/freertos.c **** 
 512:Src/freertos.c **** void deplacement(int distance, int cap)//fonction évoluée
 513:Src/freertos.c **** {
 1799              		.loc 1 513 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
 1804              	.LVL183:
 514:Src/freertos.c ****   if(cap == 0){
 1805              		.loc 1 514 0
 1806 0000 0A46     		mov	r2, r1
 1807 0002 51B9     		cbnz	r1, .L176
 1808              	.L177:
 515:Src/freertos.c ****       //printf("hello\n\r");
 516:Src/freertos.c ****       while(flag_rotation_finie != 1);
 1809              		.loc 1 516 0 discriminator 1
 1810 0004 0B4B     		ldr	r3, .L180
 1811 0006 1B68     		ldr	r3, [r3]
 1812 0008 012B     		cmp	r3, #1
 1813 000a FBD1     		bne	.L177
 517:Src/freertos.c ****           //printf("modif\n\r");
 518:Src/freertos.c ****           flag_deplacement_fini = 0;
 1814              		.loc 1 518 0
 1815 000c 0021     		movs	r1, #0
 1816              	.LVL184:
 1817 000e 0A4B     		ldr	r3, .L180+4
 1818 0010 1960     		str	r1, [r3]
ARM GAS  /tmp/ccc1QhbW.s 			page 41


 519:Src/freertos.c ****           flag_distance += distance;
 1819              		.loc 1 519 0
 1820 0012 0A49     		ldr	r1, .L180+8
 1821 0014 0B68     		ldr	r3, [r1]
 1822 0016 0344     		add	r3, r3, r0
 1823 0018 0B60     		str	r3, [r1]
 1824              	.L176:
 520:Src/freertos.c ****   }
 521:Src/freertos.c **** 
 522:Src/freertos.c ****   if(distance == 0){
 1825              		.loc 1 522 0
 1826 001a 50B9     		cbnz	r0, .L175
 1827              	.L179:
 523:Src/freertos.c ****       //printf("bye\n\r");
 524:Src/freertos.c ****       while(flag_deplacement_fini != 1);
 1828              		.loc 1 524 0 discriminator 1
 1829 001c 064B     		ldr	r3, .L180+4
 1830 001e 1B68     		ldr	r3, [r3]
 1831 0020 012B     		cmp	r3, #1
 1832 0022 FBD1     		bne	.L179
 525:Src/freertos.c ****           flag_rotation_finie = 0;
 1833              		.loc 1 525 0
 1834 0024 0021     		movs	r1, #0
 1835 0026 034B     		ldr	r3, .L180
 1836 0028 1960     		str	r1, [r3]
 526:Src/freertos.c ****           flag_cap += cap;
 1837              		.loc 1 526 0
 1838 002a 054B     		ldr	r3, .L180+12
 1839 002c 1968     		ldr	r1, [r3]
 1840 002e 0A44     		add	r2, r2, r1
 1841              	.LVL185:
 1842 0030 1A60     		str	r2, [r3]
 1843              	.L175:
 1844 0032 7047     		bx	lr
 1845              	.L181:
 1846              		.align	2
 1847              	.L180:
 1848 0034 00000000 		.word	.LANCHOR3
 1849 0038 00000000 		.word	.LANCHOR1
 1850 003c 00000000 		.word	.LANCHOR0
 1851 0040 00000000 		.word	.LANCHOR2
 1852              		.cfi_endproc
 1853              	.LFE162:
 1855              		.section	.text.test1,"ax",%progbits
 1856              		.align	2
 1857              		.global	test1
 1858              		.thumb
 1859              		.thumb_func
 1861              	test1:
 1862              	.LFB163:
 527:Src/freertos.c ****   }
 528:Src/freertos.c **** }
 529:Src/freertos.c **** 
 530:Src/freertos.c **** void test1(){
 1863              		.loc 1 530 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccc1QhbW.s 			page 42


 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1868              	.LCFI36:
 1869              		.cfi_def_cfa_offset 24
 1870              		.cfi_offset 3, -24
 1871              		.cfi_offset 4, -20
 1872              		.cfi_offset 5, -16
 1873              		.cfi_offset 6, -12
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 531:Src/freertos.c **** 
 532:Src/freertos.c ****     WaitFor(0x06);
 1876              		.loc 1 532 0
 1877 0002 0620     		movs	r0, #6
 1878 0004 FFF7FEFF 		bl	WaitFor
 1879              	.LVL186:
 533:Src/freertos.c ****     //ok();
 534:Src/freertos.c **** 
 535:Src/freertos.c ****     osDelay(1000);
 1880              		.loc 1 535 0
 1881 0008 4FF47A70 		mov	r0, #1000
 1882 000c FFF7FEFF 		bl	osDelay
 1883              	.LVL187:
 536:Src/freertos.c ****     printf("Value 1: %d\n\r", flag_distance);
 1884              		.loc 1 536 0
 1885 0010 434E     		ldr	r6, .L188
 1886 0012 4448     		ldr	r0, .L188+4
 1887 0014 3168     		ldr	r1, [r6]
 1888 0016 FFF7FEFF 		bl	printf
 1889              	.LVL188:
 537:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 1890              		.loc 1 537 0
 1891 001a 434D     		ldr	r5, .L188+8
 1892 001c 434C     		ldr	r4, .L188+12
 1893 001e 2846     		mov	r0, r5
 1894 0020 2168     		ldr	r1, [r4]
 1895 0022 FFF7FEFF 		bl	printf
 1896              	.LVL189:
 538:Src/freertos.c ****     deplacement(3,0);
 1897              		.loc 1 538 0
 1898 0026 0320     		movs	r0, #3
 1899 0028 0021     		movs	r1, #0
 1900 002a FFF7FEFF 		bl	deplacement
 1901              	.LVL190:
 539:Src/freertos.c ****     printf("Value 2: %d\n\r", flag_distance);
 1902              		.loc 1 539 0
 1903 002e 4048     		ldr	r0, .L188+16
 1904 0030 3168     		ldr	r1, [r6]
 1905 0032 FFF7FEFF 		bl	printf
 1906              	.LVL191:
 540:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 1907              		.loc 1 540 0
 1908 0036 2846     		mov	r0, r5
 1909 0038 2168     		ldr	r1, [r4]
 1910 003a FFF7FEFF 		bl	printf
 1911              	.LVL192:
 541:Src/freertos.c ****     osDelay(1000);
ARM GAS  /tmp/ccc1QhbW.s 			page 43


 1912              		.loc 1 541 0
 1913 003e 4FF47A70 		mov	r0, #1000
 1914 0042 FFF7FEFF 		bl	osDelay
 1915              	.LVL193:
 542:Src/freertos.c ****     printf("Value 3: %d\n\r", flag_distance);
 1916              		.loc 1 542 0
 1917 0046 3B48     		ldr	r0, .L188+20
 1918 0048 3168     		ldr	r1, [r6]
 1919 004a FFF7FEFF 		bl	printf
 1920              	.LVL194:
 543:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 1921              		.loc 1 543 0
 1922 004e 2846     		mov	r0, r5
 1923 0050 2168     		ldr	r1, [r4]
 1924 0052 FFF7FEFF 		bl	printf
 1925              	.LVL195:
 544:Src/freertos.c **** 
 545:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 1926              		.loc 1 545 0
 1927 0056 0DE0     		b	.L183
 1928              	.L184:
 546:Src/freertos.c ****     {
 547:Src/freertos.c ****         printf("Value 3: %d\n\r", flag_distance);
 1929              		.loc 1 547 0
 1930 0058 3648     		ldr	r0, .L188+20
 1931 005a 314B     		ldr	r3, .L188
 1932 005c 1968     		ldr	r1, [r3]
 1933 005e FFF7FEFF 		bl	printf
 1934              	.LVL196:
 548:Src/freertos.c ****         printf("defini: %d\n\n\r", flag_deplacement_fini);
 1935              		.loc 1 548 0
 1936 0062 3148     		ldr	r0, .L188+8
 1937 0064 314B     		ldr	r3, .L188+12
 1938 0066 1968     		ldr	r1, [r3]
 1939 0068 FFF7FEFF 		bl	printf
 1940              	.LVL197:
 549:Src/freertos.c ****         osDelay(1000);
 1941              		.loc 1 549 0
 1942 006c 4FF47A70 		mov	r0, #1000
 1943 0070 FFF7FEFF 		bl	osDelay
 1944              	.LVL198:
 1945              	.L183:
 545:Src/freertos.c ****     {
 1946              		.loc 1 545 0
 1947 0074 2D4B     		ldr	r3, .L188+12
 1948 0076 1B68     		ldr	r3, [r3]
 1949 0078 012B     		cmp	r3, #1
 1950 007a EDD1     		bne	.L184
 550:Src/freertos.c ****     }
 551:Src/freertos.c **** 
 552:Src/freertos.c ****     printf("Value 3: %d\n\r", flag_distance);
 1951              		.loc 1 552 0
 1952 007c 2D4F     		ldr	r7, .L188+20
 1953 007e 284E     		ldr	r6, .L188
 1954 0080 3846     		mov	r0, r7
 1955 0082 3168     		ldr	r1, [r6]
 1956 0084 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccc1QhbW.s 			page 44


 1957              	.LVL199:
 553:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 1958              		.loc 1 553 0
 1959 0088 274D     		ldr	r5, .L188+8
 1960 008a 284C     		ldr	r4, .L188+12
 1961 008c 2846     		mov	r0, r5
 1962 008e 2168     		ldr	r1, [r4]
 1963 0090 FFF7FEFF 		bl	printf
 1964              	.LVL200:
 554:Src/freertos.c ****     ok();
 1965              		.loc 1 554 0
 1966 0094 FFF7FEFF 		bl	ok
 1967              	.LVL201:
 555:Src/freertos.c ****     //WaitFor(0x06);
 556:Src/freertos.c **** 
 557:Src/freertos.c ****     osDelay(1000);
 1968              		.loc 1 557 0
 1969 0098 4FF47A70 		mov	r0, #1000
 1970 009c FFF7FEFF 		bl	osDelay
 1971              	.LVL202:
 558:Src/freertos.c ****     printf("Value 1: %d\n\r", flag_distance);
 1972              		.loc 1 558 0
 1973 00a0 2048     		ldr	r0, .L188+4
 1974 00a2 3168     		ldr	r1, [r6]
 1975 00a4 FFF7FEFF 		bl	printf
 1976              	.LVL203:
 559:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 1977              		.loc 1 559 0
 1978 00a8 2846     		mov	r0, r5
 1979 00aa 2168     		ldr	r1, [r4]
 1980 00ac FFF7FEFF 		bl	printf
 1981              	.LVL204:
 560:Src/freertos.c ****     deplacement(-3,0);
 1982              		.loc 1 560 0
 1983 00b0 6FF00200 		mvn	r0, #2
 1984 00b4 0021     		movs	r1, #0
 1985 00b6 FFF7FEFF 		bl	deplacement
 1986              	.LVL205:
 561:Src/freertos.c ****     printf("Value 2: %d\n\r", flag_distance);
 1987              		.loc 1 561 0
 1988 00ba 1D48     		ldr	r0, .L188+16
 1989 00bc 3168     		ldr	r1, [r6]
 1990 00be FFF7FEFF 		bl	printf
 1991              	.LVL206:
 562:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 1992              		.loc 1 562 0
 1993 00c2 2846     		mov	r0, r5
 1994 00c4 2168     		ldr	r1, [r4]
 1995 00c6 FFF7FEFF 		bl	printf
 1996              	.LVL207:
 563:Src/freertos.c ****     osDelay(1000);
 1997              		.loc 1 563 0
 1998 00ca 4FF47A70 		mov	r0, #1000
 1999 00ce FFF7FEFF 		bl	osDelay
 2000              	.LVL208:
 564:Src/freertos.c ****     printf("Value 3: %d\n\r", flag_distance);
 2001              		.loc 1 564 0
ARM GAS  /tmp/ccc1QhbW.s 			page 45


 2002 00d2 3846     		mov	r0, r7
 2003 00d4 3168     		ldr	r1, [r6]
 2004 00d6 FFF7FEFF 		bl	printf
 2005              	.LVL209:
 565:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 2006              		.loc 1 565 0
 2007 00da 2846     		mov	r0, r5
 2008 00dc 2168     		ldr	r1, [r4]
 2009 00de FFF7FEFF 		bl	printf
 2010              	.LVL210:
 566:Src/freertos.c **** 
 567:Src/freertos.c **** 
 568:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2011              		.loc 1 568 0
 2012 00e2 0DE0     		b	.L185
 2013              	.L186:
 569:Src/freertos.c ****     {
 570:Src/freertos.c ****         printf("Value 3: %d\n\r", flag_distance);
 2014              		.loc 1 570 0
 2015 00e4 1348     		ldr	r0, .L188+20
 2016 00e6 0E4B     		ldr	r3, .L188
 2017 00e8 1968     		ldr	r1, [r3]
 2018 00ea FFF7FEFF 		bl	printf
 2019              	.LVL211:
 571:Src/freertos.c ****         printf("defini: %d\n\n\r", flag_deplacement_fini);
 2020              		.loc 1 571 0
 2021 00ee 0E48     		ldr	r0, .L188+8
 2022 00f0 0E4B     		ldr	r3, .L188+12
 2023 00f2 1968     		ldr	r1, [r3]
 2024 00f4 FFF7FEFF 		bl	printf
 2025              	.LVL212:
 572:Src/freertos.c ****         osDelay(1000);
 2026              		.loc 1 572 0
 2027 00f8 4FF47A70 		mov	r0, #1000
 2028 00fc FFF7FEFF 		bl	osDelay
 2029              	.LVL213:
 2030              	.L185:
 568:Src/freertos.c ****     {
 2031              		.loc 1 568 0
 2032 0100 0A4B     		ldr	r3, .L188+12
 2033 0102 1B68     		ldr	r3, [r3]
 2034 0104 012B     		cmp	r3, #1
 2035 0106 EDD1     		bne	.L186
 573:Src/freertos.c ****     }
 574:Src/freertos.c **** 
 575:Src/freertos.c ****     printf("Value 3: %d\n\r", flag_distance);
 2036              		.loc 1 575 0
 2037 0108 0A48     		ldr	r0, .L188+20
 2038 010a 054B     		ldr	r3, .L188
 2039 010c 1968     		ldr	r1, [r3]
 2040 010e FFF7FEFF 		bl	printf
 2041              	.LVL214:
 576:Src/freertos.c ****     printf("defini: %d\n\n\r", flag_deplacement_fini);
 2042              		.loc 1 576 0
 2043 0112 0548     		ldr	r0, .L188+8
 2044 0114 054B     		ldr	r3, .L188+12
 2045 0116 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccc1QhbW.s 			page 46


 2046 0118 FFF7FEFF 		bl	printf
 2047              	.LVL215:
 2048 011c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2049              	.L189:
 2050 011e 00BF     		.align	2
 2051              	.L188:
 2052 0120 00000000 		.word	.LANCHOR0
 2053 0124 00000000 		.word	.LC0
 2054 0128 10000000 		.word	.LC1
 2055 012c 00000000 		.word	.LANCHOR1
 2056 0130 20000000 		.word	.LC2
 2057 0134 30000000 		.word	.LC3
 2058              		.cfi_endproc
 2059              	.LFE163:
 2061              		.section	.text.test2,"ax",%progbits
 2062              		.align	2
 2063              		.global	test2
 2064              		.thumb
 2065              		.thumb_func
 2067              	test2:
 2068              	.LFB164:
 577:Src/freertos.c **** }
 578:Src/freertos.c **** 
 579:Src/freertos.c **** void test2(){
 2069              		.loc 1 579 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 2073 0000 08B5     		push	{r3, lr}
 2074              	.LCFI37:
 2075              		.cfi_def_cfa_offset 8
 2076              		.cfi_offset 3, -8
 2077              		.cfi_offset 14, -4
 580:Src/freertos.c ****     deplacement(2,0);
 2078              		.loc 1 580 0
 2079 0002 0220     		movs	r0, #2
 2080 0004 0021     		movs	r1, #0
 2081 0006 FFF7FEFF 		bl	deplacement
 2082              	.LVL216:
 581:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2083              		.loc 1 581 0
 2084 000a 03E0     		b	.L191
 2085              	.L192:
 582:Src/freertos.c ****     {
 583:Src/freertos.c ****         osDelay(1000);
 2086              		.loc 1 583 0
 2087 000c 4FF47A70 		mov	r0, #1000
 2088 0010 FFF7FEFF 		bl	osDelay
 2089              	.LVL217:
 2090              	.L191:
 581:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2091              		.loc 1 581 0
 2092 0014 094B     		ldr	r3, .L196
 2093 0016 1B68     		ldr	r3, [r3]
 2094 0018 012B     		cmp	r3, #1
 2095 001a F7D1     		bne	.L192
 584:Src/freertos.c ****     }
ARM GAS  /tmp/ccc1QhbW.s 			page 47


 585:Src/freertos.c **** 
 586:Src/freertos.c ****     deplacement(-2,0);
 2096              		.loc 1 586 0
 2097 001c 6FF00100 		mvn	r0, #1
 2098 0020 0021     		movs	r1, #0
 2099 0022 FFF7FEFF 		bl	deplacement
 2100              	.LVL218:
 587:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2101              		.loc 1 587 0
 2102 0026 03E0     		b	.L193
 2103              	.L194:
 588:Src/freertos.c ****     {
 589:Src/freertos.c ****         osDelay(1000);
 2104              		.loc 1 589 0
 2105 0028 4FF47A70 		mov	r0, #1000
 2106 002c FFF7FEFF 		bl	osDelay
 2107              	.LVL219:
 2108              	.L193:
 587:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2109              		.loc 1 587 0
 2110 0030 024B     		ldr	r3, .L196
 2111 0032 1B68     		ldr	r3, [r3]
 2112 0034 012B     		cmp	r3, #1
 2113 0036 F7D1     		bne	.L194
 590:Src/freertos.c ****     }
 591:Src/freertos.c **** }
 2114              		.loc 1 591 0
 2115 0038 08BD     		pop	{r3, pc}
 2116              	.L197:
 2117 003a 00BF     		.align	2
 2118              	.L196:
 2119 003c 00000000 		.word	.LANCHOR1
 2120              		.cfi_endproc
 2121              	.LFE164:
 2123              		.section	.text.test3,"ax",%progbits
 2124              		.align	2
 2125              		.global	test3
 2126              		.thumb
 2127              		.thumb_func
 2129              	test3:
 2130              	.LFB165:
 592:Src/freertos.c **** 
 593:Src/freertos.c **** void test3(){//dessine un carré
 2131              		.loc 1 593 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
 2135 0000 08B5     		push	{r3, lr}
 2136              	.LCFI38:
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 3, -8
 2139              		.cfi_offset 14, -4
 594:Src/freertos.c ****     deplacement(1,0);
 2140              		.loc 1 594 0
 2141 0002 0120     		movs	r0, #1
 2142 0004 0021     		movs	r1, #0
 2143 0006 FFF7FEFF 		bl	deplacement
ARM GAS  /tmp/ccc1QhbW.s 			page 48


 2144              	.LVL220:
 595:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2145              		.loc 1 595 0
 2146 000a 03E0     		b	.L199
 2147              	.L200:
 596:Src/freertos.c ****     {
 597:Src/freertos.c ****         osDelay(1000);
 2148              		.loc 1 597 0
 2149 000c 4FF47A70 		mov	r0, #1000
 2150 0010 FFF7FEFF 		bl	osDelay
 2151              	.LVL221:
 2152              	.L199:
 595:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2153              		.loc 1 595 0
 2154 0014 3C4B     		ldr	r3, .L220
 2155 0016 1B68     		ldr	r3, [r3]
 2156 0018 012B     		cmp	r3, #1
 2157 001a F7D1     		bne	.L200
 598:Src/freertos.c ****     }
 599:Src/freertos.c **** 
 600:Src/freertos.c ****     deplacement(0,1);
 2158              		.loc 1 600 0
 2159 001c 0020     		movs	r0, #0
 2160 001e 0121     		movs	r1, #1
 2161 0020 FFF7FEFF 		bl	deplacement
 2162              	.LVL222:
 601:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2163              		.loc 1 601 0
 2164 0024 03E0     		b	.L201
 2165              	.L202:
 602:Src/freertos.c ****     {
 603:Src/freertos.c ****         osDelay(1000);
 2166              		.loc 1 603 0
 2167 0026 4FF47A70 		mov	r0, #1000
 2168 002a FFF7FEFF 		bl	osDelay
 2169              	.LVL223:
 2170              	.L201:
 601:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2171              		.loc 1 601 0
 2172 002e 364B     		ldr	r3, .L220
 2173 0030 1B68     		ldr	r3, [r3]
 2174 0032 012B     		cmp	r3, #1
 2175 0034 F7D1     		bne	.L202
 604:Src/freertos.c ****     }
 605:Src/freertos.c **** 
 606:Src/freertos.c ****     deplacement(1,0);
 2176              		.loc 1 606 0
 2177 0036 0120     		movs	r0, #1
 2178 0038 0021     		movs	r1, #0
 2179 003a FFF7FEFF 		bl	deplacement
 2180              	.LVL224:
 607:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2181              		.loc 1 607 0
 2182 003e 03E0     		b	.L203
 2183              	.L204:
 608:Src/freertos.c ****     {
 609:Src/freertos.c ****         osDelay(1000);
ARM GAS  /tmp/ccc1QhbW.s 			page 49


 2184              		.loc 1 609 0
 2185 0040 4FF47A70 		mov	r0, #1000
 2186 0044 FFF7FEFF 		bl	osDelay
 2187              	.LVL225:
 2188              	.L203:
 607:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2189              		.loc 1 607 0
 2190 0048 2F4B     		ldr	r3, .L220
 2191 004a 1B68     		ldr	r3, [r3]
 2192 004c 012B     		cmp	r3, #1
 2193 004e F7D1     		bne	.L204
 610:Src/freertos.c ****     }
 611:Src/freertos.c **** 
 612:Src/freertos.c ****     deplacement(0,1);
 2194              		.loc 1 612 0
 2195 0050 0020     		movs	r0, #0
 2196 0052 0121     		movs	r1, #1
 2197 0054 FFF7FEFF 		bl	deplacement
 2198              	.LVL226:
 613:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2199              		.loc 1 613 0
 2200 0058 03E0     		b	.L205
 2201              	.L206:
 614:Src/freertos.c ****     {
 615:Src/freertos.c ****         osDelay(1000);
 2202              		.loc 1 615 0
 2203 005a 4FF47A70 		mov	r0, #1000
 2204 005e FFF7FEFF 		bl	osDelay
 2205              	.LVL227:
 2206              	.L205:
 613:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2207              		.loc 1 613 0
 2208 0062 294B     		ldr	r3, .L220
 2209 0064 1B68     		ldr	r3, [r3]
 2210 0066 012B     		cmp	r3, #1
 2211 0068 F7D1     		bne	.L206
 616:Src/freertos.c ****     }
 617:Src/freertos.c **** 
 618:Src/freertos.c ****     deplacement(1,0);
 2212              		.loc 1 618 0
 2213 006a 0120     		movs	r0, #1
 2214 006c 0021     		movs	r1, #0
 2215 006e FFF7FEFF 		bl	deplacement
 2216              	.LVL228:
 619:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2217              		.loc 1 619 0
 2218 0072 03E0     		b	.L207
 2219              	.L208:
 620:Src/freertos.c ****     {
 621:Src/freertos.c ****         osDelay(1000);
 2220              		.loc 1 621 0
 2221 0074 4FF47A70 		mov	r0, #1000
 2222 0078 FFF7FEFF 		bl	osDelay
 2223              	.LVL229:
 2224              	.L207:
 619:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2225              		.loc 1 619 0
ARM GAS  /tmp/ccc1QhbW.s 			page 50


 2226 007c 224B     		ldr	r3, .L220
 2227 007e 1B68     		ldr	r3, [r3]
 2228 0080 012B     		cmp	r3, #1
 2229 0082 F7D1     		bne	.L208
 622:Src/freertos.c ****     }
 623:Src/freertos.c **** 
 624:Src/freertos.c ****     deplacement(0,1);
 2230              		.loc 1 624 0
 2231 0084 0020     		movs	r0, #0
 2232 0086 0121     		movs	r1, #1
 2233 0088 FFF7FEFF 		bl	deplacement
 2234              	.LVL230:
 625:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2235              		.loc 1 625 0
 2236 008c 03E0     		b	.L209
 2237              	.L210:
 626:Src/freertos.c ****     {
 627:Src/freertos.c ****         osDelay(1000);
 2238              		.loc 1 627 0
 2239 008e 4FF47A70 		mov	r0, #1000
 2240 0092 FFF7FEFF 		bl	osDelay
 2241              	.LVL231:
 2242              	.L209:
 625:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2243              		.loc 1 625 0
 2244 0096 1C4B     		ldr	r3, .L220
 2245 0098 1B68     		ldr	r3, [r3]
 2246 009a 012B     		cmp	r3, #1
 2247 009c F7D1     		bne	.L210
 628:Src/freertos.c ****     }
 629:Src/freertos.c **** 
 630:Src/freertos.c ****     deplacement(1,0);
 2248              		.loc 1 630 0
 2249 009e 0120     		movs	r0, #1
 2250 00a0 0021     		movs	r1, #0
 2251 00a2 FFF7FEFF 		bl	deplacement
 2252              	.LVL232:
 631:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2253              		.loc 1 631 0
 2254 00a6 03E0     		b	.L211
 2255              	.L212:
 632:Src/freertos.c ****     {
 633:Src/freertos.c ****         osDelay(1000);
 2256              		.loc 1 633 0
 2257 00a8 4FF47A70 		mov	r0, #1000
 2258 00ac FFF7FEFF 		bl	osDelay
 2259              	.LVL233:
 2260              	.L211:
 631:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2261              		.loc 1 631 0
 2262 00b0 154B     		ldr	r3, .L220
 2263 00b2 1B68     		ldr	r3, [r3]
 2264 00b4 012B     		cmp	r3, #1
 2265 00b6 F7D1     		bne	.L212
 634:Src/freertos.c ****     }
 635:Src/freertos.c **** 
 636:Src/freertos.c ****     deplacement(0,1);
ARM GAS  /tmp/ccc1QhbW.s 			page 51


 2266              		.loc 1 636 0
 2267 00b8 0020     		movs	r0, #0
 2268 00ba 0121     		movs	r1, #1
 2269 00bc FFF7FEFF 		bl	deplacement
 2270              	.LVL234:
 637:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2271              		.loc 1 637 0
 2272 00c0 03E0     		b	.L213
 2273              	.L214:
 638:Src/freertos.c ****     {
 639:Src/freertos.c ****         osDelay(1000);
 2274              		.loc 1 639 0
 2275 00c2 4FF47A70 		mov	r0, #1000
 2276 00c6 FFF7FEFF 		bl	osDelay
 2277              	.LVL235:
 2278              	.L213:
 637:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2279              		.loc 1 637 0
 2280 00ca 0F4B     		ldr	r3, .L220
 2281 00cc 1B68     		ldr	r3, [r3]
 2282 00ce 012B     		cmp	r3, #1
 2283 00d0 F7D1     		bne	.L214
 640:Src/freertos.c ****     }
 641:Src/freertos.c **** 
 642:Src/freertos.c ****     deplacement(1,0);
 2284              		.loc 1 642 0
 2285 00d2 0120     		movs	r0, #1
 2286 00d4 0021     		movs	r1, #0
 2287 00d6 FFF7FEFF 		bl	deplacement
 2288              	.LVL236:
 643:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2289              		.loc 1 643 0
 2290 00da 03E0     		b	.L215
 2291              	.L216:
 644:Src/freertos.c ****     {
 645:Src/freertos.c ****         osDelay(1000);
 2292              		.loc 1 645 0
 2293 00dc 4FF47A70 		mov	r0, #1000
 2294 00e0 FFF7FEFF 		bl	osDelay
 2295              	.LVL237:
 2296              	.L215:
 643:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2297              		.loc 1 643 0
 2298 00e4 084B     		ldr	r3, .L220
 2299 00e6 1B68     		ldr	r3, [r3]
 2300 00e8 012B     		cmp	r3, #1
 2301 00ea F7D1     		bne	.L216
 646:Src/freertos.c ****     }
 647:Src/freertos.c **** 
 648:Src/freertos.c ****     deplacement(0,1);
 2302              		.loc 1 648 0
 2303 00ec 0020     		movs	r0, #0
 2304 00ee 0121     		movs	r1, #1
 2305 00f0 FFF7FEFF 		bl	deplacement
 2306              	.LVL238:
 649:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2307              		.loc 1 649 0
ARM GAS  /tmp/ccc1QhbW.s 			page 52


 2308 00f4 03E0     		b	.L217
 2309              	.L218:
 650:Src/freertos.c ****     {
 651:Src/freertos.c ****         osDelay(1000);
 2310              		.loc 1 651 0
 2311 00f6 4FF47A70 		mov	r0, #1000
 2312 00fa FFF7FEFF 		bl	osDelay
 2313              	.LVL239:
 2314              	.L217:
 649:Src/freertos.c ****     while(flag_deplacement_fini != 1)
 2315              		.loc 1 649 0
 2316 00fe 024B     		ldr	r3, .L220
 2317 0100 1B68     		ldr	r3, [r3]
 2318 0102 012B     		cmp	r3, #1
 2319 0104 F7D1     		bne	.L218
 652:Src/freertos.c ****     }
 653:Src/freertos.c **** }
 2320              		.loc 1 653 0
 2321 0106 08BD     		pop	{r3, pc}
 2322              	.L221:
 2323              		.align	2
 2324              	.L220:
 2325 0108 00000000 		.word	.LANCHOR1
 2326              		.cfi_endproc
 2327              	.LFE165:
 2329              		.section	.text.avance_block,"ax",%progbits
 2330              		.align	2
 2331              		.global	avance_block
 2332              		.thumb
 2333              		.thumb_func
 2335              	avance_block:
 2336              	.LFB166:
 654:Src/freertos.c **** 
 655:Src/freertos.c **** void avance_block(){
 2337              		.loc 1 655 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341 0000 08B5     		push	{r3, lr}
 2342              	.LCFI39:
 2343              		.cfi_def_cfa_offset 8
 2344              		.cfi_offset 3, -8
 2345              		.cfi_offset 14, -4
 656:Src/freertos.c ****     while(!flag_present)
 2346              		.loc 1 656 0
 2347 0002 01E0     		b	.L223
 2348              	.L224:
 657:Src/freertos.c ****     {
 658:Src/freertos.c ****         //printf("avant ! \n\r");
 659:Src/freertos.c ****         avancer_robot();
 2349              		.loc 1 659 0
 2350 0004 FFF7FEFF 		bl	avancer_robot
 2351              	.LVL240:
 2352              	.L223:
 656:Src/freertos.c ****     while(!flag_present)
 2353              		.loc 1 656 0
 2354 0008 054B     		ldr	r3, .L226
ARM GAS  /tmp/ccc1QhbW.s 			page 53


 2355 000a 1B68     		ldr	r3, [r3]
 2356 000c 002B     		cmp	r3, #0
 2357 000e F9D0     		beq	.L224
 660:Src/freertos.c ****         //printf("Value 1: %d\n\r", flag_distance);
 661:Src/freertos.c ****         //printf("defini: %d\n\n\r", flag_deplacement_fini);
 662:Src/freertos.c ****     }
 663:Src/freertos.c ****     //printf("stop !\n\r");
 664:Src/freertos.c ****     flag_distance = 0;
 2358              		.loc 1 664 0
 2359 0010 0022     		movs	r2, #0
 2360 0012 044B     		ldr	r3, .L226+4
 2361 0014 1A60     		str	r2, [r3]
 665:Src/freertos.c ****     flag_deplacement_fini = 1;
 2362              		.loc 1 665 0
 2363 0016 0122     		movs	r2, #1
 2364 0018 034B     		ldr	r3, .L226+8
 2365 001a 1A60     		str	r2, [r3]
 2366 001c 08BD     		pop	{r3, pc}
 2367              	.L227:
 2368 001e 00BF     		.align	2
 2369              	.L226:
 2370 0020 00000000 		.word	.LANCHOR6
 2371 0024 00000000 		.word	.LANCHOR0
 2372 0028 00000000 		.word	.LANCHOR1
 2373              		.cfi_endproc
 2374              	.LFE166:
 2376              		.section	.text.motor,"ax",%progbits
 2377              		.align	2
 2378              		.global	motor
 2379              		.thumb
 2380              		.thumb_func
 2382              	motor:
 2383              	.LFB167:
 666:Src/freertos.c ****     //printf("Value 1: %d\n\r", flag_distance);
 667:Src/freertos.c ****     //printf("defini: %d\n\n\r", flag_deplacement_fini);
 668:Src/freertos.c **** }
 669:Src/freertos.c **** 
 670:Src/freertos.c **** /* END Fonctions IA */
 671:Src/freertos.c **** 
 672:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 673:Src/freertos.c **** 
 674:Src/freertos.c **** /* Hook prototypes */
 675:Src/freertos.c **** 
 676:Src/freertos.c **** /* USER CODE BEGIN Application */
 677:Src/freertos.c **** void motor(void const * argument)
 678:Src/freertos.c **** {
 2384              		.loc 1 678 0
 2385              		.cfi_startproc
 2386              		@ Volatile: function does not return.
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
 2389              	.LVL241:
 2390 0000 08B5     		push	{r3, lr}
 2391              	.LCFI40:
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 3, -8
 2394              		.cfi_offset 14, -4
ARM GAS  /tmp/ccc1QhbW.s 			page 54


 679:Src/freertos.c ****   /* USER CODE BEGIN motor */
 680:Src/freertos.c ****   UNUSED(argument);
 681:Src/freertos.c **** 
 682:Src/freertos.c ****   HAL_GPIO_WritePin(stby_GPIO_Port, stby_Pin, 1);
 2395              		.loc 1 682 0
 2396 0002 4FF09040 		mov	r0, #1207959552
 2397              	.LVL242:
 2398 0006 4FF48071 		mov	r1, #256
 2399 000a 0122     		movs	r2, #1
 2400 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2401              	.LVL243:
 683:Src/freertos.c ****   HAL_TIM_Base_Start(&htim3);
 2402              		.loc 1 683 0
 2403 0010 074C     		ldr	r4, .L231
 2404 0012 2046     		mov	r0, r4
 2405 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2406              	.LVL244:
 684:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 2407              		.loc 1 684 0
 2408 0018 2046     		mov	r0, r4
 2409 001a 0021     		movs	r1, #0
 2410 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2411              	.LVL245:
 685:Src/freertos.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 2412              		.loc 1 685 0
 2413 0020 2046     		mov	r0, r4
 2414 0022 0C21     		movs	r1, #12
 2415 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2416              	.LVL246:
 2417              	.L229:
 686:Src/freertos.c **** 
 687:Src/freertos.c ****   /* Infinite loop */
 688:Src/freertos.c ****   for(;;)
 689:Src/freertos.c ****   {
 690:Src/freertos.c ****     gestion_moteurs();
 2418              		.loc 1 690 0 discriminator 1
 2419 0028 FFF7FEFF 		bl	gestion_moteurs
 2420              	.LVL247:
 691:Src/freertos.c ****   }
 2421              		.loc 1 691 0 discriminator 1
 2422 002c FCE7     		b	.L229
 2423              	.L232:
 2424 002e 00BF     		.align	2
 2425              	.L231:
 2426 0030 00000000 		.word	htim3
 2427              		.cfi_endproc
 2428              	.LFE167:
 2430              		.section	.text.adcControl,"ax",%progbits
 2431              		.align	2
 2432              		.global	adcControl
 2433              		.thumb
 2434              		.thumb_func
 2436              	adcControl:
 2437              	.LFB168:
 692:Src/freertos.c ****   /* USER CODE END motor */
 693:Src/freertos.c **** }
 694:Src/freertos.c **** 
ARM GAS  /tmp/ccc1QhbW.s 			page 55


 695:Src/freertos.c **** void adcControl(void const * argument){
 2438              		.loc 1 695 0
 2439              		.cfi_startproc
 2440              		@ Volatile: function does not return.
 2441              		@ args = 0, pretend = 0, frame = 0
 2442              		@ frame_needed = 0, uses_anonymous_args = 0
 2443              	.LVL248:
 2444 0000 08B5     		push	{r3, lr}
 2445              	.LCFI41:
 2446              		.cfi_def_cfa_offset 8
 2447              		.cfi_offset 3, -8
 2448              		.cfi_offset 14, -4
 2449              	.LVL249:
 2450              	.L234:
 696:Src/freertos.c ****   /* USER CODE BEGIN adcControl */
 697:Src/freertos.c ****   /* Infinite loop */
 698:Src/freertos.c **** for(;;)
 699:Src/freertos.c ****  {
 700:Src/freertos.c ****    HAL_ADC_Start_IT(&hadc1);
 2451              		.loc 1 700 0 discriminator 1
 2452 0002 0348     		ldr	r0, .L236
 2453 0004 FFF7FEFF 		bl	HAL_ADC_Start_IT
 2454              	.LVL250:
 701:Src/freertos.c ****    estPresent();
 2455              		.loc 1 701 0 discriminator 1
 2456 0008 FFF7FEFF 		bl	estPresent
 2457              	.LVL251:
 702:Src/freertos.c ****  }
 2458              		.loc 1 702 0 discriminator 1
 2459 000c F9E7     		b	.L234
 2460              	.L237:
 2461 000e 00BF     		.align	2
 2462              	.L236:
 2463 0010 00000000 		.word	hadc1
 2464              		.cfi_endproc
 2465              	.LFE168:
 2467              		.section	.text.uart,"ax",%progbits
 2468              		.align	2
 2469              		.global	uart
 2470              		.thumb
 2471              		.thumb_func
 2473              	uart:
 2474              	.LFB169:
 703:Src/freertos.c **** }  /* USER CODE END adcControl */
 704:Src/freertos.c **** 
 705:Src/freertos.c **** void uart(void const * argument)
 706:Src/freertos.c **** {
 2475              		.loc 1 706 0
 2476              		.cfi_startproc
 2477              		@ Volatile: function does not return.
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
 2480              		@ link register save eliminated.
 2481              	.LVL252:
 2482              	.L239:
 707:Src/freertos.c ****   /* USER CODE BEGIN uart */
 708:Src/freertos.c ****   /* Infinite loop */
ARM GAS  /tmp/ccc1QhbW.s 			page 56


 709:Src/freertos.c ****   for(;;)
 710:Src/freertos.c ****   {
 711:Src/freertos.c **** 
 712:Src/freertos.c ****     //pivoter_droite();
 713:Src/freertos.c ****     //ok();
 714:Src/freertos.c ****     //WaitFor(OK);
 715:Src/freertos.c **** 
 716:Src/freertos.c ****    /* WaitFor(OK);
 717:Src/freertos.c ****     pivoter_droite();
 718:Src/freertos.c ****     ok();
 719:Src/freertos.c **** 
 720:Src/freertos.c ****     osDelay(1);*/
 721:Src/freertos.c ****   }
 2483              		.loc 1 721 0 discriminator 1
 2484 0000 FEE7     		b	.L239
 2485              		.cfi_endproc
 2486              	.LFE169:
 2488 0002 00BF     		.section	.text.ia,"ax",%progbits
 2489              		.align	2
 2490              		.global	ia
 2491              		.thumb
 2492              		.thumb_func
 2494              	ia:
 2495              	.LFB170:
 722:Src/freertos.c ****   /* USER CODE END uart */
 723:Src/freertos.c **** }
 724:Src/freertos.c **** 
 725:Src/freertos.c **** void ia(void const * argument)
 726:Src/freertos.c **** {
 2496              		.loc 1 726 0
 2497              		.cfi_startproc
 2498              		@ Volatile: function does not return.
 2499              		@ args = 0, pretend = 0, frame = 0
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 2501              	.LVL253:
 2502 0000 08B5     		push	{r3, lr}
 2503              	.LCFI42:
 2504              		.cfi_def_cfa_offset 8
 2505              		.cfi_offset 3, -8
 2506              		.cfi_offset 14, -4
 2507              	.LVL254:
 2508              	.L241:
 727:Src/freertos.c ****   /* USER CODE BEGIN ia */
 728:Src/freertos.c ****   /* Infinite loop */
 729:Src/freertos.c ****   for(;;)
 730:Src/freertos.c ****   {
 731:Src/freertos.c ****       avance_block();
 2509              		.loc 1 731 0 discriminator 1
 2510 0002 FFF7FEFF 		bl	avance_block
 2511              	.LVL255:
 732:Src/freertos.c ****       pivoter_droite();
 2512              		.loc 1 732 0 discriminator 1
 2513 0006 FFF7FEFF 		bl	pivoter_droite
 2514              	.LVL256:
 733:Src/freertos.c ****   }
 2515              		.loc 1 733 0 discriminator 1
 2516 000a FAE7     		b	.L241
ARM GAS  /tmp/ccc1QhbW.s 			page 57


 2517              		.cfi_endproc
 2518              	.LFE170:
 2520              		.comm	robot2,12,4
 2521              		.comm	robot1,12,4
 2522              		.global	flag_present
 2523              		.global	flag_cap
 2524              		.global	flag_distance
 2525              		.global	flag_gauche
 2526              		.global	flag_droite
 2527              		.global	flag_bas
 2528              		.global	flag_haut
 2529              		.global	flag_rotation_finie
 2530              		.global	flag_deplacement_fini
 2531              		.global	adcValue
 2532              		.global	flag_adc
 2533              		.section	.bss.flag_present,"aw",%nobits
 2534              		.align	2
 2535              		.set	.LANCHOR6,. + 0
 2538              	flag_present:
 2539 0000 00000000 		.space	4
 2540              		.section	.bss.flag_adc,"aw",%nobits
 2541              		.align	2
 2542              		.set	.LANCHOR5,. + 0
 2545              	flag_adc:
 2546 0000 00000000 		.space	4
 2547              		.section	.bss.flag_gauche,"aw",%nobits
 2548              		.align	2
 2549              		.set	.LANCHOR10,. + 0
 2552              	flag_gauche:
 2553 0000 00000000 		.space	4
 2554              		.section	.bss.flag_droite,"aw",%nobits
 2555              		.align	2
 2556              		.set	.LANCHOR9,. + 0
 2559              	flag_droite:
 2560 0000 00000000 		.space	4
 2561              		.section	.bss.flag_rotation_finie,"aw",%nobits
 2562              		.align	2
 2563              		.set	.LANCHOR3,. + 0
 2566              	flag_rotation_finie:
 2567 0000 00000000 		.space	4
 2568              		.section	.bss.flag_distance,"aw",%nobits
 2569              		.align	2
 2570              		.set	.LANCHOR0,. + 0
 2573              	flag_distance:
 2574 0000 00000000 		.space	4
 2575              		.section	.bss.flag_haut,"aw",%nobits
 2576              		.align	2
 2577              		.set	.LANCHOR7,. + 0
 2580              	flag_haut:
 2581 0000 00000000 		.space	4
 2582              		.section	.rodata.str1.4,"aMS",%progbits,1
 2583              		.align	2
 2584              	.LC0:
 2585 0000 56616C75 		.ascii	"Value 1: %d\012\015\000"
 2585      6520313A 
 2585      2025640A 
 2585      0D00
ARM GAS  /tmp/ccc1QhbW.s 			page 58


 2586 000e 0000     		.space	2
 2587              	.LC1:
 2588 0010 64656669 		.ascii	"defini: %d\012\012\015\000"
 2588      6E693A20 
 2588      25640A0A 
 2588      0D00
 2589 001e 0000     		.space	2
 2590              	.LC2:
 2591 0020 56616C75 		.ascii	"Value 2: %d\012\015\000"
 2591      6520323A 
 2591      2025640A 
 2591      0D00
 2592 002e 0000     		.space	2
 2593              	.LC3:
 2594 0030 56616C75 		.ascii	"Value 3: %d\012\015\000"
 2594      6520333A 
 2594      2025640A 
 2594      0D00
 2595              		.section	.bss.flag_cap,"aw",%nobits
 2596              		.align	2
 2597              		.set	.LANCHOR2,. + 0
 2600              	flag_cap:
 2601 0000 00000000 		.space	4
 2602              		.section	.bss.adcValue,"aw",%nobits
 2603              		.align	2
 2604              		.set	.LANCHOR4,. + 0
 2607              	adcValue:
 2608 0000 00000000 		.space	4
 2609              		.section	.bss.flag_deplacement_fini,"aw",%nobits
 2610              		.align	2
 2611              		.set	.LANCHOR1,. + 0
 2614              	flag_deplacement_fini:
 2615 0000 00000000 		.space	4
 2616              		.section	.bss.flag_bas,"aw",%nobits
 2617              		.align	2
 2618              		.set	.LANCHOR8,. + 0
 2621              	flag_bas:
 2622 0000 00000000 		.space	4
 2623              		.text
 2624              	.Letext0:
 2625              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2626              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2627              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2628              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2629              		.file 6 "/usr/include/newlib/sys/types.h"
 2630              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2631              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2632              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2633              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2634              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2635              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2636              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2637              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 2638              		.file 15 "/usr/include/newlib/time.h"
 2639              		.file 16 "/usr/include/newlib/stdlib.h"
 2640              		.file 17 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccc1QhbW.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccc1QhbW.s:21     .text.alumer_gauche:0000000000000000 $t
     /tmp/ccc1QhbW.s:26     .text.alumer_gauche:0000000000000000 alumer_gauche
     /tmp/ccc1QhbW.s:62     .text.alumer_gauche:0000000000000020 $d
     /tmp/ccc1QhbW.s:67     .text.alumer_droite:0000000000000000 $t
     /tmp/ccc1QhbW.s:72     .text.alumer_droite:0000000000000000 alumer_droite
     /tmp/ccc1QhbW.s:104    .text.alumer_droite:0000000000000024 $d
     /tmp/ccc1QhbW.s:109    .text.eteindre_gauche:0000000000000000 $t
     /tmp/ccc1QhbW.s:114    .text.eteindre_gauche:0000000000000000 eteindre_gauche
     /tmp/ccc1QhbW.s:142    .text.eteindre_gauche:000000000000001c $d
     /tmp/ccc1QhbW.s:147    .text.eteindre_droite:0000000000000000 $t
     /tmp/ccc1QhbW.s:152    .text.eteindre_droite:0000000000000000 eteindre_droite
     /tmp/ccc1QhbW.s:179    .text.eteindre_droite:000000000000001c $d
     /tmp/ccc1QhbW.s:184    .text.pwm_max:0000000000000000 $t
     /tmp/ccc1QhbW.s:189    .text.pwm_max:0000000000000000 pwm_max
     /tmp/ccc1QhbW.s:207    .text.pwm_max:0000000000000010 $d
     /tmp/ccc1QhbW.s:212    .text.accelerer:0000000000000000 $t
     /tmp/ccc1QhbW.s:217    .text.accelerer:0000000000000000 accelerer
     /tmp/ccc1QhbW.s:258    .text.accelerer:0000000000000020 $d
     /tmp/ccc1QhbW.s:263    .text.deccelerer:0000000000000000 $t
     /tmp/ccc1QhbW.s:268    .text.deccelerer:0000000000000000 deccelerer
     /tmp/ccc1QhbW.s:309    .text.deccelerer:0000000000000020 $d
     /tmp/ccc1QhbW.s:314    .text.avancer_robot:0000000000000000 $t
     /tmp/ccc1QhbW.s:319    .text.avancer_robot:0000000000000000 avancer_robot
     /tmp/ccc1QhbW.s:359    .text.reculer_robot:0000000000000000 $t
     /tmp/ccc1QhbW.s:364    .text.reculer_robot:0000000000000000 reculer_robot
     /tmp/ccc1QhbW.s:404    .text.pivoter_gauche:0000000000000000 $t
     /tmp/ccc1QhbW.s:409    .text.pivoter_gauche:0000000000000000 pivoter_gauche
     /tmp/ccc1QhbW.s:449    .text.pivoter_droite:0000000000000000 $t
     /tmp/ccc1QhbW.s:454    .text.pivoter_droite:0000000000000000 pivoter_droite
     /tmp/ccc1QhbW.s:494    .text.gestion_moteurs:0000000000000000 $t
     /tmp/ccc1QhbW.s:499    .text.gestion_moteurs:0000000000000000 gestion_moteurs
     /tmp/ccc1QhbW.s:588    .text.gestion_moteurs:000000000000006c $d
     /tmp/ccc1QhbW.s:596    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccc1QhbW.s:601    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccc1QhbW.s:626    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccc1QhbW.s:632    .text._write:0000000000000000 $t
     /tmp/ccc1QhbW.s:637    .text._write:0000000000000000 _write
     /tmp/ccc1QhbW.s:665    .text._write:0000000000000014 $d
     /tmp/ccc1QhbW.s:670    .text.distance:0000000000000000 $t
     /tmp/ccc1QhbW.s:675    .text.distance:0000000000000000 distance
     /tmp/ccc1QhbW.s:814    .text.distance:00000000000000a8 $d
     /tmp/ccc1QhbW.s:819    .text.estPresent:0000000000000000 $t
     /tmp/ccc1QhbW.s:824    .text.estPresent:0000000000000000 estPresent
     /tmp/ccc1QhbW.s:857    .text.estPresent:000000000000001c $d
     /tmp/ccc1QhbW.s:862    .text.EnvoiMessage:0000000000000000 $t
     /tmp/ccc1QhbW.s:867    .text.EnvoiMessage:0000000000000000 EnvoiMessage
     /tmp/ccc1QhbW.s:1013   .text.EnvoiMessage:00000000000000f8 $d
     /tmp/ccc1QhbW.s:1018   .text.ReceptionMessage:0000000000000000 $t
     /tmp/ccc1QhbW.s:1023   .text.ReceptionMessage:0000000000000000 ReceptionMessage
     /tmp/ccc1QhbW.s:1207   .text.ReceptionMessage:000000000000010c $d
     /tmp/ccc1QhbW.s:1213   .text.recoitpos:0000000000000000 $t
     /tmp/ccc1QhbW.s:1218   .text.recoitpos:0000000000000000 recoitpos
     /tmp/ccc1QhbW.s:1258   .text.recoitpos:0000000000000020 $d
                            *COM*:000000000000000c robot2
     /tmp/ccc1QhbW.s:1263   .text.envoipos:0000000000000000 $t
ARM GAS  /tmp/ccc1QhbW.s 			page 60


     /tmp/ccc1QhbW.s:1268   .text.envoipos:0000000000000000 envoipos
     /tmp/ccc1QhbW.s:1297   .text.Traduction:0000000000000000 $t
     /tmp/ccc1QhbW.s:1302   .text.Traduction:0000000000000000 Traduction
     /tmp/ccc1QhbW.s:1388   .text.Traduction:0000000000000068 $d
                            *COM*:000000000000000c robot1
     /tmp/ccc1QhbW.s:1399   .text.WaitFor:0000000000000000 $t
     /tmp/ccc1QhbW.s:1404   .text.WaitFor:0000000000000000 WaitFor
     /tmp/ccc1QhbW.s:1430   .text.TaPosition:0000000000000000 $t
     /tmp/ccc1QhbW.s:1435   .text.TaPosition:0000000000000000 TaPosition
     /tmp/ccc1QhbW.s:1455   .text.ok:0000000000000000 $t
     /tmp/ccc1QhbW.s:1460   .text.ok:0000000000000000 ok
     /tmp/ccc1QhbW.s:1480   .text.Monte:0000000000000000 $t
     /tmp/ccc1QhbW.s:1485   .text.Monte:0000000000000000 Monte
     /tmp/ccc1QhbW.s:1509   .text.Descend:0000000000000000 $t
     /tmp/ccc1QhbW.s:1514   .text.Descend:0000000000000000 Descend
     /tmp/ccc1QhbW.s:1538   .text.Droite:0000000000000000 $t
     /tmp/ccc1QhbW.s:1543   .text.Droite:0000000000000000 Droite
     /tmp/ccc1QhbW.s:1567   .text.Gauche:0000000000000000 $t
     /tmp/ccc1QhbW.s:1572   .text.Gauche:0000000000000000 Gauche
     /tmp/ccc1QhbW.s:1596   .text.DansUnCoin:0000000000000000 $t
     /tmp/ccc1QhbW.s:1601   .text.DansUnCoin:0000000000000000 DansUnCoin
     /tmp/ccc1QhbW.s:1621   .text.Trouve:0000000000000000 $t
     /tmp/ccc1QhbW.s:1626   .text.Trouve:0000000000000000 Trouve
     /tmp/ccc1QhbW.s:1646   .text.Random:0000000000000000 $t
     /tmp/ccc1QhbW.s:1651   .text.Random:0000000000000000 Random
     /tmp/ccc1QhbW.s:1712   .text.Random:0000000000000044 $d
     /tmp/ccc1QhbW.s:1717   .text.Non:0000000000000000 $t
     /tmp/ccc1QhbW.s:1722   .text.Non:0000000000000000 Non
     /tmp/ccc1QhbW.s:1742   .text.MemeCase:0000000000000000 $t
     /tmp/ccc1QhbW.s:1747   .text.MemeCase:0000000000000000 MemeCase
     /tmp/ccc1QhbW.s:1767   .text.TuEsCoin:0000000000000000 $t
     /tmp/ccc1QhbW.s:1772   .text.TuEsCoin:0000000000000000 TuEsCoin
     /tmp/ccc1QhbW.s:1792   .text.deplacement:0000000000000000 $t
     /tmp/ccc1QhbW.s:1797   .text.deplacement:0000000000000000 deplacement
     /tmp/ccc1QhbW.s:1848   .text.deplacement:0000000000000034 $d
     /tmp/ccc1QhbW.s:1856   .text.test1:0000000000000000 $t
     /tmp/ccc1QhbW.s:1861   .text.test1:0000000000000000 test1
     /tmp/ccc1QhbW.s:2052   .text.test1:0000000000000120 $d
     /tmp/ccc1QhbW.s:2062   .text.test2:0000000000000000 $t
     /tmp/ccc1QhbW.s:2067   .text.test2:0000000000000000 test2
     /tmp/ccc1QhbW.s:2119   .text.test2:000000000000003c $d
     /tmp/ccc1QhbW.s:2124   .text.test3:0000000000000000 $t
     /tmp/ccc1QhbW.s:2129   .text.test3:0000000000000000 test3
     /tmp/ccc1QhbW.s:2325   .text.test3:0000000000000108 $d
     /tmp/ccc1QhbW.s:2330   .text.avance_block:0000000000000000 $t
     /tmp/ccc1QhbW.s:2335   .text.avance_block:0000000000000000 avance_block
     /tmp/ccc1QhbW.s:2370   .text.avance_block:0000000000000020 $d
     /tmp/ccc1QhbW.s:2377   .text.motor:0000000000000000 $t
     /tmp/ccc1QhbW.s:2382   .text.motor:0000000000000000 motor
     /tmp/ccc1QhbW.s:2426   .text.motor:0000000000000030 $d
     /tmp/ccc1QhbW.s:2431   .text.adcControl:0000000000000000 $t
     /tmp/ccc1QhbW.s:2436   .text.adcControl:0000000000000000 adcControl
     /tmp/ccc1QhbW.s:2463   .text.adcControl:0000000000000010 $d
     /tmp/ccc1QhbW.s:2468   .text.uart:0000000000000000 $t
     /tmp/ccc1QhbW.s:2473   .text.uart:0000000000000000 uart
     /tmp/ccc1QhbW.s:2489   .text.ia:0000000000000000 $t
     /tmp/ccc1QhbW.s:2494   .text.ia:0000000000000000 ia
ARM GAS  /tmp/ccc1QhbW.s 			page 61


     /tmp/ccc1QhbW.s:2538   .bss.flag_present:0000000000000000 flag_present
     /tmp/ccc1QhbW.s:2600   .bss.flag_cap:0000000000000000 flag_cap
     /tmp/ccc1QhbW.s:2573   .bss.flag_distance:0000000000000000 flag_distance
     /tmp/ccc1QhbW.s:2552   .bss.flag_gauche:0000000000000000 flag_gauche
     /tmp/ccc1QhbW.s:2559   .bss.flag_droite:0000000000000000 flag_droite
     /tmp/ccc1QhbW.s:2621   .bss.flag_bas:0000000000000000 flag_bas
     /tmp/ccc1QhbW.s:2580   .bss.flag_haut:0000000000000000 flag_haut
     /tmp/ccc1QhbW.s:2566   .bss.flag_rotation_finie:0000000000000000 flag_rotation_finie
     /tmp/ccc1QhbW.s:2614   .bss.flag_deplacement_fini:0000000000000000 flag_deplacement_fini
     /tmp/ccc1QhbW.s:2607   .bss.adcValue:0000000000000000 adcValue
     /tmp/ccc1QhbW.s:2545   .bss.flag_adc:0000000000000000 flag_adc
     /tmp/ccc1QhbW.s:2534   .bss.flag_present:0000000000000000 $d
     /tmp/ccc1QhbW.s:2541   .bss.flag_adc:0000000000000000 $d
     /tmp/ccc1QhbW.s:2548   .bss.flag_gauche:0000000000000000 $d
     /tmp/ccc1QhbW.s:2555   .bss.flag_droite:0000000000000000 $d
     /tmp/ccc1QhbW.s:2562   .bss.flag_rotation_finie:0000000000000000 $d
     /tmp/ccc1QhbW.s:2569   .bss.flag_distance:0000000000000000 $d
     /tmp/ccc1QhbW.s:2576   .bss.flag_haut:0000000000000000 $d
     /tmp/ccc1QhbW.s:2583   .rodata.str1.4:0000000000000000 $d
     /tmp/ccc1QhbW.s:2596   .bss.flag_cap:0000000000000000 $d
     /tmp/ccc1QhbW.s:2603   .bss.adcValue:0000000000000000 $d
     /tmp/ccc1QhbW.s:2610   .bss.flag_deplacement_fini:0000000000000000 $d
     /tmp/ccc1QhbW.s:2617   .bss.flag_bas:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
htim3
osDelay
HAL_ADC_GetValue
HAL_UART_Transmit
huart2
huart1
HAL_UART_Receive
HAL_GPIO_TogglePin
time
srand
rand
printf
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
HAL_ADC_Start_IT
hadc1
