ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f3xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** UART_HandleTypeDef huart1;
  59:Src/main.c    **** 
  60:Src/main.c    **** osThreadId defaultTaskHandle;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** static void MX_GPIO_Init(void);
  70:Src/main.c    **** static void MX_USART1_UART_Init(void);
  71:Src/main.c    **** void StartDefaultTask(void const * argument);
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END 1 */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Src/main.c    ****   HAL_Init();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN Init */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the system clock */
  99:Src/main.c    ****   SystemClock_Config();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Initialize all configured peripherals */
 106:Src/main.c    ****   MX_GPIO_Init();
 107:Src/main.c    ****   MX_USART1_UART_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN 2 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 114:Src/main.c    ****   /* add mutexes, ... */
 115:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 118:Src/main.c    ****   /* add semaphores, ... */
 119:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 122:Src/main.c    ****   /* start timers, add new ones, ... */
 123:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Create the thread(s) */
 126:Src/main.c    ****   /* definition and creation of defaultTask */
 127:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 128:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 131:Src/main.c    ****   /* add threads, ... */
 132:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 135:Src/main.c    ****   /* add queues, ... */
 136:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 137:Src/main.c    ****  
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Start scheduler */
 140:Src/main.c    ****   osKernelStart();
 141:Src/main.c    ****   
 142:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* Infinite loop */
 145:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 146:Src/main.c    ****   while (1)
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 4


 147:Src/main.c    ****   {
 148:Src/main.c    ****   /* USER CODE END WHILE */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE BEGIN 3 */
 151:Src/main.c    **** 
 152:Src/main.c    ****   }
 153:Src/main.c    ****   /* USER CODE END 3 */
 154:Src/main.c    **** 
 155:Src/main.c    **** }
 156:Src/main.c    **** 
 157:Src/main.c    **** /** System Clock Configuration
 158:Src/main.c    **** */
 159:Src/main.c    **** void SystemClock_Config(void)
 160:Src/main.c    **** {
 161:Src/main.c    **** 
 162:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 163:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 164:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 167:Src/main.c    ****     */
 168:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 169:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 170:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Src/main.c    ****   {
 174:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 175:Src/main.c    ****   }
 176:Src/main.c    **** 
 177:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 178:Src/main.c    ****     */
 179:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 182:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 184:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 185:Src/main.c    **** 
 186:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 187:Src/main.c    ****   {
 188:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 189:Src/main.c    ****   }
 190:Src/main.c    **** 
 191:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 192:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 193:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 196:Src/main.c    ****   }
 197:Src/main.c    **** 
 198:Src/main.c    ****     /**Configure the Systick interrupt time 
 199:Src/main.c    ****     */
 200:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 201:Src/main.c    **** 
 202:Src/main.c    ****     /**Configure the Systick 
 203:Src/main.c    ****     */
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 5


 204:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 207:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 208:Src/main.c    **** }
 209:Src/main.c    **** 
 210:Src/main.c    **** /* USART1 init function */
 211:Src/main.c    **** static void MX_USART1_UART_Init(void)
 212:Src/main.c    **** {
 213:Src/main.c    **** 
 214:Src/main.c    ****   huart1.Instance = USART1;
 215:Src/main.c    ****   huart1.Init.BaudRate = 38400;
 216:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_7B;
 217:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 218:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 219:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 220:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 221:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 222:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 223:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 224:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 225:Src/main.c    ****   {
 226:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 227:Src/main.c    ****   }
 228:Src/main.c    **** 
 229:Src/main.c    **** }
 230:Src/main.c    **** 
 231:Src/main.c    **** /** Configure pins as 
 232:Src/main.c    ****         * Analog 
 233:Src/main.c    ****         * Input 
 234:Src/main.c    ****         * Output
 235:Src/main.c    ****         * EVENT_OUT
 236:Src/main.c    ****         * EXTI
 237:Src/main.c    ****      PA2   ------> USART2_TX
 238:Src/main.c    ****      PA15   ------> USART2_RX
 239:Src/main.c    **** */
 240:Src/main.c    **** static void MX_GPIO_Init(void)
 241:Src/main.c    **** {
  27              		.loc 1 241 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39              	.LBB2:
 242:Src/main.c    **** 
 243:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* GPIO Ports Clock Enable */
 246:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  40              		.loc 1 246 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 6


  41 0004 204B     		ldr	r3, .L3
  42 0006 5A69     		ldr	r2, [r3, #20]
  43 0008 42F48002 		orr	r2, r2, #4194304
  44 000c 5A61     		str	r2, [r3, #20]
  45 000e 5A69     		ldr	r2, [r3, #20]
  46 0010 02F48002 		and	r2, r2, #4194304
  47 0014 0192     		str	r2, [sp, #4]
  48 0016 019A     		ldr	r2, [sp, #4]
  49              	.LBE2:
  50              	.LBB3:
 247:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  51              		.loc 1 247 0
  52 0018 5A69     		ldr	r2, [r3, #20]
  53 001a 42F40032 		orr	r2, r2, #131072
  54 001e 5A61     		str	r2, [r3, #20]
  55 0020 5B69     		ldr	r3, [r3, #20]
  56 0022 03F40033 		and	r3, r3, #131072
  57 0026 0293     		str	r3, [sp, #8]
  58 0028 029B     		ldr	r3, [sp, #8]
  59              	.LBE3:
 248:Src/main.c    **** 
 249:Src/main.c    ****   /*Configure GPIO pin Output Level */
 250:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, del_Pin|Led_Pin, GPIO_PIN_RESET);
  60              		.loc 1 250 0
  61 002a 0022     		movs	r2, #0
  62 002c A021     		movs	r1, #160
  63 002e 4FF09040 		mov	r0, #1207959552
  64 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  65              	.LVL0:
 251:Src/main.c    **** 
 252:Src/main.c    ****   /*Configure GPIO pins : PA2 PA15 */
 253:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_15;
  66              		.loc 1 253 0
  67 0036 48F20403 		movw	r3, #32772
  68 003a 0393     		str	r3, [sp, #12]
 254:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  69              		.loc 1 254 0
  70 003c 0223     		movs	r3, #2
  71 003e 0493     		str	r3, [sp, #16]
 255:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  72              		.loc 1 255 0
  73 0040 0024     		movs	r4, #0
  74 0042 0594     		str	r4, [sp, #20]
 256:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  75              		.loc 1 256 0
  76 0044 0323     		movs	r3, #3
  77 0046 0693     		str	r3, [sp, #24]
 257:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  78              		.loc 1 257 0
  79 0048 0723     		movs	r3, #7
  80 004a 0793     		str	r3, [sp, #28]
 258:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  81              		.loc 1 258 0
  82 004c 03A9     		add	r1, sp, #12
  83 004e 4FF09040 		mov	r0, #1207959552
  84 0052 FFF7FEFF 		bl	HAL_GPIO_Init
  85              	.LVL1:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 7


 259:Src/main.c    **** 
 260:Src/main.c    ****   /*Configure GPIO pin : del_Pin */
 261:Src/main.c    ****   GPIO_InitStruct.Pin = del_Pin;
  86              		.loc 1 261 0
  87 0056 2023     		movs	r3, #32
  88 0058 0393     		str	r3, [sp, #12]
 262:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  89              		.loc 1 262 0
  90 005a 0123     		movs	r3, #1
  91 005c 0493     		str	r3, [sp, #16]
 263:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 263 0
  93 005e 0594     		str	r4, [sp, #20]
 264:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  94              		.loc 1 264 0
  95 0060 0694     		str	r4, [sp, #24]
 265:Src/main.c    ****   HAL_GPIO_Init(del_GPIO_Port, &GPIO_InitStruct);
  96              		.loc 1 265 0
  97 0062 03A9     		add	r1, sp, #12
  98 0064 4FF09040 		mov	r0, #1207959552
  99 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 100              	.LVL2:
 266:Src/main.c    **** 
 267:Src/main.c    ****   /*Configure GPIO pin : Led_Pin */
 268:Src/main.c    ****   GPIO_InitStruct.Pin = Led_Pin;
 101              		.loc 1 268 0
 102 006c 8023     		movs	r3, #128
 103 006e 0393     		str	r3, [sp, #12]
 269:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 104              		.loc 1 269 0
 105 0070 1123     		movs	r3, #17
 106 0072 0493     		str	r3, [sp, #16]
 270:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 107              		.loc 1 270 0
 108 0074 0594     		str	r4, [sp, #20]
 271:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 109              		.loc 1 271 0
 110 0076 0694     		str	r4, [sp, #24]
 272:Src/main.c    ****   HAL_GPIO_Init(Led_GPIO_Port, &GPIO_InitStruct);
 111              		.loc 1 272 0
 112 0078 03A9     		add	r1, sp, #12
 113 007a 4FF09040 		mov	r0, #1207959552
 114 007e FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL3:
 273:Src/main.c    **** 
 274:Src/main.c    **** }
 116              		.loc 1 274 0
 117 0082 08B0     		add	sp, sp, #32
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 8
 120              		@ sp needed
 121 0084 10BD     		pop	{r4, pc}
 122              	.L4:
 123 0086 00BF     		.align	2
 124              	.L3:
 125 0088 00100240 		.word	1073876992
 126              		.cfi_endproc
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 8


 127              	.LFE132:
 129              		.section	.text.StartDefaultTask,"ax",%progbits
 130              		.align	1
 131              		.global	StartDefaultTask
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	StartDefaultTask:
 138              	.LFB133:
 275:Src/main.c    **** 
 276:Src/main.c    **** /* USER CODE BEGIN 4 */
 277:Src/main.c    **** 
 278:Src/main.c    **** /* USER CODE END 4 */
 279:Src/main.c    **** 
 280:Src/main.c    **** /* StartDefaultTask function */
 281:Src/main.c    **** void StartDefaultTask(void const * argument)
 282:Src/main.c    **** {
 139              		.loc 1 282 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL4:
 144 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 20
 147              		.cfi_offset 4, -20
 148              		.cfi_offset 5, -16
 149              		.cfi_offset 6, -12
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 83B0     		sub	sp, sp, #12
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 32
 155 0004 4CE0     		b	.L6
 156              	.LVL5:
 157              	.L28:
 283:Src/main.c    ****   uint8_t a, b, c, k, ok, d, i, e, f, g, h, j;
 284:Src/main.c    ****   /* USER CODE BEGIN 5 */
 285:Src/main.c    ****   /* Infinite loop */
 286:Src/main.c    ****   for(;;)
 287:Src/main.c    ****   {
 288:Src/main.c    ****       k = 0x75;
 289:Src/main.c    ****       HAL_UART_Transmit(&huart1, &k, sizeof(k), 0xEEEE);
 290:Src/main.c    ****       HAL_UART_Receive(&huart1, &b, sizeof(k), 0xEEEE);
 291:Src/main.c    ****    ok = 1;
 158              		.loc 1 291 0
 159 0006 0125     		movs	r5, #1
 160 0008 72E0     		b	.L7
 161              	.LVL6:
 162              	.L29:
 292:Src/main.c    ****    a = b & 0x01;
 293:Src/main.c    ****    c = (b & 0x02);
 294:Src/main.c    ****    d =(b & 0x04);
 295:Src/main.c    ****    e = (b & 0x08);
 296:Src/main.c    ****    f = (b & 0x10);
 297:Src/main.c    ****    g = (b & 0x20);
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 9


 298:Src/main.c    ****    h = (b & 0x40);
 299:Src/main.c    ****    j = (b & 0x80);
 300:Src/main.c    **** 
 301:Src/main.c    ****    if ((a ^ (c/2)) != f/16) ok = 0;
 302:Src/main.c    ****     if ((d/4 ^ (c/2)) != g/32) ok = 0;
 303:Src/main.c    ****      if ((d/4 ^ (e/8)) != h/64) ok = 0;
 304:Src/main.c    ****       if ((a ^ (e/8)) != j/128) ok = 0;
 305:Src/main.c    **** 
 306:Src/main.c    ****     if (ok == 1) {
 307:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 163              		.loc 1 307 0
 164 000a 8021     		movs	r1, #128
 165 000c 4FF09040 		mov	r0, #1207959552
 166 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 167              	.LVL7:
 308:Src/main.c    ****         osDelay(1000);
 168              		.loc 1 308 0
 169 0014 4FF47A70 		mov	r0, #1000
 170 0018 FFF7FEFF 		bl	osDelay
 171              	.LVL8:
 309:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 172              		.loc 1 309 0
 173 001c 8021     		movs	r1, #128
 174 001e 4FF09040 		mov	r0, #1207959552
 175 0022 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 176              	.LVL9:
 310:Src/main.c    ****         osDelay(1000);
 177              		.loc 1 310 0
 178 0026 4FF47A70 		mov	r0, #1000
 179 002a FFF7FEFF 		bl	osDelay
 180              	.LVL10:
 311:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 181              		.loc 1 311 0
 182 002e 8021     		movs	r1, #128
 183 0030 4FF09040 		mov	r0, #1207959552
 184 0034 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 185              	.LVL11:
 312:Src/main.c    ****         osDelay(1000);
 186              		.loc 1 312 0
 187 0038 4FF47A70 		mov	r0, #1000
 188 003c FFF7FEFF 		bl	osDelay
 189              	.LVL12:
 313:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 190              		.loc 1 313 0
 191 0040 8021     		movs	r1, #128
 192 0042 4FF09040 		mov	r0, #1207959552
 193 0046 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 194              	.LVL13:
 314:Src/main.c    ****         osDelay(1000);}
 195              		.loc 1 314 0
 196 004a 4FF47A70 		mov	r0, #1000
 197 004e FFF7FEFF 		bl	osDelay
 198              	.LVL14:
 199 0052 8EE0     		b	.L12
 200              	.LVL15:
 201              	.L30:
 315:Src/main.c    ****     else
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 10


 316:Src/main.c    ****     {
 317:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 318:Src/main.c    ****         osDelay(1500);
 319:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 320:Src/main.c    ****         osDelay(1500);
 321:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 322:Src/main.c    ****         osDelay(1500);
 323:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 324:Src/main.c    ****         osDelay(1500);
 325:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 326:Src/main.c    ****         osDelay(1500);}
 327:Src/main.c    ****     i= 0x65;
 328:Src/main.c    ****   HAL_UART_Transmit(&huart1, &i, sizeof(k), 0xEEEE);
 329:Src/main.c    ****     HAL_UART_Receive(&huart1, &b, sizeof(k), 0xEEEE);
 330:Src/main.c    ****   ok = 1;
 202              		.loc 1 330 0
 203 0054 0125     		movs	r5, #1
 204 0056 B5E0     		b	.L13
 205              	.LVL16:
 206              	.L31:
 331:Src/main.c    ****   a = b & 0x01;
 332:Src/main.c    ****   c = (b & 0x02);
 333:Src/main.c    ****   d =(b & 0x04);
 334:Src/main.c    ****   e = (b & 0x08);
 335:Src/main.c    ****   f = (b & 0x10);
 336:Src/main.c    ****   g = (b & 0x20);
 337:Src/main.c    ****   h = (b & 0x40);
 338:Src/main.c    ****   j = (b & 0x80);
 339:Src/main.c    **** 
 340:Src/main.c    ****   if ((a ^ (c/2)) != f/16) ok = 0;
 341:Src/main.c    ****    if ((d/4 ^ (c/2)) != g/32) ok = 0;
 342:Src/main.c    ****     if ((d/4 ^ (e/8)) != h/64) ok = 0;
 343:Src/main.c    ****      if ((a ^ (e/8)) != j/128) ok = 0;
 344:Src/main.c    ****   if (ok == 1)
 345:Src/main.c    ****       {
 346:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 207              		.loc 1 346 0
 208 0058 8021     		movs	r1, #128
 209 005a 4FF09040 		mov	r0, #1207959552
 210 005e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 211              	.LVL17:
 347:Src/main.c    ****           osDelay(1000);
 212              		.loc 1 347 0
 213 0062 4FF47A70 		mov	r0, #1000
 214 0066 FFF7FEFF 		bl	osDelay
 215              	.LVL18:
 348:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 216              		.loc 1 348 0
 217 006a 8021     		movs	r1, #128
 218 006c 4FF09040 		mov	r0, #1207959552
 219 0070 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 220              	.LVL19:
 349:Src/main.c    ****           osDelay(1000);
 221              		.loc 1 349 0
 222 0074 4FF47A70 		mov	r0, #1000
 223 0078 FFF7FEFF 		bl	osDelay
 224              	.LVL20:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 11


 350:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 225              		.loc 1 350 0
 226 007c 8021     		movs	r1, #128
 227 007e 4FF09040 		mov	r0, #1207959552
 228 0082 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 229              	.LVL21:
 351:Src/main.c    ****           osDelay(1000);
 230              		.loc 1 351 0
 231 0086 4FF47A70 		mov	r0, #1000
 232 008a FFF7FEFF 		bl	osDelay
 233              	.LVL22:
 352:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 234              		.loc 1 352 0
 235 008e 8021     		movs	r1, #128
 236 0090 4FF09040 		mov	r0, #1207959552
 237 0094 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 238              	.LVL23:
 353:Src/main.c    ****           osDelay(1000);
 239              		.loc 1 353 0
 240 0098 4FF47A70 		mov	r0, #1000
 241 009c FFF7FEFF 		bl	osDelay
 242              	.LVL24:
 243              	.L6:
 288:Src/main.c    ****       HAL_UART_Transmit(&huart1, &k, sizeof(k), 0xEEEE);
 244              		.loc 1 288 0
 245 00a0 02A9     		add	r1, sp, #8
 246 00a2 7523     		movs	r3, #117
 247 00a4 01F8023D 		strb	r3, [r1, #-2]!
 289:Src/main.c    ****       HAL_UART_Receive(&huart1, &b, sizeof(k), 0xEEEE);
 248              		.loc 1 289 0
 249 00a8 674C     		ldr	r4, .L32
 250 00aa 4EF6EE63 		movw	r3, #61166
 251 00ae 0122     		movs	r2, #1
 252 00b0 2046     		mov	r0, r4
 253 00b2 FFF7FEFF 		bl	HAL_UART_Transmit
 254              	.LVL25:
 290:Src/main.c    ****    ok = 1;
 255              		.loc 1 290 0
 256 00b6 4EF6EE63 		movw	r3, #61166
 257 00ba 0122     		movs	r2, #1
 258 00bc 0DF10701 		add	r1, sp, #7
 259 00c0 2046     		mov	r0, r4
 260 00c2 FFF7FEFF 		bl	HAL_UART_Receive
 261              	.LVL26:
 292:Src/main.c    ****    c = (b & 0x02);
 262              		.loc 1 292 0
 263 00c6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 264 00ca 03F00101 		and	r1, r3, #1
 265              	.LVL27:
 294:Src/main.c    ****    e = (b & 0x08);
 266              		.loc 1 294 0
 267 00ce 03F00402 		and	r2, r3, #4
 268              	.LVL28:
 295:Src/main.c    ****    f = (b & 0x10);
 269              		.loc 1 295 0
 270 00d2 03F00800 		and	r0, r3, #8
 271              	.LVL29:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 12


 297:Src/main.c    ****    h = (b & 0x40);
 272              		.loc 1 297 0
 273 00d6 03F02007 		and	r7, r3, #32
 274              	.LVL30:
 298:Src/main.c    ****    j = (b & 0x80);
 275              		.loc 1 298 0
 276 00da 03F04006 		and	r6, r3, #64
 277              	.LVL31:
 301:Src/main.c    ****     if ((d/4 ^ (c/2)) != g/32) ok = 0;
 278              		.loc 1 301 0
 279 00de C3F34004 		ubfx	r4, r3, #1, #1
 280 00e2 81EA040E 		eor	lr, r1, r4
 281 00e6 C3F30015 		ubfx	r5, r3, #4, #1
 282 00ea AE45     		cmp	lr, r5
 283 00ec 8BD0     		beq	.L28
 284 00ee 0025     		movs	r5, #0
 285              	.L7:
 286              	.LVL32:
 302:Src/main.c    ****      if ((d/4 ^ (e/8)) != h/64) ok = 0;
 287              		.loc 1 302 0
 288 00f0 9208     		lsrs	r2, r2, #2
 289              	.LVL33:
 290 00f2 5440     		eors	r4, r4, r2
 291 00f4 B4EB571F 		cmp	r4, r7, lsr #5
 292 00f8 00D0     		beq	.L8
 293 00fa 0025     		movs	r5, #0
 294              	.LVL34:
 295              	.L8:
 303:Src/main.c    ****       if ((a ^ (e/8)) != j/128) ok = 0;
 296              		.loc 1 303 0
 297 00fc C008     		lsrs	r0, r0, #3
 298              	.LVL35:
 299 00fe 4240     		eors	r2, r2, r0
 300 0100 B2EB961F 		cmp	r2, r6, lsr #6
 301 0104 00D0     		beq	.L9
 302 0106 0025     		movs	r5, #0
 303              	.LVL36:
 304              	.L9:
 304:Src/main.c    **** 
 305              		.loc 1 304 0
 306 0108 4140     		eors	r1, r1, r0
 307              	.LVL37:
 308 010a B1EBD31F 		cmp	r1, r3, lsr #7
 309 010e 00D0     		beq	.L10
 310 0110 0025     		movs	r5, #0
 311              	.LVL38:
 312              	.L10:
 306:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, Led_Pin);
 313              		.loc 1 306 0
 314 0112 002D     		cmp	r5, #0
 315 0114 7FF479AF 		bne	.L29
 317:Src/main.c    ****         osDelay(1500);
 316              		.loc 1 317 0
 317 0118 2021     		movs	r1, #32
 318 011a 4FF09040 		mov	r0, #1207959552
 319 011e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 320              	.LVL39:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 13


 318:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 321              		.loc 1 318 0
 322 0122 40F2DC50 		movw	r0, #1500
 323 0126 FFF7FEFF 		bl	osDelay
 324              	.LVL40:
 319:Src/main.c    ****         osDelay(1500);
 325              		.loc 1 319 0
 326 012a 2021     		movs	r1, #32
 327 012c 4FF09040 		mov	r0, #1207959552
 328 0130 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 329              	.LVL41:
 320:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 330              		.loc 1 320 0
 331 0134 40F2DC50 		movw	r0, #1500
 332 0138 FFF7FEFF 		bl	osDelay
 333              	.LVL42:
 321:Src/main.c    ****         osDelay(1500);
 334              		.loc 1 321 0
 335 013c 2021     		movs	r1, #32
 336 013e 4FF09040 		mov	r0, #1207959552
 337 0142 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 338              	.LVL43:
 322:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 339              		.loc 1 322 0
 340 0146 40F2DC50 		movw	r0, #1500
 341 014a FFF7FEFF 		bl	osDelay
 342              	.LVL44:
 323:Src/main.c    ****         osDelay(1500);
 343              		.loc 1 323 0
 344 014e 2021     		movs	r1, #32
 345 0150 4FF09040 		mov	r0, #1207959552
 346 0154 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 347              	.LVL45:
 324:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOA, del_Pin);
 348              		.loc 1 324 0
 349 0158 40F2DC50 		movw	r0, #1500
 350 015c FFF7FEFF 		bl	osDelay
 351              	.LVL46:
 325:Src/main.c    ****         osDelay(1500);}
 352              		.loc 1 325 0
 353 0160 2021     		movs	r1, #32
 354 0162 4FF09040 		mov	r0, #1207959552
 355 0166 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 356              	.LVL47:
 326:Src/main.c    ****     i= 0x65;
 357              		.loc 1 326 0
 358 016a 40F2DC50 		movw	r0, #1500
 359 016e FFF7FEFF 		bl	osDelay
 360              	.LVL48:
 361              	.L12:
 327:Src/main.c    ****   HAL_UART_Transmit(&huart1, &i, sizeof(k), 0xEEEE);
 362              		.loc 1 327 0
 363 0172 02A9     		add	r1, sp, #8
 364 0174 6523     		movs	r3, #101
 365 0176 01F8033D 		strb	r3, [r1, #-3]!
 328:Src/main.c    ****     HAL_UART_Receive(&huart1, &b, sizeof(k), 0xEEEE);
 366              		.loc 1 328 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 14


 367 017a 334C     		ldr	r4, .L32
 368 017c 4EF6EE63 		movw	r3, #61166
 369 0180 0122     		movs	r2, #1
 370 0182 2046     		mov	r0, r4
 371 0184 FFF7FEFF 		bl	HAL_UART_Transmit
 372              	.LVL49:
 329:Src/main.c    ****   ok = 1;
 373              		.loc 1 329 0
 374 0188 4EF6EE63 		movw	r3, #61166
 375 018c 0122     		movs	r2, #1
 376 018e 0DF10701 		add	r1, sp, #7
 377 0192 2046     		mov	r0, r4
 378 0194 FFF7FEFF 		bl	HAL_UART_Receive
 379              	.LVL50:
 331:Src/main.c    ****   c = (b & 0x02);
 380              		.loc 1 331 0
 381 0198 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 382 019c 03F00101 		and	r1, r3, #1
 383              	.LVL51:
 333:Src/main.c    ****   e = (b & 0x08);
 384              		.loc 1 333 0
 385 01a0 03F00402 		and	r2, r3, #4
 386              	.LVL52:
 334:Src/main.c    ****   f = (b & 0x10);
 387              		.loc 1 334 0
 388 01a4 03F00800 		and	r0, r3, #8
 389              	.LVL53:
 336:Src/main.c    ****   h = (b & 0x40);
 390              		.loc 1 336 0
 391 01a8 03F02007 		and	r7, r3, #32
 392              	.LVL54:
 337:Src/main.c    ****   j = (b & 0x80);
 393              		.loc 1 337 0
 394 01ac 03F04006 		and	r6, r3, #64
 395              	.LVL55:
 340:Src/main.c    ****    if ((d/4 ^ (c/2)) != g/32) ok = 0;
 396              		.loc 1 340 0
 397 01b0 C3F34004 		ubfx	r4, r3, #1, #1
 398 01b4 81EA040E 		eor	lr, r1, r4
 399 01b8 C3F30015 		ubfx	r5, r3, #4, #1
 400 01bc AE45     		cmp	lr, r5
 401 01be 3FF449AF 		beq	.L30
 402 01c2 0025     		movs	r5, #0
 403              	.L13:
 404              	.LVL56:
 341:Src/main.c    ****     if ((d/4 ^ (e/8)) != h/64) ok = 0;
 405              		.loc 1 341 0
 406 01c4 9208     		lsrs	r2, r2, #2
 407              	.LVL57:
 408 01c6 5440     		eors	r4, r4, r2
 409 01c8 B4EB571F 		cmp	r4, r7, lsr #5
 410 01cc 00D0     		beq	.L14
 411 01ce 0025     		movs	r5, #0
 412              	.LVL58:
 413              	.L14:
 342:Src/main.c    ****      if ((a ^ (e/8)) != j/128) ok = 0;
 414              		.loc 1 342 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 15


 415 01d0 C008     		lsrs	r0, r0, #3
 416              	.LVL59:
 417 01d2 4240     		eors	r2, r2, r0
 418 01d4 B2EB961F 		cmp	r2, r6, lsr #6
 419 01d8 00D0     		beq	.L15
 420 01da 0025     		movs	r5, #0
 421              	.LVL60:
 422              	.L15:
 343:Src/main.c    ****   if (ok == 1)
 423              		.loc 1 343 0
 424 01dc 4140     		eors	r1, r1, r0
 425              	.LVL61:
 426 01de B1EBD31F 		cmp	r1, r3, lsr #7
 427 01e2 00D0     		beq	.L16
 428 01e4 0025     		movs	r5, #0
 429              	.LVL62:
 430              	.L16:
 344:Src/main.c    ****       {
 431              		.loc 1 344 0
 432 01e6 002D     		cmp	r5, #0
 433 01e8 7FF436AF 		bne	.L31
 354:Src/main.c    ****       }
 355:Src/main.c    ****   else
 356:Src/main.c    ****       {
 357:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, del_Pin);
 434              		.loc 1 357 0
 435 01ec 2021     		movs	r1, #32
 436 01ee 4FF09040 		mov	r0, #1207959552
 437 01f2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 438              	.LVL63:
 358:Src/main.c    ****           osDelay(1500);
 439              		.loc 1 358 0
 440 01f6 40F2DC50 		movw	r0, #1500
 441 01fa FFF7FEFF 		bl	osDelay
 442              	.LVL64:
 359:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, del_Pin);
 443              		.loc 1 359 0
 444 01fe 2021     		movs	r1, #32
 445 0200 4FF09040 		mov	r0, #1207959552
 446 0204 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 447              	.LVL65:
 360:Src/main.c    ****           osDelay(1500);
 448              		.loc 1 360 0
 449 0208 40F2DC50 		movw	r0, #1500
 450 020c FFF7FEFF 		bl	osDelay
 451              	.LVL66:
 361:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, del_Pin);
 452              		.loc 1 361 0
 453 0210 2021     		movs	r1, #32
 454 0212 4FF09040 		mov	r0, #1207959552
 455 0216 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 456              	.LVL67:
 362:Src/main.c    ****           osDelay(1500);
 457              		.loc 1 362 0
 458 021a 40F2DC50 		movw	r0, #1500
 459 021e FFF7FEFF 		bl	osDelay
 460              	.LVL68:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 16


 363:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, del_Pin);
 461              		.loc 1 363 0
 462 0222 2021     		movs	r1, #32
 463 0224 4FF09040 		mov	r0, #1207959552
 464 0228 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 465              	.LVL69:
 364:Src/main.c    ****           osDelay(1500);
 466              		.loc 1 364 0
 467 022c 40F2DC50 		movw	r0, #1500
 468 0230 FFF7FEFF 		bl	osDelay
 469              	.LVL70:
 365:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOA, del_Pin);
 470              		.loc 1 365 0
 471 0234 2021     		movs	r1, #32
 472 0236 4FF09040 		mov	r0, #1207959552
 473 023a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 474              	.LVL71:
 366:Src/main.c    ****           osDelay(1500);
 475              		.loc 1 366 0
 476 023e 40F2DC50 		movw	r0, #1500
 477 0242 FFF7FEFF 		bl	osDelay
 478              	.LVL72:
 479 0246 2BE7     		b	.L6
 480              	.L33:
 481              		.align	2
 482              	.L32:
 483 0248 00000000 		.word	huart1
 484              		.cfi_endproc
 485              	.LFE133:
 487              		.section	.text._Error_Handler,"ax",%progbits
 488              		.align	1
 489              		.global	_Error_Handler
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	_Error_Handler:
 496              	.LFB134:
 367:Src/main.c    ****       }
 368:Src/main.c    ****   }
 369:Src/main.c    **** }
 370:Src/main.c    **** /**
 371:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 372:Src/main.c    ****   * @param  None
 373:Src/main.c    ****   * @retval None
 374:Src/main.c    ****   */
 375:Src/main.c    **** void _Error_Handler(char * file, int line)
 376:Src/main.c    **** {
 497              		.loc 1 376 0
 498              		.cfi_startproc
 499              		@ Volatile: function does not return.
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL73:
 504              	.L35:
 505 0000 FEE7     		b	.L35
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 17


 506              		.cfi_endproc
 507              	.LFE134:
 509              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 510              		.align	1
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv4-sp-d16
 516              	MX_USART1_UART_Init:
 517              	.LFB131:
 212:Src/main.c    **** 
 518              		.loc 1 212 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 212:Src/main.c    **** 
 522              		.loc 1 212 0
 523 0000 08B5     		push	{r3, lr}
 524              	.LCFI5:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 3, -8
 527              		.cfi_offset 14, -4
 214:Src/main.c    ****   huart1.Init.BaudRate = 38400;
 528              		.loc 1 214 0
 529 0002 0D48     		ldr	r0, .L40
 530 0004 0D4B     		ldr	r3, .L40+4
 531 0006 0360     		str	r3, [r0]
 215:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_7B;
 532              		.loc 1 215 0
 533 0008 4FF41643 		mov	r3, #38400
 534 000c 4360     		str	r3, [r0, #4]
 216:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 535              		.loc 1 216 0
 536 000e 4FF08053 		mov	r3, #268435456
 537 0012 8360     		str	r3, [r0, #8]
 217:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 538              		.loc 1 217 0
 539 0014 0023     		movs	r3, #0
 540 0016 C360     		str	r3, [r0, #12]
 218:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 541              		.loc 1 218 0
 542 0018 0361     		str	r3, [r0, #16]
 219:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 543              		.loc 1 219 0
 544 001a 0C22     		movs	r2, #12
 545 001c 4261     		str	r2, [r0, #20]
 220:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 546              		.loc 1 220 0
 547 001e 8361     		str	r3, [r0, #24]
 221:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 548              		.loc 1 221 0
 549 0020 C361     		str	r3, [r0, #28]
 222:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 550              		.loc 1 222 0
 551 0022 0362     		str	r3, [r0, #32]
 223:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 552              		.loc 1 223 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 18


 553 0024 4362     		str	r3, [r0, #36]
 224:Src/main.c    ****   {
 554              		.loc 1 224 0
 555 0026 FFF7FEFF 		bl	HAL_UART_Init
 556              	.LVL74:
 557 002a 00B9     		cbnz	r0, .L39
 558 002c 08BD     		pop	{r3, pc}
 559              	.L39:
 226:Src/main.c    ****   }
 560              		.loc 1 226 0
 561 002e E221     		movs	r1, #226
 562 0030 0348     		ldr	r0, .L40+8
 563 0032 FFF7FEFF 		bl	_Error_Handler
 564              	.LVL75:
 565              	.L41:
 566 0036 00BF     		.align	2
 567              	.L40:
 568 0038 00000000 		.word	huart1
 569 003c 00380140 		.word	1073821696
 570 0040 00000000 		.word	.LC2
 571              		.cfi_endproc
 572              	.LFE131:
 574              		.section	.text.SystemClock_Config,"ax",%progbits
 575              		.align	1
 576              		.global	SystemClock_Config
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	SystemClock_Config:
 583              	.LFB130:
 160:Src/main.c    **** 
 584              		.loc 1 160 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 88
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 00B5     		push	{lr}
 589              	.LCFI6:
 590              		.cfi_def_cfa_offset 4
 591              		.cfi_offset 14, -4
 592 0002 97B0     		sub	sp, sp, #92
 593              	.LCFI7:
 594              		.cfi_def_cfa_offset 96
 168:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 595              		.loc 1 168 0
 596 0004 0223     		movs	r3, #2
 597 0006 0C93     		str	r3, [sp, #48]
 169:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 598              		.loc 1 169 0
 599 0008 0123     		movs	r3, #1
 600 000a 1093     		str	r3, [sp, #64]
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 601              		.loc 1 170 0
 602 000c 1023     		movs	r3, #16
 603 000e 1193     		str	r3, [sp, #68]
 171:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 604              		.loc 1 171 0
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 19


 605 0010 0023     		movs	r3, #0
 606 0012 1393     		str	r3, [sp, #76]
 172:Src/main.c    ****   {
 607              		.loc 1 172 0
 608 0014 0CA8     		add	r0, sp, #48
 609 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 610              	.LVL76:
 611 001a 30BB     		cbnz	r0, .L47
 179:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 612              		.loc 1 179 0
 613 001c 0F23     		movs	r3, #15
 614 001e 0793     		str	r3, [sp, #28]
 181:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 615              		.loc 1 181 0
 616 0020 0021     		movs	r1, #0
 617 0022 0891     		str	r1, [sp, #32]
 182:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 618              		.loc 1 182 0
 619 0024 0991     		str	r1, [sp, #36]
 183:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 620              		.loc 1 183 0
 621 0026 0A91     		str	r1, [sp, #40]
 184:Src/main.c    **** 
 622              		.loc 1 184 0
 623 0028 0B91     		str	r1, [sp, #44]
 186:Src/main.c    ****   {
 624              		.loc 1 186 0
 625 002a 07A8     		add	r0, sp, #28
 626 002c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 627              	.LVL77:
 628 0030 F8B9     		cbnz	r0, .L48
 191:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 629              		.loc 1 191 0
 630 0032 0123     		movs	r3, #1
 631 0034 0193     		str	r3, [sp, #4]
 192:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 632              		.loc 1 192 0
 633 0036 0023     		movs	r3, #0
 634 0038 0393     		str	r3, [sp, #12]
 193:Src/main.c    ****   {
 635              		.loc 1 193 0
 636 003a 01A8     		add	r0, sp, #4
 637 003c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 638              	.LVL78:
 639 0040 D8B9     		cbnz	r0, .L49
 200:Src/main.c    **** 
 640              		.loc 1 200 0
 641 0042 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 642              	.LVL79:
 643 0046 0F4B     		ldr	r3, .L50
 644 0048 A3FB0030 		umull	r3, r0, r3, r0
 645 004c 8009     		lsrs	r0, r0, #6
 646 004e FFF7FEFF 		bl	HAL_SYSTICK_Config
 647              	.LVL80:
 204:Src/main.c    **** 
 648              		.loc 1 204 0
 649 0052 0420     		movs	r0, #4
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 20


 650 0054 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 651              	.LVL81:
 207:Src/main.c    **** }
 652              		.loc 1 207 0
 653 0058 0022     		movs	r2, #0
 654 005a 0F21     		movs	r1, #15
 655 005c 4FF0FF30 		mov	r0, #-1
 656 0060 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 657              	.LVL82:
 208:Src/main.c    **** 
 658              		.loc 1 208 0
 659 0064 17B0     		add	sp, sp, #92
 660              	.LCFI8:
 661              		.cfi_remember_state
 662              		.cfi_def_cfa_offset 4
 663              		@ sp needed
 664 0066 5DF804FB 		ldr	pc, [sp], #4
 665              	.L47:
 666              	.LCFI9:
 667              		.cfi_restore_state
 174:Src/main.c    ****   }
 668              		.loc 1 174 0
 669 006a AE21     		movs	r1, #174
 670 006c 0648     		ldr	r0, .L50+4
 671 006e FFF7FEFF 		bl	_Error_Handler
 672              	.LVL83:
 673              	.L48:
 188:Src/main.c    ****   }
 674              		.loc 1 188 0
 675 0072 BC21     		movs	r1, #188
 676 0074 0448     		ldr	r0, .L50+4
 677 0076 FFF7FEFF 		bl	_Error_Handler
 678              	.LVL84:
 679              	.L49:
 195:Src/main.c    ****   }
 680              		.loc 1 195 0
 681 007a C321     		movs	r1, #195
 682 007c 0248     		ldr	r0, .L50+4
 683 007e FFF7FEFF 		bl	_Error_Handler
 684              	.LVL85:
 685              	.L51:
 686 0082 00BF     		.align	2
 687              	.L50:
 688 0084 D34D6210 		.word	274877907
 689 0088 00000000 		.word	.LC2
 690              		.cfi_endproc
 691              	.LFE130:
 693              		.section	.text.main,"ax",%progbits
 694              		.align	1
 695              		.global	main
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv4-sp-d16
 701              	main:
 702              	.LFB129:
  83:Src/main.c    **** 
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 21


 703              		.loc 1 83 0
 704              		.cfi_startproc
 705              		@ Volatile: function does not return.
 706              		@ args = 0, pretend = 0, frame = 24
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708 0000 00B5     		push	{lr}
 709              	.LCFI10:
 710              		.cfi_def_cfa_offset 4
 711              		.cfi_offset 14, -4
 712 0002 87B0     		sub	sp, sp, #28
 713              	.LCFI11:
 714              		.cfi_def_cfa_offset 32
  92:Src/main.c    **** 
 715              		.loc 1 92 0
 716 0004 FFF7FEFF 		bl	HAL_Init
 717              	.LVL86:
  99:Src/main.c    **** 
 718              		.loc 1 99 0
 719 0008 FFF7FEFF 		bl	SystemClock_Config
 720              	.LVL87:
 106:Src/main.c    ****   MX_USART1_UART_Init();
 721              		.loc 1 106 0
 722 000c FFF7FEFF 		bl	MX_GPIO_Init
 723              	.LVL88:
 107:Src/main.c    **** 
 724              		.loc 1 107 0
 725 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 726              	.LVL89:
 127:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 727              		.loc 1 127 0
 728 0014 01AC     		add	r4, sp, #4
 729 0016 074D     		ldr	r5, .L55
 730 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 731 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 732 001c 2B68     		ldr	r3, [r5]
 733 001e 2360     		str	r3, [r4]
 128:Src/main.c    **** 
 734              		.loc 1 128 0
 735 0020 0021     		movs	r1, #0
 736 0022 01A8     		add	r0, sp, #4
 737 0024 FFF7FEFF 		bl	osThreadCreate
 738              	.LVL90:
 739 0028 034B     		ldr	r3, .L55+4
 740 002a 1860     		str	r0, [r3]
 140:Src/main.c    ****   
 741              		.loc 1 140 0
 742 002c FFF7FEFF 		bl	osKernelStart
 743              	.LVL91:
 744              	.L53:
 745 0030 FEE7     		b	.L53
 746              	.L56:
 747 0032 00BF     		.align	2
 748              	.L55:
 749 0034 00000000 		.word	.LANCHOR0
 750 0038 00000000 		.word	defaultTaskHandle
 751              		.cfi_endproc
 752              	.LFE129:
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 22


 754              		.comm	defaultTaskHandle,4,4
 755              		.comm	huart1,112,4
 756              		.section	.rodata
 757              		.align	2
 758              		.set	.LANCHOR0,. + 0
 759              	.LC3:
 760 0000 00000000 		.word	.LC0
 761 0004 00000000 		.word	StartDefaultTask
 762 0008 0000     		.short	0
 763 000a 0000     		.space	2
 764 000c 00000000 		.word	0
 765 0010 80000000 		.word	128
 766              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 767              		.align	2
 768              	.LC2:
 769 0000 5372632F 		.ascii	"Src/main.c\000"
 769      6D61696E 
 769      2E6300
 770              		.section	.rodata.str1.4,"aMS",%progbits,1
 771              		.align	2
 772              	.LC0:
 773 0000 64656661 		.ascii	"defaultTask\000"
 773      756C7454 
 773      61736B00 
 774              		.text
 775              	.Letext0:
 776              		.file 2 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\machine\\_default_types
 777              		.file 3 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\_stdint.h"
 778              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 779              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 780              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 781              		.file 7 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\lock.h"
 782              		.file 8 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\_types.h"
 783              		.file 9 "c:\\users\\victor\\desktop\\projet_robot\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef
 784              		.file 10 "c:\\users\\victor\\desktop\\projet_robot\\arm-none-eabi\\include\\sys\\reent.h"
 785              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 786              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 787              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 788              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 789              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 790              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 791              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 792              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 793              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 794              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\Victor\AppData\Local\Temp\ccwEk088.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:125    .text.MX_GPIO_Init:00000088 $d
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:130    .text.StartDefaultTask:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:137    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:483    .text.StartDefaultTask:00000248 $d
                            *COM*:00000070 huart1
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:488    .text._Error_Handler:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:495    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:510    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:516    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:568    .text.MX_USART1_UART_Init:00000038 $d
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:575    .text.SystemClock_Config:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:582    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:688    .text.SystemClock_Config:00000084 $d
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:694    .text.main:00000000 $t
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:701    .text.main:00000000 main
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:749    .text.main:00000034 $d
                            *COM*:00000004 defaultTaskHandle
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:757    .rodata:00000000 $d
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:767    .rodata.MX_USART1_UART_Init.str1.4:00000000 $d
C:\Users\Victor\AppData\Local\Temp\ccwEk088.s:771    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
osDelay
HAL_UART_Transmit
HAL_UART_Receive
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
osThreadCreate
osKernelStart
